{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "name",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "electionId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "requireRegitration",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "startElection",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "endElection",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "startRegistration",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "endRegistration",
          "type": "uint32"
        }
      ],
      "name": "ElectionCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "electionId",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "_candidateId",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_weight",
          "type": "uint256"
        }
      ],
      "name": "Voted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_electionId",
          "type": "uint32"
        },
        {
          "internalType": "uint8",
          "name": "_candidateId",
          "type": "uint8"
        }
      ],
      "name": "candidateExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "candidates",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "name",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "voteCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "candidatesIds",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "candidatesList",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_electionId",
          "type": "uint32"
        }
      ],
      "name": "checkElectionOpen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_electionId",
          "type": "uint32"
        }
      ],
      "name": "checkRegistrationOpen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_name",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "_requireRegitration",
          "type": "bool"
        },
        {
          "internalType": "bytes32[]",
          "name": "_candidates",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint32",
          "name": "_startElection",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "_endElection",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "_startRegistration",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "_endRegistration",
          "type": "uint32"
        }
      ],
      "name": "createElection",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_electionId",
          "type": "uint32"
        }
      ],
      "name": "electionExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_electionName",
          "type": "bytes32"
        }
      ],
      "name": "electionExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_electionId",
          "type": "uint32"
        },
        {
          "internalType": "bytes32",
          "name": "_candidatename",
          "type": "bytes32"
        }
      ],
      "name": "getCandidateId",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_electionId",
          "type": "uint32"
        }
      ],
      "name": "getCandidatesForElection",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentElections",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_electionId",
          "type": "uint32"
        }
      ],
      "name": "register",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_electionId",
          "type": "uint32"
        },
        {
          "internalType": "uint8",
          "name": "_candidateId",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "_weight",
          "type": "uint256"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_electionId",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "voter",
          "type": "address"
        }
      ],
      "name": "voterHasRegistred",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_electionId",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "voter",
          "type": "address"
        }
      ],
      "name": "voterHasVoted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "voters",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "weight",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "voted",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/SimpleElection.sol"
  },
  "ast": {
    "absolutePath": "contracts/SimpleElection.sol",
    "exportedSymbols": {
      "SimpleElection": [
        714
      ]
    },
    "id": 715,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SimpleElection",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 714,
        "linearizedBaseContracts": [
          714
        ],
        "name": "SimpleElection",
        "nameLocation": "66:14:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "SimpleElection.Election",
            "id": 18,
            "members": [
              {
                "constant": false,
                "id": 3,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "152:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "144:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 2,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "144:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 5,
                "mutability": "mutable",
                "name": "description",
                "nameLocation": "173:11:0",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "166:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 4,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "166:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "201:2:0",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "194:9:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 6,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "194:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9,
                "mutability": "mutable",
                "name": "requireRegitration",
                "nameLocation": "218:18:0",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "213:23:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 8,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "213:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11,
                "mutability": "mutable",
                "name": "startElection",
                "nameLocation": "253:13:0",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "246:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 10,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "246:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13,
                "mutability": "mutable",
                "name": "endElection",
                "nameLocation": "283:11:0",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "276:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 12,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "276:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15,
                "mutability": "mutable",
                "name": "startRegistration",
                "nameLocation": "311:17:0",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "304:24:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 14,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "304:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 17,
                "mutability": "mutable",
                "name": "endRegistration",
                "nameLocation": "345:15:0",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "338:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 16,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "338:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Election",
            "nameLocation": "125:8:0",
            "nodeType": "StructDefinition",
            "scope": 714,
            "src": "118:249:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 22,
            "mutability": "mutable",
            "name": "electionsIds",
            "nameLocation": "400:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 714,
            "src": "373:39:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint32_$",
              "typeString": "mapping(bytes32 => uint32)"
            },
            "typeName": {
              "id": 21,
              "keyType": {
                "id": 19,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "381:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "373:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint32_$",
                "typeString": "mapping(bytes32 => uint32)"
              },
              "valueType": {
                "id": 20,
                "name": "uint32",
                "nodeType": "ElementaryTypeName",
                "src": "392:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 25,
            "mutability": "mutable",
            "name": "currentElections",
            "nameLocation": "455:16:0",
            "nodeType": "VariableDeclaration",
            "scope": 714,
            "src": "446:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint32_$dyn_storage",
              "typeString": "uint32[]"
            },
            "typeName": {
              "baseType": {
                "id": 23,
                "name": "uint32",
                "nodeType": "ElementaryTypeName",
                "src": "446:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                }
              },
              "id": 24,
              "nodeType": "ArrayTypeName",
              "src": "446:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                "typeString": "uint32[]"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "SimpleElection.Candidate",
            "id": 30,
            "members": [
              {
                "constant": false,
                "id": 27,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "566:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 30,
                "src": "558:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 26,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "558:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 29,
                "mutability": "mutable",
                "name": "voteCount",
                "nameLocation": "611:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 30,
                "src": "603:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 28,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "603:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Candidate",
            "nameLocation": "538:9:0",
            "nodeType": "StructDefinition",
            "scope": 714,
            "src": "531:113:0",
            "visibility": "public"
          },
          {
            "canonicalName": "SimpleElection.Voter",
            "id": 35,
            "members": [
              {
                "constant": false,
                "id": 32,
                "mutability": "mutable",
                "name": "weight",
                "nameLocation": "708:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 35,
                "src": "700:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 31,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "700:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 34,
                "mutability": "mutable",
                "name": "voted",
                "nameLocation": "768:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 35,
                "src": "763:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 33,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "763:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Voter",
            "nameLocation": "684:5:0",
            "nodeType": "StructDefinition",
            "scope": 714,
            "src": "677:141:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 40,
            "mutability": "mutable",
            "name": "elections",
            "nameLocation": "883:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 714,
            "src": "855:37:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Election_$18_storage_$",
              "typeString": "mapping(uint32 => struct SimpleElection.Election)"
            },
            "typeName": {
              "id": 39,
              "keyType": {
                "id": 36,
                "name": "uint32",
                "nodeType": "ElementaryTypeName",
                "src": "863:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                }
              },
              "nodeType": "Mapping",
              "src": "855:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Election_$18_storage_$",
                "typeString": "mapping(uint32 => struct SimpleElection.Election)"
              },
              "valueType": {
                "id": 38,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 37,
                  "name": "Election",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18,
                  "src": "873:8:0"
                },
                "referencedDeclaration": 18,
                "src": "873:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Election_$18_storage_ptr",
                  "typeString": "struct SimpleElection.Election"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "901ab94d",
            "id": 47,
            "mutability": "mutable",
            "name": "candidates",
            "nameLocation": "1004:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 714,
            "src": "950:64:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_uint8_$_t_struct$_Candidate_$30_storage_$_$",
              "typeString": "mapping(uint32 => mapping(uint8 => struct SimpleElection.Candidate))"
            },
            "typeName": {
              "id": 46,
              "keyType": {
                "id": 41,
                "name": "uint32",
                "nodeType": "ElementaryTypeName",
                "src": "958:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                }
              },
              "nodeType": "Mapping",
              "src": "950:46:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_uint8_$_t_struct$_Candidate_$30_storage_$_$",
                "typeString": "mapping(uint32 => mapping(uint8 => struct SimpleElection.Candidate))"
              },
              "valueType": {
                "id": 45,
                "keyType": {
                  "id": 42,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "976:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "nodeType": "Mapping",
                "src": "968:27:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Candidate_$30_storage_$",
                  "typeString": "mapping(uint8 => struct SimpleElection.Candidate)"
                },
                "valueType": {
                  "id": 44,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 43,
                    "name": "Candidate",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 30,
                    "src": "985:9:0"
                  },
                  "referencedDeclaration": 30,
                  "src": "985:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Candidate_$30_storage_ptr",
                    "typeString": "struct SimpleElection.Candidate"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "028ff9f3",
            "id": 53,
            "mutability": "mutable",
            "name": "candidatesIds",
            "nameLocation": "1073:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 714,
            "src": "1021:65:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_bytes32_$_t_uint8_$_$",
              "typeString": "mapping(uint32 => mapping(bytes32 => uint8))"
            },
            "typeName": {
              "id": 52,
              "keyType": {
                "id": 48,
                "name": "uint32",
                "nodeType": "ElementaryTypeName",
                "src": "1029:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                }
              },
              "nodeType": "Mapping",
              "src": "1021:44:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_bytes32_$_t_uint8_$_$",
                "typeString": "mapping(uint32 => mapping(bytes32 => uint8))"
              },
              "valueType": {
                "id": 51,
                "keyType": {
                  "id": 49,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1047:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "nodeType": "Mapping",
                "src": "1039:25:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint8_$",
                  "typeString": "mapping(bytes32 => uint8)"
                },
                "valueType": {
                  "id": 50,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1058:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "89f67182",
            "id": 58,
            "mutability": "mutable",
            "name": "candidatesList",
            "nameLocation": "1173:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 714,
            "src": "1139:48:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint32_$_t_array$_t_uint8_$dyn_storage_$",
              "typeString": "mapping(uint32 => uint8[])"
            },
            "typeName": {
              "id": 57,
              "keyType": {
                "id": 54,
                "name": "uint32",
                "nodeType": "ElementaryTypeName",
                "src": "1147:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                }
              },
              "nodeType": "Mapping",
              "src": "1139:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint32_$_t_array$_t_uint8_$dyn_storage_$",
                "typeString": "mapping(uint32 => uint8[])"
              },
              "valueType": {
                "baseType": {
                  "id": 55,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1157:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "id": 56,
                "nodeType": "ArrayTypeName",
                "src": "1157:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                  "typeString": "uint8[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "edfbf9b0",
            "id": 65,
            "mutability": "mutable",
            "name": "voters",
            "nameLocation": "1293:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 714,
            "src": "1241:58:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_address_$_t_struct$_Voter_$35_storage_$_$",
              "typeString": "mapping(uint32 => mapping(address => struct SimpleElection.Voter))"
            },
            "typeName": {
              "id": 64,
              "keyType": {
                "id": 59,
                "name": "uint32",
                "nodeType": "ElementaryTypeName",
                "src": "1249:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                }
              },
              "nodeType": "Mapping",
              "src": "1241:44:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_address_$_t_struct$_Voter_$35_storage_$_$",
                "typeString": "mapping(uint32 => mapping(address => struct SimpleElection.Voter))"
              },
              "valueType": {
                "id": 63,
                "keyType": {
                  "id": 60,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1267:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1259:25:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$35_storage_$",
                  "typeString": "mapping(address => struct SimpleElection.Voter)"
                },
                "valueType": {
                  "id": 62,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 61,
                    "name": "Voter",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 35,
                    "src": "1278:5:0"
                  },
                  "referencedDeclaration": 35,
                  "src": "1278:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Voter_$35_storage_ptr",
                    "typeString": "struct SimpleElection.Voter"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 67,
            "mutability": "mutable",
            "name": "electionNonce",
            "nameLocation": "1313:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 714,
            "src": "1306:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 66,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "1306:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 69,
            "mutability": "mutable",
            "name": "electionCount",
            "nameLocation": "1339:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 714,
            "src": "1332:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 68,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "1332:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 87,
            "name": "ElectionCreated",
            "nameLocation": "1365:15:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "1398:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "1390:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1390:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "description",
                  "nameLocation": "1419:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "1412:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1412:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "electionId",
                  "nameLocation": "1448:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "1440:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1440:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "requireRegitration",
                  "nameLocation": "1473:18:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "1468:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1468:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "startElection",
                  "nameLocation": "1508:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "1501:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1501:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "endElection",
                  "nameLocation": "1538:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "1531:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1531:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "startRegistration",
                  "nameLocation": "1566:17:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "1559:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1559:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "endRegistration",
                  "nameLocation": "1600:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "1593:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1593:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1380:241:0"
            },
            "src": "1359:263:0"
          },
          {
            "anonymous": false,
            "id": 97,
            "name": "Voted",
            "nameLocation": "1633:5:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "electionId",
                  "nameLocation": "1655:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "1648:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1648:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "voter",
                  "nameLocation": "1683:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "1675:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1675:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 93,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_candidateId",
                  "nameLocation": "1704:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "1698:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1698:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 95,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_weight",
                  "nameLocation": "1734:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "1726:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1726:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1638:109:0"
            },
            "src": "1627:121:0"
          },
          {
            "body": {
              "id": 108,
              "nodeType": "Block",
              "src": "1768:61:0",
              "statements": [
                {
                  "expression": {
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 100,
                      "name": "electionNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "1778:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1794:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1778:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 103,
                  "nodeType": "ExpressionStatement",
                  "src": "1778:17:0"
                },
                {
                  "expression": {
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 104,
                      "name": "electionCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "1805:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1821:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1805:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 107,
                  "nodeType": "ExpressionStatement",
                  "src": "1805:17:0"
                }
              ]
            },
            "id": 109,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1765:2:0"
            },
            "returnParameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1768:0:0"
            },
            "scope": 714,
            "src": "1754:75:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 216,
              "nodeType": "Block",
              "src": "2460:1057:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 130,
                            "name": "_candidates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 118,
                            "src": "2478:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          "id": 131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2478:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2499:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2478:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686572652073686f756c642062652061746c6561737420312063616e6469646174652e",
                        "id": 134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2502:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4b6983c2a40280353c7f445fb1342f20c07767a980000101a8cc9613ac2f8e06",
                          "typeString": "literal_string \"There should be atleast 1 candidate.\""
                        },
                        "value": "There should be atleast 1 candidate."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4b6983c2a40280353c7f445fb1342f20c07767a980000101a8cc9613ac2f8e06",
                          "typeString": "literal_string \"There should be atleast 1 candidate.\""
                        }
                      ],
                      "id": 129,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2470:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2470:71:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "2470:71:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2573:22:0",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 139,
                              "name": "_name",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 111,
                              "src": "2589:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 138,
                            "name": "electionExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              662,
                              677
                            ],
                            "referencedDeclaration": 662,
                            "src": "2574:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bool_$",
                              "typeString": "function (bytes32) view returns (bool)"
                            }
                          },
                          "id": 140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2574:21:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320656c656374696f6e20616c7265616479206578697374732c20706c656173652073656c656374206f74686572206e616d65",
                        "id": 142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2609:56:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e0af46e1ff22f0f678c3e63c2b5a97286c6601e48910911a6d0dd3d0eb0c8402",
                          "typeString": "literal_string \"This election already exists, please select other name\""
                        },
                        "value": "This election already exists, please select other name"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e0af46e1ff22f0f678c3e63c2b5a97286c6601e48910911a6d0dd3d0eb0c8402",
                          "typeString": "literal_string \"This election already exists, please select other name\""
                        }
                      ],
                      "id": 137,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2552:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2552:123:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 144,
                  "nodeType": "ExpressionStatement",
                  "src": "2552:123:0"
                },
                {
                  "assignments": [
                    146
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 146,
                      "mutability": "mutable",
                      "name": "electionId",
                      "nameLocation": "2692:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 216,
                      "src": "2685:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 145,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2685:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 148,
                  "initialValue": {
                    "id": 147,
                    "name": "electionNonce",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 67,
                    "src": "2705:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2685:33:0"
                },
                {
                  "expression": {
                    "id": 162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 149,
                        "name": "elections",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "2728:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Election_$18_storage_$",
                          "typeString": "mapping(uint32 => struct SimpleElection.Election storage ref)"
                        }
                      },
                      "id": 151,
                      "indexExpression": {
                        "id": 150,
                        "name": "electionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 146,
                        "src": "2738:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2728:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Election_$18_storage",
                        "typeString": "struct SimpleElection.Election storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 153,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 111,
                          "src": "2774:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 154,
                          "name": "_description",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 113,
                          "src": "2793:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 155,
                          "name": "electionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 146,
                          "src": "2819:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "id": 156,
                          "name": "_requireRegitration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 115,
                          "src": "2843:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "id": 157,
                          "name": "_startElection",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 120,
                          "src": "2876:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "id": 158,
                          "name": "_endElection",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 122,
                          "src": "2904:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "id": 159,
                          "name": "_startRegistration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 124,
                          "src": "2930:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "id": 160,
                          "name": "_endRegistration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 126,
                          "src": "2962:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "id": 152,
                        "name": "Election",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "2752:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Election_$18_storage_ptr_$",
                          "typeString": "type(struct SimpleElection.Election storage pointer)"
                        }
                      },
                      "id": 161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2752:236:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Election_$18_memory_ptr",
                        "typeString": "struct SimpleElection.Election memory"
                      }
                    },
                    "src": "2728:260:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Election_$18_storage",
                      "typeString": "struct SimpleElection.Election storage ref"
                    }
                  },
                  "id": 163,
                  "nodeType": "ExpressionStatement",
                  "src": "2728:260:0"
                },
                {
                  "expression": {
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 164,
                        "name": "electionsIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "2998:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint32_$",
                          "typeString": "mapping(bytes32 => uint32)"
                        }
                      },
                      "id": 166,
                      "indexExpression": {
                        "id": 165,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "3011:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2998:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 167,
                      "name": "electionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 146,
                      "src": "3020:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "2998:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 169,
                  "nodeType": "ExpressionStatement",
                  "src": "2998:32:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 173,
                        "name": "electionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 146,
                        "src": "3062:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "id": 170,
                        "name": "currentElections",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "3040:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_storage",
                          "typeString": "uint32[] storage ref"
                        }
                      },
                      "id": 172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3040:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint32_$dyn_storage_ptr_$_t_uint32_$returns$__$bound_to$_t_array$_t_uint32_$dyn_storage_ptr_$",
                        "typeString": "function (uint32[] storage pointer,uint32)"
                      }
                    },
                    "id": 174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3040:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 175,
                  "nodeType": "ExpressionStatement",
                  "src": "3040:33:0"
                },
                {
                  "body": {
                    "id": 197,
                    "nodeType": "Block",
                    "src": "3131:72:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 188,
                              "name": "electionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 146,
                              "src": "3158:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 189,
                                "name": "_candidates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 118,
                                "src": "3170:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                }
                              },
                              "id": 191,
                              "indexExpression": {
                                "id": 190,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 177,
                                "src": "3182:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3170:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "id": 194,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 192,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 177,
                                "src": "3186:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 193,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3190:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "3186:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "id": 187,
                            "name": "addCandidate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 253,
                            "src": "3145:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint32_$_t_bytes32_$_t_uint8_$returns$__$",
                              "typeString": "function (uint32,bytes32,uint8)"
                            }
                          },
                          "id": 195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3145:47:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 196,
                        "nodeType": "ExpressionStatement",
                        "src": "3145:47:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 180,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 177,
                      "src": "3102:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 181,
                        "name": "_candidates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 118,
                        "src": "3106:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "id": 182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3106:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3102:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 198,
                  "initializationExpression": {
                    "assignments": [
                      177
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 177,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3095:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 198,
                        "src": "3089:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 176,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3089:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 179,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3099:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3089:11:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3126:3:0",
                      "subExpression": {
                        "id": 184,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 177,
                        "src": "3126:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 186,
                    "nodeType": "ExpressionStatement",
                    "src": "3126:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "3084:119:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 200,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "3246:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 201,
                        "name": "_description",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 113,
                        "src": "3265:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 202,
                        "name": "electionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 146,
                        "src": "3291:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 203,
                        "name": "_requireRegitration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 115,
                        "src": "3315:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 204,
                        "name": "_startElection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120,
                        "src": "3348:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 205,
                        "name": "_endElection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122,
                        "src": "3376:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 206,
                        "name": "_startRegistration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 124,
                        "src": "3402:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 207,
                        "name": "_endRegistration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 126,
                        "src": "3434:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 199,
                      "name": "ElectionCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "3217:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_uint32_$_t_uint32_$_t_uint32_$_t_uint32_$returns$__$",
                        "typeString": "function (bytes32,string memory,uint256,bool,uint32,uint32,uint32,uint32)"
                      }
                    },
                    "id": 208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3217:243:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 209,
                  "nodeType": "EmitStatement",
                  "src": "3212:248:0"
                },
                {
                  "expression": {
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "3470:15:0",
                    "subExpression": {
                      "id": 210,
                      "name": "electionNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "3470:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 212,
                  "nodeType": "ExpressionStatement",
                  "src": "3470:15:0"
                },
                {
                  "expression": {
                    "id": 214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "3495:15:0",
                    "subExpression": {
                      "id": 213,
                      "name": "electionCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "3495:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 215,
                  "nodeType": "ExpressionStatement",
                  "src": "3495:15:0"
                }
              ]
            },
            "functionSelector": "8bc31c84",
            "id": 217,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createElection",
            "nameLocation": "1897:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 111,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1929:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 217,
                  "src": "1921:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1921:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 113,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "1981:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 217,
                  "src": "1967:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1967:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 115,
                  "mutability": "mutable",
                  "name": "_requireRegitration",
                  "nameLocation": "2024:19:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 217,
                  "src": "2019:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2019:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 118,
                  "mutability": "mutable",
                  "name": "_candidates",
                  "nameLocation": "2107:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 217,
                  "src": "2090:28:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 116,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2090:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 117,
                    "nodeType": "ArrayTypeName",
                    "src": "2090:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 120,
                  "mutability": "mutable",
                  "name": "_startElection",
                  "nameLocation": "2159:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 217,
                  "src": "2152:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 119,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2152:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 122,
                  "mutability": "mutable",
                  "name": "_endElection",
                  "nameLocation": "2233:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 217,
                  "src": "2226:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 121,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2226:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 124,
                  "mutability": "mutable",
                  "name": "_startRegistration",
                  "nameLocation": "2303:18:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 217,
                  "src": "2296:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2296:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 126,
                  "mutability": "mutable",
                  "name": "_endRegistration",
                  "nameLocation": "2385:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 217,
                  "src": "2378:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 125,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2378:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1911:541:0"
            },
            "returnParameters": {
              "id": 128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2460:0:0"
            },
            "scope": 714,
            "src": "1888:1629:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 252,
              "nodeType": "Block",
              "src": "3689:208:0",
              "statements": [
                {
                  "expression": {
                    "id": 235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 226,
                          "name": "candidates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "3699:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_uint8_$_t_struct$_Candidate_$30_storage_$_$",
                            "typeString": "mapping(uint32 => mapping(uint8 => struct SimpleElection.Candidate storage ref))"
                          }
                        },
                        "id": 229,
                        "indexExpression": {
                          "id": 227,
                          "name": "_electionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 219,
                          "src": "3710:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3699:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Candidate_$30_storage_$",
                          "typeString": "mapping(uint8 => struct SimpleElection.Candidate storage ref)"
                        }
                      },
                      "id": 230,
                      "indexExpression": {
                        "id": 228,
                        "name": "_candidateId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "3723:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3699:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Candidate_$30_storage",
                        "typeString": "struct SimpleElection.Candidate storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 232,
                          "name": "_candidateName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 221,
                          "src": "3749:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3765:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 231,
                        "name": "Candidate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "3739:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Candidate_$30_storage_ptr_$",
                          "typeString": "type(struct SimpleElection.Candidate storage pointer)"
                        }
                      },
                      "id": 234,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3739:28:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Candidate_$30_memory_ptr",
                        "typeString": "struct SimpleElection.Candidate memory"
                      }
                    },
                    "src": "3699:68:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Candidate_$30_storage",
                      "typeString": "struct SimpleElection.Candidate storage ref"
                    }
                  },
                  "id": 236,
                  "nodeType": "ExpressionStatement",
                  "src": "3699:68:0"
                },
                {
                  "expression": {
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 237,
                          "name": "candidatesIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53,
                          "src": "3777:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_bytes32_$_t_uint8_$_$",
                            "typeString": "mapping(uint32 => mapping(bytes32 => uint8))"
                          }
                        },
                        "id": 240,
                        "indexExpression": {
                          "id": 238,
                          "name": "_electionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 219,
                          "src": "3791:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3777:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint8_$",
                          "typeString": "mapping(bytes32 => uint8)"
                        }
                      },
                      "id": 241,
                      "indexExpression": {
                        "id": 239,
                        "name": "_candidateName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 221,
                        "src": "3804:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3777:42:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 242,
                      "name": "_candidateId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 223,
                      "src": "3822:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "3777:57:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 244,
                  "nodeType": "ExpressionStatement",
                  "src": "3777:57:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 249,
                        "name": "_candidateId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "3877:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 245,
                          "name": "candidatesList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58,
                          "src": "3844:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_array$_t_uint8_$dyn_storage_$",
                            "typeString": "mapping(uint32 => uint8[] storage ref)"
                          }
                        },
                        "id": 247,
                        "indexExpression": {
                          "id": 246,
                          "name": "_electionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 219,
                          "src": "3859:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3844:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_storage",
                          "typeString": "uint8[] storage ref"
                        }
                      },
                      "id": 248,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3844:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint8_$dyn_storage_ptr_$_t_uint8_$returns$__$bound_to$_t_array$_t_uint8_$dyn_storage_ptr_$",
                        "typeString": "function (uint8[] storage pointer,uint8)"
                      }
                    },
                    "id": 250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3844:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 251,
                  "nodeType": "ExpressionStatement",
                  "src": "3844:46:0"
                }
              ]
            },
            "id": 253,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addCandidate",
            "nameLocation": "3574:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 224,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 219,
                  "mutability": "mutable",
                  "name": "_electionId",
                  "nameLocation": "3603:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 253,
                  "src": "3596:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 218,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3596:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 221,
                  "mutability": "mutable",
                  "name": "_candidateName",
                  "nameLocation": "3632:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 253,
                  "src": "3624:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 220,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3624:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 223,
                  "mutability": "mutable",
                  "name": "_candidateId",
                  "nameLocation": "3662:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 253,
                  "src": "3656:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 222,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3656:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3586:94:0"
            },
            "returnParameters": {
              "id": 225,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3689:0:0"
            },
            "scope": 714,
            "src": "3565:332:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 385,
              "nodeType": "Block",
              "src": "4180:1427:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 266,
                            "name": "_electionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 255,
                            "src": "4213:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          ],
                          "id": 265,
                          "name": "electionExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            662,
                            677
                          ],
                          "referencedDeclaration": 677,
                          "src": "4198:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint32_$returns$_t_bool_$",
                            "typeString": "function (uint32) view returns (bool)"
                          }
                        },
                        "id": 267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4198:27:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520656c656374696f6e20646f65736e2774206578697374",
                        "id": 268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4227:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_034864c2a4d18a6906f69544dcf72229828b44176b7b5697c092924facb610e4",
                          "typeString": "literal_string \"The election doesn't exist\""
                        },
                        "value": "The election doesn't exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_034864c2a4d18a6906f69544dcf72229828b44176b7b5697c092924facb610e4",
                          "typeString": "literal_string \"The election doesn't exist\""
                        }
                      ],
                      "id": 264,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4190:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4190:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 270,
                  "nodeType": "ExpressionStatement",
                  "src": "4190:66:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 273,
                            "name": "_electionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 255,
                            "src": "4292:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          ],
                          "id": 272,
                          "name": "checkElectionOpen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 600,
                          "src": "4274:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint32_$returns$_t_bool_$",
                            "typeString": "function (uint32) view returns (bool)"
                          }
                        },
                        "id": 274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4274:30:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520656c656374696f6e20697320636c6f736564",
                        "id": 275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4306:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c778c928f6ac599abc58daacd0f0d3c4f9e6f8f31e3ed1804f028e8c18ba5c4d",
                          "typeString": "literal_string \"The election is closed\""
                        },
                        "value": "The election is closed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c778c928f6ac599abc58daacd0f0d3c4f9e6f8f31e3ed1804f028e8c18ba5c4d",
                          "typeString": "literal_string \"The election is closed\""
                        }
                      ],
                      "id": 271,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4266:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4266:65:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 277,
                  "nodeType": "ExpressionStatement",
                  "src": "4266:65:0"
                },
                {
                  "condition": {
                    "expression": {
                      "baseExpression": {
                        "id": 278,
                        "name": "elections",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "4345:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Election_$18_storage_$",
                          "typeString": "mapping(uint32 => struct SimpleElection.Election storage ref)"
                        }
                      },
                      "id": 280,
                      "indexExpression": {
                        "id": 279,
                        "name": "_electionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 255,
                        "src": "4355:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4345:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Election_$18_storage",
                        "typeString": "struct SimpleElection.Election storage ref"
                      }
                    },
                    "id": 281,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "requireRegitration",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 9,
                    "src": "4345:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 296,
                    "nodeType": "Block",
                    "src": "4539:59:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 292,
                              "name": "_electionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 255,
                              "src": "4567:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "id": 293,
                              "name": "_voter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 257,
                              "src": "4580:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 291,
                            "name": "registerVoter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 527,
                            "src": "4553:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint32_$_t_address_$returns$__$",
                              "typeString": "function (uint32,address)"
                            }
                          },
                          "id": 294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4553:34:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 295,
                        "nodeType": "ExpressionStatement",
                        "src": "4553:34:0"
                      }
                    ]
                  },
                  "id": 297,
                  "nodeType": "IfStatement",
                  "src": "4341:257:0",
                  "trueBody": {
                    "id": 290,
                    "nodeType": "Block",
                    "src": "4388:145:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 284,
                                  "name": "_electionId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 255,
                                  "src": "4445:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                {
                                  "id": 285,
                                  "name": "_voter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 257,
                                  "src": "4458:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 283,
                                "name": "voterHasRegistred",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 631,
                                "src": "4427:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint32_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (uint32,address) view returns (bool)"
                                }
                              },
                              "id": 286,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4427:38:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "566f746572206861736e27742072656769737465726564",
                              "id": 287,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4483:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1dc7424e5ca3061f214f0eb13fffa0ea58e7e1c701733232427e015e49e5f0fa",
                                "typeString": "literal_string \"Voter hasn't registered\""
                              },
                              "value": "Voter hasn't registered"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1dc7424e5ca3061f214f0eb13fffa0ea58e7e1c701733232427e015e49e5f0fa",
                                "typeString": "literal_string \"Voter hasn't registered\""
                              }
                            ],
                            "id": 282,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4402:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4402:120:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 289,
                        "nodeType": "ExpressionStatement",
                        "src": "4402:120:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4628:35:0",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 300,
                              "name": "_electionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 255,
                              "src": "4643:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "id": 301,
                              "name": "_voter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 257,
                              "src": "4656:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 299,
                            "name": "voterHasVoted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 648,
                            "src": "4629:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (uint32,address) view returns (bool)"
                            }
                          },
                          "id": 302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4629:34:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "566f7465722068617320616c726561647920566f74656421",
                        "id": 304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4677:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ccd73cde219917d9b9d1760b66dae1f5369051ed41ac40d279d9ca492f7f739d",
                          "typeString": "literal_string \"Voter has already Voted!\""
                        },
                        "value": "Voter has already Voted!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ccd73cde219917d9b9d1760b66dae1f5369051ed41ac40d279d9ca492f7f739d",
                          "typeString": "literal_string \"Voter has already Voted!\""
                        }
                      ],
                      "id": 298,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4607:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4607:106:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 306,
                  "nodeType": "ExpressionStatement",
                  "src": "4607:106:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 308,
                          "name": "_weight",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 261,
                          "src": "4744:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 309,
                                "name": "voters",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65,
                                "src": "4755:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_address_$_t_struct$_Voter_$35_storage_$_$",
                                  "typeString": "mapping(uint32 => mapping(address => struct SimpleElection.Voter storage ref))"
                                }
                              },
                              "id": 311,
                              "indexExpression": {
                                "id": 310,
                                "name": "_electionId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 255,
                                "src": "4762:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4755:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$35_storage_$",
                                "typeString": "mapping(address => struct SimpleElection.Voter storage ref)"
                              }
                            },
                            "id": 313,
                            "indexExpression": {
                              "id": 312,
                              "name": "_voter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 257,
                              "src": "4775:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4755:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Voter_$35_storage",
                              "typeString": "struct SimpleElection.Voter storage ref"
                            }
                          },
                          "id": 314,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "weight",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32,
                          "src": "4755:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4744:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "566f74657220646f206e6f74206861766520736f206d616e7920766f746573",
                        "id": 316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4803:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_545a7eafef7c30abf70f6de27f9beb20d8f64d8a983deb959bd5b78a3e6f3a38",
                          "typeString": "literal_string \"Voter do not have so many votes\""
                        },
                        "value": "Voter do not have so many votes"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_545a7eafef7c30abf70f6de27f9beb20d8f64d8a983deb959bd5b78a3e6f3a38",
                          "typeString": "literal_string \"Voter do not have so many votes\""
                        }
                      ],
                      "id": 307,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4723:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4723:123:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 318,
                  "nodeType": "ExpressionStatement",
                  "src": "4723:123:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 321,
                            "name": "_electionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 255,
                            "src": "4893:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "id": 322,
                            "name": "_candidateId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 259,
                            "src": "4906:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "id": 320,
                          "name": "candidateExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 697,
                          "src": "4877:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint32_$_t_uint8_$returns$_t_bool_$",
                            "typeString": "function (uint32,uint8) view returns (bool)"
                          }
                        },
                        "id": 323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4877:42:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642063616e64696461746520746f20566f746521",
                        "id": 324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4933:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a714742a815cefcbafea8497ded74fd5d7eb30d3ebe4061a5c39e19c226898df",
                          "typeString": "literal_string \"Invalid candidate to Vote!\""
                        },
                        "value": "Invalid candidate to Vote!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a714742a815cefcbafea8497ded74fd5d7eb30d3ebe4061a5c39e19c226898df",
                          "typeString": "literal_string \"Invalid candidate to Vote!\""
                        }
                      ],
                      "id": 319,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4856:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4856:115:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 326,
                  "nodeType": "ExpressionStatement",
                  "src": "4856:115:0"
                },
                {
                  "expression": {
                    "id": 341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 327,
                            "name": "candidates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47,
                            "src": "5036:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_uint8_$_t_struct$_Candidate_$30_storage_$_$",
                              "typeString": "mapping(uint32 => mapping(uint8 => struct SimpleElection.Candidate storage ref))"
                            }
                          },
                          "id": 330,
                          "indexExpression": {
                            "id": 328,
                            "name": "_electionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 255,
                            "src": "5047:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5036:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Candidate_$30_storage_$",
                            "typeString": "mapping(uint8 => struct SimpleElection.Candidate storage ref)"
                          }
                        },
                        "id": 331,
                        "indexExpression": {
                          "id": 329,
                          "name": "_candidateId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 259,
                          "src": "5060:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5036:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Candidate_$30_storage",
                          "typeString": "struct SimpleElection.Candidate storage ref"
                        }
                      },
                      "id": 332,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "voteCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29,
                      "src": "5036:47:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 333,
                              "name": "candidates",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47,
                              "src": "5098:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_uint8_$_t_struct$_Candidate_$30_storage_$_$",
                                "typeString": "mapping(uint32 => mapping(uint8 => struct SimpleElection.Candidate storage ref))"
                              }
                            },
                            "id": 335,
                            "indexExpression": {
                              "id": 334,
                              "name": "_electionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 255,
                              "src": "5109:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5098:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Candidate_$30_storage_$",
                              "typeString": "mapping(uint8 => struct SimpleElection.Candidate storage ref)"
                            }
                          },
                          "id": 337,
                          "indexExpression": {
                            "id": 336,
                            "name": "_candidateId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 259,
                            "src": "5122:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5098:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Candidate_$30_storage",
                            "typeString": "struct SimpleElection.Candidate storage ref"
                          }
                        },
                        "id": 338,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "voteCount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 29,
                        "src": "5098:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 339,
                        "name": "_weight",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 261,
                        "src": "5160:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5098:69:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5036:131:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 342,
                  "nodeType": "ExpressionStatement",
                  "src": "5036:131:0"
                },
                {
                  "expression": {
                    "id": 357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 343,
                            "name": "voters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65,
                            "src": "5230:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_address_$_t_struct$_Voter_$35_storage_$_$",
                              "typeString": "mapping(uint32 => mapping(address => struct SimpleElection.Voter storage ref))"
                            }
                          },
                          "id": 346,
                          "indexExpression": {
                            "id": 344,
                            "name": "_electionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 255,
                            "src": "5237:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5230:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$35_storage_$",
                            "typeString": "mapping(address => struct SimpleElection.Voter storage ref)"
                          }
                        },
                        "id": 347,
                        "indexExpression": {
                          "id": 345,
                          "name": "_voter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 257,
                          "src": "5250:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5230:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$35_storage",
                          "typeString": "struct SimpleElection.Voter storage ref"
                        }
                      },
                      "id": 348,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "weight",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32,
                      "src": "5230:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 356,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 349,
                              "name": "voters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65,
                              "src": "5279:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_address_$_t_struct$_Voter_$35_storage_$_$",
                                "typeString": "mapping(uint32 => mapping(address => struct SimpleElection.Voter storage ref))"
                              }
                            },
                            "id": 351,
                            "indexExpression": {
                              "id": 350,
                              "name": "_electionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 255,
                              "src": "5286:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5279:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$35_storage_$",
                              "typeString": "mapping(address => struct SimpleElection.Voter storage ref)"
                            }
                          },
                          "id": 353,
                          "indexExpression": {
                            "id": 352,
                            "name": "_voter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 257,
                            "src": "5299:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5279:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Voter_$35_storage",
                            "typeString": "struct SimpleElection.Voter storage ref"
                          }
                        },
                        "id": 354,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "weight",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32,
                        "src": "5279:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 355,
                        "name": "_weight",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 261,
                        "src": "5328:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5279:56:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5230:105:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 358,
                  "nodeType": "ExpressionStatement",
                  "src": "5230:105:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 359,
                            "name": "voters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65,
                            "src": "5430:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_address_$_t_struct$_Voter_$35_storage_$_$",
                              "typeString": "mapping(uint32 => mapping(address => struct SimpleElection.Voter storage ref))"
                            }
                          },
                          "id": 361,
                          "indexExpression": {
                            "id": 360,
                            "name": "_electionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 255,
                            "src": "5437:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5430:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$35_storage_$",
                            "typeString": "mapping(address => struct SimpleElection.Voter storage ref)"
                          }
                        },
                        "id": 363,
                        "indexExpression": {
                          "id": 362,
                          "name": "_voter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 257,
                          "src": "5450:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5430:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$35_storage",
                          "typeString": "struct SimpleElection.Voter storage ref"
                        }
                      },
                      "id": 364,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "weight",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32,
                      "src": "5430:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 365,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5468:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5430:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 377,
                  "nodeType": "IfStatement",
                  "src": "5426:110:0",
                  "trueBody": {
                    "id": 376,
                    "nodeType": "Block",
                    "src": "5471:65:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 367,
                                  "name": "voters",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 65,
                                  "src": "5485:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_address_$_t_struct$_Voter_$35_storage_$_$",
                                    "typeString": "mapping(uint32 => mapping(address => struct SimpleElection.Voter storage ref))"
                                  }
                                },
                                "id": 370,
                                "indexExpression": {
                                  "id": 368,
                                  "name": "_electionId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 255,
                                  "src": "5492:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5485:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$35_storage_$",
                                  "typeString": "mapping(address => struct SimpleElection.Voter storage ref)"
                                }
                              },
                              "id": 371,
                              "indexExpression": {
                                "id": 369,
                                "name": "_voter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 257,
                                "src": "5505:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5485:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Voter_$35_storage",
                                "typeString": "struct SimpleElection.Voter storage ref"
                              }
                            },
                            "id": 372,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "voted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34,
                            "src": "5485:33:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 373,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5521:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "5485:40:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 375,
                        "nodeType": "ExpressionStatement",
                        "src": "5485:40:0"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 379,
                        "name": "_electionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 255,
                        "src": "5557:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 380,
                        "name": "_voter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 257,
                        "src": "5570:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 381,
                        "name": "_candidateId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 259,
                        "src": "5578:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 382,
                        "name": "_weight",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 261,
                        "src": "5592:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 378,
                      "name": "Voted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "5551:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint32_$_t_address_$_t_uint8_$_t_uint256_$returns$__$",
                        "typeString": "function (uint32,address,uint8,uint256)"
                      }
                    },
                    "id": 383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5551:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 384,
                  "nodeType": "EmitStatement",
                  "src": "5546:54:0"
                }
              ]
            },
            "id": 386,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "voterVote",
            "nameLocation": "3963:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 255,
                  "mutability": "mutable",
                  "name": "_electionId",
                  "nameLocation": "3989:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 386,
                  "src": "3982:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 254,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3982:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 257,
                  "mutability": "mutable",
                  "name": "_voter",
                  "nameLocation": "4047:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 386,
                  "src": "4039:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 256,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4039:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 259,
                  "mutability": "mutable",
                  "name": "_candidateId",
                  "nameLocation": "4081:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 386,
                  "src": "4075:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 258,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4075:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 261,
                  "mutability": "mutable",
                  "name": "_weight",
                  "nameLocation": "4134:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 386,
                  "src": "4126:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 260,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4126:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3972:199:0"
            },
            "returnParameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4180:0:0"
            },
            "scope": 714,
            "src": "3954:1653:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 403,
              "nodeType": "Block",
              "src": "5827:74:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 396,
                        "name": "_electionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 388,
                        "src": "5847:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "expression": {
                          "id": 397,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5860:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5860:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 399,
                        "name": "_candidateId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 390,
                        "src": "5872:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 400,
                        "name": "_weight",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 392,
                        "src": "5886:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 395,
                      "name": "voterVote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 386,
                      "src": "5837:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint32_$_t_address_$_t_uint8_$_t_uint256_$returns$__$",
                        "typeString": "function (uint32,address,uint8,uint256)"
                      }
                    },
                    "id": 401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5837:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 402,
                  "nodeType": "ExpressionStatement",
                  "src": "5837:57:0"
                }
              ]
            },
            "functionSelector": "5b4206c4",
            "id": 404,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vote",
            "nameLocation": "5652:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 393,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 388,
                  "mutability": "mutable",
                  "name": "_electionId",
                  "nameLocation": "5673:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 404,
                  "src": "5666:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 387,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5666:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 390,
                  "mutability": "mutable",
                  "name": "_candidateId",
                  "nameLocation": "5729:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 404,
                  "src": "5723:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 389,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5723:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 392,
                  "mutability": "mutable",
                  "name": "_weight",
                  "nameLocation": "5782:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 404,
                  "src": "5774:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 391,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5774:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5656:163:0"
            },
            "returnParameters": {
              "id": 394,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5827:0:0"
            },
            "scope": 714,
            "src": "5643:258:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 448,
              "nodeType": "Block",
              "src": "6005:238:0",
              "statements": [
                {
                  "assignments": [
                    414
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 414,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "6032:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 448,
                      "src": "6015:23:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 412,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6015:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 413,
                        "nodeType": "ArrayTypeName",
                        "src": "6015:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 421,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 418,
                          "name": "currentElections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "6055:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint32_$dyn_storage",
                            "typeString": "uint32[] storage ref"
                          }
                        },
                        "id": 419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "6055:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "6041:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes32[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 415,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6045:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 416,
                        "nodeType": "ArrayTypeName",
                        "src": "6045:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      }
                    },
                    "id": 420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6041:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6015:64:0"
                },
                {
                  "body": {
                    "id": 444,
                    "nodeType": "Block",
                    "src": "6142:72:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 433,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 414,
                              "src": "6156:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            "id": 435,
                            "indexExpression": {
                              "id": 434,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 423,
                              "src": "6163:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6156:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 436,
                                "name": "elections",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40,
                                "src": "6168:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Election_$18_storage_$",
                                  "typeString": "mapping(uint32 => struct SimpleElection.Election storage ref)"
                                }
                              },
                              "id": 440,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 437,
                                  "name": "currentElections",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25,
                                  "src": "6178:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint32_$dyn_storage",
                                    "typeString": "uint32[] storage ref"
                                  }
                                },
                                "id": 439,
                                "indexExpression": {
                                  "id": 438,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 423,
                                  "src": "6195:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6178:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6168:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Election_$18_storage",
                                "typeString": "struct SimpleElection.Election storage ref"
                              }
                            },
                            "id": 441,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "name",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3,
                            "src": "6168:35:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "6156:47:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 443,
                        "nodeType": "ExpressionStatement",
                        "src": "6156:47:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 426,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 423,
                      "src": "6108:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 427,
                        "name": "currentElections",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "6112:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_storage",
                          "typeString": "uint32[] storage ref"
                        }
                      },
                      "id": 428,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6112:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6108:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 445,
                  "initializationExpression": {
                    "assignments": [
                      423
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 423,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6101:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 445,
                        "src": "6094:8:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 422,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6094:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 425,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 424,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6105:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6094:12:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6137:3:0",
                      "subExpression": {
                        "id": 430,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 423,
                        "src": "6137:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "id": 432,
                    "nodeType": "ExpressionStatement",
                    "src": "6137:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "6089:125:0"
                },
                {
                  "expression": {
                    "id": 446,
                    "name": "result",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 414,
                    "src": "6230:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "functionReturnParameters": 409,
                  "id": 447,
                  "nodeType": "Return",
                  "src": "6223:13:0"
                }
              ]
            },
            "functionSelector": "7133a501",
            "id": 449,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentElections",
            "nameLocation": "5944:19:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 405,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5963:2:0"
            },
            "returnParameters": {
              "id": 409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 408,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 449,
                  "src": "5987:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 406,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "5987:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 407,
                    "nodeType": "ArrayTypeName",
                    "src": "5987:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5986:18:0"
            },
            "scope": 714,
            "src": "5935:308:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 509,
              "nodeType": "Block",
              "src": "6412:387:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 459,
                            "name": "_electionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 451,
                            "src": "6445:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          ],
                          "id": 458,
                          "name": "electionExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            662,
                            677
                          ],
                          "referencedDeclaration": 677,
                          "src": "6430:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint32_$returns$_t_bool_$",
                            "typeString": "function (uint32) view returns (bool)"
                          }
                        },
                        "id": 460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6430:27:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520656c656374696f6e20646f65736e2774206578697374",
                        "id": 461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6459:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_034864c2a4d18a6906f69544dcf72229828b44176b7b5697c092924facb610e4",
                          "typeString": "literal_string \"The election doesn't exist\""
                        },
                        "value": "The election doesn't exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_034864c2a4d18a6906f69544dcf72229828b44176b7b5697c092924facb610e4",
                          "typeString": "literal_string \"The election doesn't exist\""
                        }
                      ],
                      "id": 457,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6422:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6422:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 463,
                  "nodeType": "ExpressionStatement",
                  "src": "6422:66:0"
                },
                {
                  "assignments": [
                    468
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 468,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "6515:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 509,
                      "src": "6498:23:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 466,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6498:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 467,
                        "nodeType": "ArrayTypeName",
                        "src": "6498:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 477,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 472,
                            "name": "candidatesList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "6551:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint32_$_t_array$_t_uint8_$dyn_storage_$",
                              "typeString": "mapping(uint32 => uint8[] storage ref)"
                            }
                          },
                          "id": 474,
                          "indexExpression": {
                            "id": 473,
                            "name": "_electionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 451,
                            "src": "6566:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6551:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_storage",
                            "typeString": "uint8[] storage ref"
                          }
                        },
                        "id": 475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "6551:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "6524:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes32[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 469,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6528:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 470,
                        "nodeType": "ArrayTypeName",
                        "src": "6528:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      }
                    },
                    "id": 476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6524:71:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6498:97:0"
                },
                {
                  "body": {
                    "expression": {
                      "id": 504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "baseExpression": {
                          "id": 491,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 468,
                          "src": "6680:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "id": 493,
                        "indexExpression": {
                          "id": 492,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 479,
                          "src": "6687:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "6680:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 494,
                              "name": "candidates",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47,
                              "src": "6692:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_uint8_$_t_struct$_Candidate_$30_storage_$_$",
                                "typeString": "mapping(uint32 => mapping(uint8 => struct SimpleElection.Candidate storage ref))"
                              }
                            },
                            "id": 496,
                            "indexExpression": {
                              "id": 495,
                              "name": "_electionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 451,
                              "src": "6703:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6692:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Candidate_$30_storage_$",
                              "typeString": "mapping(uint8 => struct SimpleElection.Candidate storage ref)"
                            }
                          },
                          "id": 502,
                          "indexExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 497,
                                "name": "candidatesList",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 58,
                                "src": "6716:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint32_$_t_array$_t_uint8_$dyn_storage_$",
                                  "typeString": "mapping(uint32 => uint8[] storage ref)"
                                }
                              },
                              "id": 499,
                              "indexExpression": {
                                "id": 498,
                                "name": "_electionId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 451,
                                "src": "6731:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6716:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint8_$dyn_storage",
                                "typeString": "uint8[] storage ref"
                              }
                            },
                            "id": 501,
                            "indexExpression": {
                              "id": 500,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 479,
                              "src": "6744:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6716:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6692:55:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Candidate_$30_storage",
                            "typeString": "struct SimpleElection.Candidate storage ref"
                          }
                        },
                        "id": 503,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "name",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 27,
                        "src": "6692:77:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "src": "6680:89:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 505,
                    "nodeType": "ExpressionStatement",
                    "src": "6680:89:0"
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 482,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 479,
                      "src": "6623:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 483,
                          "name": "candidatesList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58,
                          "src": "6627:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_array$_t_uint8_$dyn_storage_$",
                            "typeString": "mapping(uint32 => uint8[] storage ref)"
                          }
                        },
                        "id": 485,
                        "indexExpression": {
                          "id": 484,
                          "name": "_electionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 451,
                          "src": "6642:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6627:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_storage",
                          "typeString": "uint8[] storage ref"
                        }
                      },
                      "id": 486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6627:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6623:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 506,
                  "initializationExpression": {
                    "assignments": [
                      479
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 479,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6616:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 506,
                        "src": "6610:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 478,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "6610:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 481,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6620:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6610:11:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6663:3:0",
                      "subExpression": {
                        "id": 488,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 479,
                        "src": "6663:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 490,
                    "nodeType": "ExpressionStatement",
                    "src": "6663:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "6605:164:0"
                },
                {
                  "expression": {
                    "id": 507,
                    "name": "result",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 468,
                    "src": "6786:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "functionReturnParameters": 456,
                  "id": 508,
                  "nodeType": "Return",
                  "src": "6779:13:0"
                }
              ]
            },
            "functionSelector": "3ec4f362",
            "id": 510,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCandidatesForElection",
            "nameLocation": "6300:24:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 452,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 451,
                  "mutability": "mutable",
                  "name": "_electionId",
                  "nameLocation": "6332:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 510,
                  "src": "6325:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 450,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6325:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6324:20:0"
            },
            "returnParameters": {
              "id": 456,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 455,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 510,
                  "src": "6390:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 453,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "6390:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 454,
                    "nodeType": "ArrayTypeName",
                    "src": "6390:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6389:18:0"
            },
            "scope": 714,
            "src": "6291:508:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 526,
              "nodeType": "Block",
              "src": "6902:54:0",
              "statements": [
                {
                  "expression": {
                    "id": 524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 517,
                            "name": "voters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65,
                            "src": "6912:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_address_$_t_struct$_Voter_$35_storage_$_$",
                              "typeString": "mapping(uint32 => mapping(address => struct SimpleElection.Voter storage ref))"
                            }
                          },
                          "id": 520,
                          "indexExpression": {
                            "id": 518,
                            "name": "_electionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "6919:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6912:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$35_storage_$",
                            "typeString": "mapping(address => struct SimpleElection.Voter storage ref)"
                          }
                        },
                        "id": 521,
                        "indexExpression": {
                          "id": 519,
                          "name": "voter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 514,
                          "src": "6932:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6912:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$35_storage",
                          "typeString": "struct SimpleElection.Voter storage ref"
                        }
                      },
                      "id": 522,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "weight",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32,
                      "src": "6912:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 523,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6948:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "6912:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 525,
                  "nodeType": "ExpressionStatement",
                  "src": "6912:37:0"
                }
              ]
            },
            "id": 527,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerVoter",
            "nameLocation": "6845:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 515,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 512,
                  "mutability": "mutable",
                  "name": "_electionId",
                  "nameLocation": "6866:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 527,
                  "src": "6859:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 511,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6859:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 514,
                  "mutability": "mutable",
                  "name": "voter",
                  "nameLocation": "6887:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 527,
                  "src": "6879:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 513,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6879:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6858:35:0"
            },
            "returnParameters": {
              "id": 516,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6902:0:0"
            },
            "scope": 714,
            "src": "6836:120:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 545,
              "nodeType": "Block",
              "src": "7007:133:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 534,
                            "name": "_electionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 529,
                            "src": "7047:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          ],
                          "id": 533,
                          "name": "checkRegistrationOpen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 573,
                          "src": "7025:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint32_$returns$_t_bool_$",
                            "typeString": "function (uint32) view returns (bool)"
                          }
                        },
                        "id": 535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7025:34:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526567697374726174696f6e206e6f74206f70656e",
                        "id": 536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7061:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f76acb686b0feba5b6ccafe482da3e307d9765249a057db04db781c983566574",
                          "typeString": "literal_string \"Registration not open\""
                        },
                        "value": "Registration not open"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f76acb686b0feba5b6ccafe482da3e307d9765249a057db04db781c983566574",
                          "typeString": "literal_string \"Registration not open\""
                        }
                      ],
                      "id": 532,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7017:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7017:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 538,
                  "nodeType": "ExpressionStatement",
                  "src": "7017:68:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 540,
                        "name": "_electionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 529,
                        "src": "7109:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "expression": {
                          "id": 541,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7122:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7122:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 539,
                      "name": "registerVoter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 527,
                      "src": "7095:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint32_$_t_address_$returns$__$",
                        "typeString": "function (uint32,address)"
                      }
                    },
                    "id": 543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7095:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 544,
                  "nodeType": "ExpressionStatement",
                  "src": "7095:38:0"
                }
              ]
            },
            "functionSelector": "130d7906",
            "id": 546,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "register",
            "nameLocation": "6971:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 530,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 529,
                  "mutability": "mutable",
                  "name": "_electionId",
                  "nameLocation": "6987:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 546,
                  "src": "6980:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 528,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6980:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6979:20:0"
            },
            "returnParameters": {
              "id": 531,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7007:0:0"
            },
            "scope": 714,
            "src": "6962:178:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 572,
              "nodeType": "Block",
              "src": "7252:162:0",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 559,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 553,
                                    "name": "elections",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 40,
                                    "src": "7271:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Election_$18_storage_$",
                                      "typeString": "mapping(uint32 => struct SimpleElection.Election storage ref)"
                                    }
                                  },
                                  "id": 555,
                                  "indexExpression": {
                                    "id": 554,
                                    "name": "_electionId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 548,
                                    "src": "7281:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7271:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Election_$18_storage",
                                    "typeString": "struct SimpleElection.Election storage ref"
                                  }
                                },
                                "id": 556,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "startRegistration",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 15,
                                "src": "7271:40:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "id": 557,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "7315:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 558,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "7315:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7271:59:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 560,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7270:61:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 567,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 561,
                                    "name": "elections",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 40,
                                    "src": "7348:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Election_$18_storage_$",
                                      "typeString": "mapping(uint32 => struct SimpleElection.Election storage ref)"
                                    }
                                  },
                                  "id": 563,
                                  "indexExpression": {
                                    "id": 562,
                                    "name": "_electionId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 548,
                                    "src": "7358:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7348:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Election_$18_storage",
                                    "typeString": "struct SimpleElection.Election storage ref"
                                  }
                                },
                                "id": 564,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "endRegistration",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 17,
                                "src": "7348:38:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "expression": {
                                  "id": 565,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "7390:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 566,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "7390:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7348:57:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 568,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7347:59:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7270:136:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 570,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7269:138:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 552,
                  "id": 571,
                  "nodeType": "Return",
                  "src": "7262:145:0"
                }
              ]
            },
            "functionSelector": "e0d7c7cc",
            "id": 573,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkRegistrationOpen",
            "nameLocation": "7155:21:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 549,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 548,
                  "mutability": "mutable",
                  "name": "_electionId",
                  "nameLocation": "7184:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 573,
                  "src": "7177:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 547,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7177:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7176:20:0"
            },
            "returnParameters": {
              "id": 552,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 551,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 573,
                  "src": "7242:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 550,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7242:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7241:6:0"
            },
            "scope": 714,
            "src": "7146:268:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 599,
              "nodeType": "Block",
              "src": "7494:154:0",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 586,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 580,
                                    "name": "elections",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 40,
                                    "src": "7513:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Election_$18_storage_$",
                                      "typeString": "mapping(uint32 => struct SimpleElection.Election storage ref)"
                                    }
                                  },
                                  "id": 582,
                                  "indexExpression": {
                                    "id": 581,
                                    "name": "_electionId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 575,
                                    "src": "7523:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7513:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Election_$18_storage",
                                    "typeString": "struct SimpleElection.Election storage ref"
                                  }
                                },
                                "id": 583,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "startElection",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11,
                                "src": "7513:36:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "id": 584,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "7553:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 585,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "7553:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7513:55:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 587,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7512:57:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 594,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 588,
                                    "name": "elections",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 40,
                                    "src": "7586:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Election_$18_storage_$",
                                      "typeString": "mapping(uint32 => struct SimpleElection.Election storage ref)"
                                    }
                                  },
                                  "id": 590,
                                  "indexExpression": {
                                    "id": 589,
                                    "name": "_electionId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 575,
                                    "src": "7596:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7586:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Election_$18_storage",
                                    "typeString": "struct SimpleElection.Election storage ref"
                                  }
                                },
                                "id": 591,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "endElection",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 13,
                                "src": "7586:34:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "expression": {
                                  "id": 592,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "7624:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 593,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "7624:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7586:53:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 595,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7585:55:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7512:128:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 597,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7511:130:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 579,
                  "id": 598,
                  "nodeType": "Return",
                  "src": "7504:137:0"
                }
              ]
            },
            "functionSelector": "3f8c13f0",
            "id": 600,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkElectionOpen",
            "nameLocation": "7429:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 575,
                  "mutability": "mutable",
                  "name": "_electionId",
                  "nameLocation": "7454:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 600,
                  "src": "7447:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 574,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7447:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7446:20:0"
            },
            "returnParameters": {
              "id": 579,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 578,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 600,
                  "src": "7488:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 577,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7488:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7487:6:0"
            },
            "scope": 714,
            "src": "7420:228:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 630,
              "nodeType": "Block",
              "src": "7771:124:0",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 616,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 609,
                                      "name": "voters",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 65,
                                      "src": "7790:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_address_$_t_struct$_Voter_$35_storage_$_$",
                                        "typeString": "mapping(uint32 => mapping(address => struct SimpleElection.Voter storage ref))"
                                      }
                                    },
                                    "id": 611,
                                    "indexExpression": {
                                      "id": 610,
                                      "name": "_electionId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 602,
                                      "src": "7797:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7790:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$35_storage_$",
                                      "typeString": "mapping(address => struct SimpleElection.Voter storage ref)"
                                    }
                                  },
                                  "id": 613,
                                  "indexExpression": {
                                    "id": 612,
                                    "name": "voter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 604,
                                    "src": "7810:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7790:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Voter_$35_storage",
                                    "typeString": "struct SimpleElection.Voter storage ref"
                                  }
                                },
                                "id": 614,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "weight",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 32,
                                "src": "7790:33:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 615,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7827:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "7790:38:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 617,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7789:40:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 625,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 618,
                                      "name": "voters",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 65,
                                      "src": "7846:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_address_$_t_struct$_Voter_$35_storage_$_$",
                                        "typeString": "mapping(uint32 => mapping(address => struct SimpleElection.Voter storage ref))"
                                      }
                                    },
                                    "id": 620,
                                    "indexExpression": {
                                      "id": 619,
                                      "name": "_electionId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 602,
                                      "src": "7853:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7846:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$35_storage_$",
                                      "typeString": "mapping(address => struct SimpleElection.Voter storage ref)"
                                    }
                                  },
                                  "id": 622,
                                  "indexExpression": {
                                    "id": 621,
                                    "name": "voter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 604,
                                    "src": "7866:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7846:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Voter_$35_storage",
                                    "typeString": "struct SimpleElection.Voter storage ref"
                                  }
                                },
                                "id": 623,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "voted",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 34,
                                "src": "7846:32:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "74727565",
                                "id": 624,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7882:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "7846:40:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 626,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7845:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7789:98:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 628,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7788:100:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 608,
                  "id": 629,
                  "nodeType": "Return",
                  "src": "7781:107:0"
                }
              ]
            },
            "functionSelector": "8553e12d",
            "id": 631,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "voterHasRegistred",
            "nameLocation": "7663:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 605,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 602,
                  "mutability": "mutable",
                  "name": "_electionId",
                  "nameLocation": "7688:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 631,
                  "src": "7681:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 601,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7681:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 604,
                  "mutability": "mutable",
                  "name": "voter",
                  "nameLocation": "7709:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 631,
                  "src": "7701:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 603,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7701:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7680:35:0"
            },
            "returnParameters": {
              "id": 608,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 607,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 631,
                  "src": "7761:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 606,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7761:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7760:6:0"
            },
            "scope": 714,
            "src": "7654:241:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 647,
              "nodeType": "Block",
              "src": "8014:56:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 640,
                          "name": "voters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "8031:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_address_$_t_struct$_Voter_$35_storage_$_$",
                            "typeString": "mapping(uint32 => mapping(address => struct SimpleElection.Voter storage ref))"
                          }
                        },
                        "id": 642,
                        "indexExpression": {
                          "id": 641,
                          "name": "_electionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 633,
                          "src": "8038:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8031:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$35_storage_$",
                          "typeString": "mapping(address => struct SimpleElection.Voter storage ref)"
                        }
                      },
                      "id": 644,
                      "indexExpression": {
                        "id": 643,
                        "name": "voter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 635,
                        "src": "8051:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8031:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Voter_$35_storage",
                        "typeString": "struct SimpleElection.Voter storage ref"
                      }
                    },
                    "id": 645,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "voted",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 34,
                    "src": "8031:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 639,
                  "id": 646,
                  "nodeType": "Return",
                  "src": "8024:39:0"
                }
              ]
            },
            "functionSelector": "d66e33ca",
            "id": 648,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "voterHasVoted",
            "nameLocation": "7910:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 636,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 633,
                  "mutability": "mutable",
                  "name": "_electionId",
                  "nameLocation": "7931:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 648,
                  "src": "7924:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 632,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7924:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 635,
                  "mutability": "mutable",
                  "name": "voter",
                  "nameLocation": "7952:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 648,
                  "src": "7944:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 634,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7944:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7923:35:0"
            },
            "returnParameters": {
              "id": 639,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 638,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 648,
                  "src": "8004:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 637,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8004:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8003:6:0"
            },
            "scope": 714,
            "src": "7901:169:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 661,
              "nodeType": "Block",
              "src": "8150:56:0",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 655,
                        "name": "electionsIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "8167:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint32_$",
                          "typeString": "mapping(bytes32 => uint32)"
                        }
                      },
                      "id": 657,
                      "indexExpression": {
                        "id": 656,
                        "name": "_electionName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 650,
                        "src": "8180:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8167:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8198:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8167:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 654,
                  "id": 660,
                  "nodeType": "Return",
                  "src": "8160:39:0"
                }
              ]
            },
            "functionSelector": "7349746b",
            "id": 662,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "electionExists",
            "nameLocation": "8085:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 651,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 650,
                  "mutability": "mutable",
                  "name": "_electionName",
                  "nameLocation": "8108:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 662,
                  "src": "8100:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 649,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8100:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8099:23:0"
            },
            "returnParameters": {
              "id": 654,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 653,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 662,
                  "src": "8144:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 652,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8144:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8143:6:0"
            },
            "scope": 714,
            "src": "8076:130:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 676,
              "nodeType": "Block",
              "src": "8283:54:0",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 669,
                          "name": "elections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40,
                          "src": "8300:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Election_$18_storage_$",
                            "typeString": "mapping(uint32 => struct SimpleElection.Election storage ref)"
                          }
                        },
                        "id": 671,
                        "indexExpression": {
                          "id": 670,
                          "name": "_electionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 664,
                          "src": "8310:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8300:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Election_$18_storage",
                          "typeString": "struct SimpleElection.Election storage ref"
                        }
                      },
                      "id": 672,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7,
                      "src": "8300:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 673,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8329:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8300:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 668,
                  "id": 675,
                  "nodeType": "Return",
                  "src": "8293:37:0"
                }
              ]
            },
            "functionSelector": "320d0573",
            "id": 677,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "electionExists",
            "nameLocation": "8221:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 664,
                  "mutability": "mutable",
                  "name": "_electionId",
                  "nameLocation": "8243:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 677,
                  "src": "8236:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 663,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8236:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8235:20:0"
            },
            "returnParameters": {
              "id": 668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 667,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 677,
                  "src": "8277:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 666,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8277:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8276:6:0"
            },
            "scope": 714,
            "src": "8212:125:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 696,
              "nodeType": "Block",
              "src": "8463:73:0",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 686,
                                "name": "candidates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47,
                                "src": "8481:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_uint8_$_t_struct$_Candidate_$30_storage_$_$",
                                  "typeString": "mapping(uint32 => mapping(uint8 => struct SimpleElection.Candidate storage ref))"
                                }
                              },
                              "id": 688,
                              "indexExpression": {
                                "id": 687,
                                "name": "_electionId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 679,
                                "src": "8492:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8481:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Candidate_$30_storage_$",
                                "typeString": "mapping(uint8 => struct SimpleElection.Candidate storage ref)"
                              }
                            },
                            "id": 690,
                            "indexExpression": {
                              "id": 689,
                              "name": "_candidateId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 681,
                              "src": "8505:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8481:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Candidate_$30_storage",
                              "typeString": "struct SimpleElection.Candidate storage ref"
                            }
                          },
                          "id": 691,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27,
                          "src": "8481:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8527:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8481:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 694,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "8480:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 685,
                  "id": 695,
                  "nodeType": "Return",
                  "src": "8473:56:0"
                }
              ]
            },
            "functionSelector": "b957e109",
            "id": 697,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "candidateExists",
            "nameLocation": "8352:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 682,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 679,
                  "mutability": "mutable",
                  "name": "_electionId",
                  "nameLocation": "8375:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 697,
                  "src": "8368:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 678,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8368:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 681,
                  "mutability": "mutable",
                  "name": "_candidateId",
                  "nameLocation": "8394:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 697,
                  "src": "8388:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 680,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "8388:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8367:40:0"
            },
            "returnParameters": {
              "id": 685,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 684,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 697,
                  "src": "8453:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 683,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8453:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8452:6:0"
            },
            "scope": 714,
            "src": "8343:193:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 712,
              "nodeType": "Block",
              "src": "8666:66:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 706,
                        "name": "candidatesIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "8683:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_bytes32_$_t_uint8_$_$",
                          "typeString": "mapping(uint32 => mapping(bytes32 => uint8))"
                        }
                      },
                      "id": 708,
                      "indexExpression": {
                        "id": 707,
                        "name": "_electionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 699,
                        "src": "8697:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8683:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint8_$",
                        "typeString": "mapping(bytes32 => uint8)"
                      }
                    },
                    "id": 710,
                    "indexExpression": {
                      "id": 709,
                      "name": "_candidatename",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 701,
                      "src": "8710:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8683:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 705,
                  "id": 711,
                  "nodeType": "Return",
                  "src": "8676:49:0"
                }
              ]
            },
            "functionSelector": "89b0bf99",
            "id": 713,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCandidateId",
            "nameLocation": "8551:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 702,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 699,
                  "mutability": "mutable",
                  "name": "_electionId",
                  "nameLocation": "8573:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 713,
                  "src": "8566:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 698,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8566:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 701,
                  "mutability": "mutable",
                  "name": "_candidatename",
                  "nameLocation": "8594:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 713,
                  "src": "8586:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 700,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8586:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8565:44:0"
            },
            "returnParameters": {
              "id": 705,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 704,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 713,
                  "src": "8655:5:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 703,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "8655:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8654:7:0"
            },
            "scope": 714,
            "src": "8542:190:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 715,
        "src": "57:8677:0",
        "usedErrors": []
      }
    ],
    "src": "32:8703:0"
  },
  "bytecode": "608060405234801561001057600080fd5b50600780546001600160401b031916640100000001179055611656806100376000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80638553e12d116100a2578063901ab94d11610071578063901ab94d1461028e578063b957e109146102d5578063d66e33ca1461030f578063e0d7c7cc14610353578063edfbf9b01461036657600080fd5b80638553e12d1461021f57806389b0bf991461023257806389f67182146102685780638bc31c841461027b57600080fd5b80633f8c13f0116100de5780633f8c13f0146101c95780635b4206c4146101dc5780637133a501146101ef5780637349746b146101f757600080fd5b8063028ff9f314610110578063130d790614610155578063320d05731461016a5780633ec4f362146101a9575b600080fd5b61013e61011e36600461112f565b600460209081526000928352604080842090915290825290205460ff1681565b60405160ff90911681526020015b60405180910390f35b610168610163366004611159565b6103b0565b005b610199610178366004611159565b63ffffffff9081166000908152600260208190526040909120015416151590565b604051901515815260200161014c565b6101bc6101b7366004611159565b610427565b60405161014c9190611174565b6101996101d7366004611159565b6105b7565b6101686101ea3660046111c9565b610618565b6101bc610629565b610199610205366004611205565b60009081526020819052604090205463ffffffff16151590565b61019961022d36600461121e565b610725565b61013e61024036600461112f565b63ffffffff919091166000908152600460209081526040808320938352929052205460ff1690565b61013e61027636600461112f565b610794565b610168610289366004611338565b6107d7565b6102c061029c36600461144e565b60036020908152600092835260408084209091529082529020805460019091015482565b6040805192835260208301919091520161014c565b6101996102e336600461144e565b63ffffffff8216600090815260036020908152604080832060ff85168452909152902054151592915050565b61019961031d36600461121e565b63ffffffff821660009081526006602090815260408083206001600160a01b038516845290915290206001015460ff1692915050565b610199610361366004611159565b610c09565b61039b61037436600461121e565b60066020908152600092835260408084209091529082529020805460019091015460ff1682565b6040805192835290151560208301520161014c565b6103b981610c09565b6104025760405162461bcd60e51b81526020600482015260156024820152742932b3b4b9ba3930ba34b7b7103737ba1037b832b760591b60448201526064015b60405180910390fd5b63ffffffff166000908152600660209081526040808320338452909152902060019055565b63ffffffff80821660009081526002602081905260409091200154606091166104925760405162461bcd60e51b815260206004820152601a60248201527f54686520656c656374696f6e20646f65736e277420657869737400000000000060448201526064016103f9565b63ffffffff821660009081526005602052604081205467ffffffffffffffff8111156104c0576104c0611261565b6040519080825280602002602001820160405280156104e9578160200160208202803683370190505b50905060005b63ffffffff841660009081526005602052604090205460ff821610156105b05763ffffffff8416600090815260036020908152604080832060059092528220805491929160ff851690811061054657610546611481565b90600052602060002090602091828204019190069054906101000a900460ff1660ff1660ff16815260200190815260200160002060000154828260ff168151811061059357610593611481565b6020908102919091010152806105a8816114ad565b9150506104ef565b5092915050565b63ffffffff808216600090815260026020819052604082200154909142650100000000009092041611801590610612575063ffffffff8083166000908152600260208190526040909120015442600160481b90910490911610155b92915050565b61062483338484610c65565b505050565b60015460609060009067ffffffffffffffff81111561064a5761064a611261565b604051908082528060200260200182016040528015610673578160200160208202803683370190505b50905060005b60015463ffffffff8216101561071f576002600060018363ffffffff16815481106106a6576106a6611481565b90600052602060002090600891828204019190066004029054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060000154828263ffffffff168151811061070257610702611481565b602090810291909101015280610717816114cd565b915050610679565b50919050565b63ffffffff821660009081526006602090815260408083206001600160a01b038516845290915281205415158061078d575063ffffffff831660009081526006602090815260408083206001600160a01b0386168452909152902060019081015460ff161515145b9392505050565b600560205281600052604060002081815481106107b057600080fd5b9060005260206000209060209182820401919006915091509054906101000a900460ff1681565b60008551116108345760405162461bcd60e51b8152602060048201526024808201527f54686572652073686f756c642062652061746c6561737420312063616e64696460448201526330ba329760e11b60648201526084016103f9565b60008881526020819052604090205463ffffffff16156108b55760405162461bcd60e51b815260206004820152603660248201527f5468697320656c656374696f6e20616c7265616479206578697374732c20706c604482015275656173652073656c656374206f74686572206e616d6560501b60648201526084016103f9565b60075460408051610100810182528a815260208082018b815263ffffffff9485168385018190528b15156060850152898616608085015288861660a085015287861660c085015294861660e084015260008581526002835293909320825181559251805192939261092c926001850192019061107d565b50604082810151600290920180546060850151608086015160a087015160c088015160e09098015163ffffffff908116600160881b0263ffffffff60881b19998216600160681b029990991667ffffffffffffffff60681b19928216600160481b026cffffffff000000000000000000199483166501000000000002949094166cffffffffffffffff0000000000199515156401000000000264ffffffffff19909716998316999099179590951793909316969096171794909416179390931790925560008b81526020819052918220805484831663ffffffff19919091168117909155600180548082018255908452600881047fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf601805460079092166004026101000a9283029290930219161790555b86518160ff161015610b4257610b3082888360ff1681518110610a8257610a82611481565b6020026020010151836001610a9791906114f1565b6040805180820182528381526000602080830182815263ffffffff979097168083526003825284832060ff96871680855290835285842094518555975160019485015580835260048252848320968352958152838220805460ff19168817905594815260058552918220805491820181558252908390209281049092018054601f9093166101000a918202199092169202919091179055565b80610b3a816114ad565b915050610a5d565b507f8c22f42e1642c0f410bc4e3debf771a1355ec556bdaf3ce7428e555196569c968989838a89898989604051610b80989796959493929190611516565b60405180910390a16007805463ffffffff16906000610b9e836114cd565b91906101000a81548163ffffffff021916908363ffffffff160217905550506007600481819054906101000a900463ffffffff1680929190610bdf906114cd565b91906101000a81548163ffffffff021916908363ffffffff16021790555050505050505050505050565b63ffffffff808216600090815260026020819052604082200154909142600160681b909204161180159061061257505063ffffffff9081166000908152600260208190526040909120015442600160881b909104909116101590565b63ffffffff8085166000908152600260208190526040909120015416610ccd5760405162461bcd60e51b815260206004820152601a60248201527f54686520656c656374696f6e20646f65736e277420657869737400000000000060448201526064016103f9565b610cd6846105b7565b610d1b5760405162461bcd60e51b8152602060048201526016602482015275151a1948195b1958dd1a5bdb881a5cc818db1bdcd95960521b60448201526064016103f9565b63ffffffff841660009081526002602081905260409091200154640100000000900460ff1615610da057610d4f8484610725565b610d9b5760405162461bcd60e51b815260206004820152601760248201527f566f746572206861736e2774207265676973746572656400000000000000000060448201526064016103f9565b610dce565b63ffffffff841660009081526006602090815260408083206001600160a01b03871684529091529020600190555b63ffffffff841660009081526006602090815260408083206001600160a01b038716845290915290206001015460ff1615610e4b5760405162461bcd60e51b815260206004820152601860248201527f566f7465722068617320616c726561647920566f74656421000000000000000060448201526064016103f9565b63ffffffff841660009081526006602090815260408083206001600160a01b0387168452909152902054811115610ec45760405162461bcd60e51b815260206004820152601f60248201527f566f74657220646f206e6f74206861766520736f206d616e7920766f7465730060448201526064016103f9565b63ffffffff8416600090815260036020908152604080832060ff86168452909152902054610f345760405162461bcd60e51b815260206004820152601a60248201527f496e76616c69642063616e64696461746520746f20566f74652100000000000060448201526064016103f9565b63ffffffff8416600090815260036020908152604080832060ff86168452909152902060010154610f669082906115bc565b63ffffffff8516600081815260036020908152604080832060ff88168452825280832060010194909455918152600682528281206001600160a01b03871682529091522054610fb69082906115d4565b63ffffffff851660009081526006602090815260408083206001600160a01b038816845290915290208190556110205763ffffffff841660009081526006602090815260408083206001600160a01b038716845290915290206001908101805460ff191690911790555b6040805163ffffffff861681526001600160a01b038516602082015260ff8416818301526060810183905290517f66eb9354084da3c9417bfaeb0f63de26c8976282f67e1687af5b90e8d3fbd3879181900360800190a150505050565b828054611089906115eb565b90600052602060002090601f0160209004810192826110ab57600085556110f1565b82601f106110c457805160ff19168380011785556110f1565b828001600101855582156110f1579182015b828111156110f15782518255916020019190600101906110d6565b506110fd929150611101565b5090565b5b808211156110fd5760008155600101611102565b803563ffffffff8116811461112a57600080fd5b919050565b6000806040838503121561114257600080fd5b61114b83611116565b946020939093013593505050565b60006020828403121561116b57600080fd5b61078d82611116565b6020808252825182820181905260009190848201906040850190845b818110156111ac57835183529284019291840191600101611190565b50909695505050505050565b803560ff8116811461112a57600080fd5b6000806000606084860312156111de57600080fd5b6111e784611116565b92506111f5602085016111b8565b9150604084013590509250925092565b60006020828403121561121757600080fd5b5035919050565b6000806040838503121561123157600080fd5b61123a83611116565b915060208301356001600160a01b038116811461125657600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156112a0576112a0611261565b604052919050565b8035801515811461112a57600080fd5b600082601f8301126112c957600080fd5b8135602067ffffffffffffffff8211156112e5576112e5611261565b8160051b6112f4828201611277565b928352848101820192828101908785111561130e57600080fd5b83870192505b8483101561132d57823582529183019190830190611314565b979650505050505050565b600080600080600080600080610100898b03121561135557600080fd5b883597506020808a013567ffffffffffffffff8082111561137557600080fd5b818c0191508c601f83011261138957600080fd5b81358181111561139b5761139b611261565b6113ad601f8201601f19168501611277565b8181528e858386010111156113c157600080fd5b81858501868301376000858383010152809b5050506113e260408d016112a8565b985060608c01359250808311156113f857600080fd5b50506114068b828c016112b8565b95505061141560808a01611116565b935061142360a08a01611116565b925061143160c08a01611116565b915061143f60e08a01611116565b90509295985092959890939650565b6000806040838503121561146157600080fd5b61146a83611116565b9150611478602084016111b8565b90509250929050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff8114156114c4576114c4611497565b60010192915050565b600063ffffffff808316818114156114e7576114e7611497565b6001019392505050565b600060ff821660ff84168060ff0382111561150e5761150e611497565b019392505050565b60006101008a8352602081818501528a518083860152600092505b80831015611550578b8301820151858401610120015291810191611531565b8083111561156357600061012082870101525b601f01601f19168401610120019250611587915050604083018963ffffffff169052565b951515606082015263ffffffff948516608082015292841660a084015290831660c083015290911660e0909101529392505050565b600082198211156115cf576115cf611497565b500190565b6000828210156115e6576115e6611497565b500390565b600181811c908216806115ff57607f821691505b6020821081141561071f57634e487b7160e01b600052602260045260246000fdfea2646970667358221220302bf866eb3794d4cde5ba3c5a5c4d9c3f0908afe9456d85f3116bec27c2bb8564736f6c634300080c0033",
  "bytecodeSha1": "0305becaf442a113b04cb796c8f243c5507bd153",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "SimpleElection",
  "coverageMap": {
    "branches": {
      "0": {
        "SimpleElection.createElection": {
          "44": [
            2478,
            2500,
            true
          ]
        },
        "SimpleElection.register": {
          "43": [
            7025,
            7059,
            true
          ]
        },
        "SimpleElection.voterVote": {
          "45": [
            4274,
            4304,
            true
          ],
          "46": [
            4345,
            4386,
            false
          ],
          "47": [
            4427,
            4465,
            true
          ],
          "48": [
            4628,
            4663,
            true
          ],
          "49": [
            4744,
            4789,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "SimpleElection.addCandidate": {
          "24": [
            3699,
            3767
          ],
          "25": [
            3777,
            3834
          ],
          "26": [
            3844,
            3890
          ]
        },
        "SimpleElection.candidateExists": {
          "3": [
            8473,
            8529
          ]
        },
        "SimpleElection.checkElectionOpen": {
          "12": [
            7504,
            7641
          ]
        },
        "SimpleElection.checkRegistrationOpen": {
          "31": [
            7262,
            7407
          ]
        },
        "SimpleElection.createElection": {
          "18": [
            2470,
            2541
          ],
          "19": [
            2552,
            2675
          ],
          "20": [
            2728,
            2988
          ],
          "21": [
            2998,
            3030
          ],
          "22": [
            3040,
            3073
          ],
          "23": [
            3145,
            3192
          ],
          "27": [
            3126,
            3129
          ],
          "28": [
            3212,
            3460
          ],
          "29": [
            3470,
            3485
          ],
          "30": [
            3495,
            3510
          ]
        },
        "SimpleElection.electionExists": {
          "0": [
            8293,
            8330
          ],
          "1": [
            8160,
            8199
          ]
        },
        "SimpleElection.getCandidateId": {
          "2": [
            8676,
            8725
          ]
        },
        "SimpleElection.getCandidatesForElection": {
          "8": [
            6422,
            6488
          ],
          "9": [
            6680,
            6769
          ],
          "10": [
            6663,
            6666
          ],
          "11": [
            6779,
            6792
          ]
        },
        "SimpleElection.getCurrentElections": {
          "14": [
            6156,
            6203
          ],
          "15": [
            6137,
            6140
          ],
          "16": [
            6223,
            6236
          ]
        },
        "SimpleElection.register": {
          "5": [
            7017,
            7085
          ],
          "7": [
            7095,
            7133
          ]
        },
        "SimpleElection.registerVoter": {
          "6": [
            6912,
            6949
          ]
        },
        "SimpleElection.vote": {
          "13": [
            5837,
            5894
          ]
        },
        "SimpleElection.voterHasRegistred": {
          "17": [
            7781,
            7888
          ]
        },
        "SimpleElection.voterHasVoted": {
          "4": [
            8024,
            8063
          ]
        },
        "SimpleElection.voterVote": {
          "32": [
            4190,
            4256
          ],
          "33": [
            4266,
            4331
          ],
          "34": [
            4402,
            4522
          ],
          "35": [
            4553,
            4587
          ],
          "36": [
            4607,
            4713
          ],
          "37": [
            4723,
            4846
          ],
          "38": [
            4856,
            4971
          ],
          "39": [
            5036,
            5167
          ],
          "40": [
            5230,
            5335
          ],
          "41": [
            5485,
            5525
          ],
          "42": [
            5546,
            5600
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061010b5760003560e01c80638553e12d116100a2578063901ab94d11610071578063901ab94d1461028e578063b957e109146102d5578063d66e33ca1461030f578063e0d7c7cc14610353578063edfbf9b01461036657600080fd5b80638553e12d1461021f57806389b0bf991461023257806389f67182146102685780638bc31c841461027b57600080fd5b80633f8c13f0116100de5780633f8c13f0146101c95780635b4206c4146101dc5780637133a501146101ef5780637349746b146101f757600080fd5b8063028ff9f314610110578063130d790614610155578063320d05731461016a5780633ec4f362146101a9575b600080fd5b61013e61011e36600461112f565b600460209081526000928352604080842090915290825290205460ff1681565b60405160ff90911681526020015b60405180910390f35b610168610163366004611159565b6103b0565b005b610199610178366004611159565b63ffffffff9081166000908152600260208190526040909120015416151590565b604051901515815260200161014c565b6101bc6101b7366004611159565b610427565b60405161014c9190611174565b6101996101d7366004611159565b6105b7565b6101686101ea3660046111c9565b610618565b6101bc610629565b610199610205366004611205565b60009081526020819052604090205463ffffffff16151590565b61019961022d36600461121e565b610725565b61013e61024036600461112f565b63ffffffff919091166000908152600460209081526040808320938352929052205460ff1690565b61013e61027636600461112f565b610794565b610168610289366004611338565b6107d7565b6102c061029c36600461144e565b60036020908152600092835260408084209091529082529020805460019091015482565b6040805192835260208301919091520161014c565b6101996102e336600461144e565b63ffffffff8216600090815260036020908152604080832060ff85168452909152902054151592915050565b61019961031d36600461121e565b63ffffffff821660009081526006602090815260408083206001600160a01b038516845290915290206001015460ff1692915050565b610199610361366004611159565b610c09565b61039b61037436600461121e565b60066020908152600092835260408084209091529082529020805460019091015460ff1682565b6040805192835290151560208301520161014c565b6103b981610c09565b6104025760405162461bcd60e51b81526020600482015260156024820152742932b3b4b9ba3930ba34b7b7103737ba1037b832b760591b60448201526064015b60405180910390fd5b63ffffffff166000908152600660209081526040808320338452909152902060019055565b63ffffffff80821660009081526002602081905260409091200154606091166104925760405162461bcd60e51b815260206004820152601a60248201527f54686520656c656374696f6e20646f65736e277420657869737400000000000060448201526064016103f9565b63ffffffff821660009081526005602052604081205467ffffffffffffffff8111156104c0576104c0611261565b6040519080825280602002602001820160405280156104e9578160200160208202803683370190505b50905060005b63ffffffff841660009081526005602052604090205460ff821610156105b05763ffffffff8416600090815260036020908152604080832060059092528220805491929160ff851690811061054657610546611481565b90600052602060002090602091828204019190069054906101000a900460ff1660ff1660ff16815260200190815260200160002060000154828260ff168151811061059357610593611481565b6020908102919091010152806105a8816114ad565b9150506104ef565b5092915050565b63ffffffff808216600090815260026020819052604082200154909142650100000000009092041611801590610612575063ffffffff8083166000908152600260208190526040909120015442600160481b90910490911610155b92915050565b61062483338484610c65565b505050565b60015460609060009067ffffffffffffffff81111561064a5761064a611261565b604051908082528060200260200182016040528015610673578160200160208202803683370190505b50905060005b60015463ffffffff8216101561071f576002600060018363ffffffff16815481106106a6576106a6611481565b90600052602060002090600891828204019190066004029054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060000154828263ffffffff168151811061070257610702611481565b602090810291909101015280610717816114cd565b915050610679565b50919050565b63ffffffff821660009081526006602090815260408083206001600160a01b038516845290915281205415158061078d575063ffffffff831660009081526006602090815260408083206001600160a01b0386168452909152902060019081015460ff161515145b9392505050565b600560205281600052604060002081815481106107b057600080fd5b9060005260206000209060209182820401919006915091509054906101000a900460ff1681565b60008551116108345760405162461bcd60e51b8152602060048201526024808201527f54686572652073686f756c642062652061746c6561737420312063616e64696460448201526330ba329760e11b60648201526084016103f9565b60008881526020819052604090205463ffffffff16156108b55760405162461bcd60e51b815260206004820152603660248201527f5468697320656c656374696f6e20616c7265616479206578697374732c20706c604482015275656173652073656c656374206f74686572206e616d6560501b60648201526084016103f9565b60075460408051610100810182528a815260208082018b815263ffffffff9485168385018190528b15156060850152898616608085015288861660a085015287861660c085015294861660e084015260008581526002835293909320825181559251805192939261092c926001850192019061107d565b50604082810151600290920180546060850151608086015160a087015160c088015160e09098015163ffffffff908116600160881b0263ffffffff60881b19998216600160681b029990991667ffffffffffffffff60681b19928216600160481b026cffffffff000000000000000000199483166501000000000002949094166cffffffffffffffff0000000000199515156401000000000264ffffffffff19909716998316999099179590951793909316969096171794909416179390931790925560008b81526020819052918220805484831663ffffffff19919091168117909155600180548082018255908452600881047fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf601805460079092166004026101000a9283029290930219161790555b86518160ff161015610b4257610b3082888360ff1681518110610a8257610a82611481565b6020026020010151836001610a9791906114f1565b6040805180820182528381526000602080830182815263ffffffff979097168083526003825284832060ff96871680855290835285842094518555975160019485015580835260048252848320968352958152838220805460ff19168817905594815260058552918220805491820181558252908390209281049092018054601f9093166101000a918202199092169202919091179055565b80610b3a816114ad565b915050610a5d565b507f8c22f42e1642c0f410bc4e3debf771a1355ec556bdaf3ce7428e555196569c968989838a89898989604051610b80989796959493929190611516565b60405180910390a16007805463ffffffff16906000610b9e836114cd565b91906101000a81548163ffffffff021916908363ffffffff160217905550506007600481819054906101000a900463ffffffff1680929190610bdf906114cd565b91906101000a81548163ffffffff021916908363ffffffff16021790555050505050505050505050565b63ffffffff808216600090815260026020819052604082200154909142600160681b909204161180159061061257505063ffffffff9081166000908152600260208190526040909120015442600160881b909104909116101590565b63ffffffff8085166000908152600260208190526040909120015416610ccd5760405162461bcd60e51b815260206004820152601a60248201527f54686520656c656374696f6e20646f65736e277420657869737400000000000060448201526064016103f9565b610cd6846105b7565b610d1b5760405162461bcd60e51b8152602060048201526016602482015275151a1948195b1958dd1a5bdb881a5cc818db1bdcd95960521b60448201526064016103f9565b63ffffffff841660009081526002602081905260409091200154640100000000900460ff1615610da057610d4f8484610725565b610d9b5760405162461bcd60e51b815260206004820152601760248201527f566f746572206861736e2774207265676973746572656400000000000000000060448201526064016103f9565b610dce565b63ffffffff841660009081526006602090815260408083206001600160a01b03871684529091529020600190555b63ffffffff841660009081526006602090815260408083206001600160a01b038716845290915290206001015460ff1615610e4b5760405162461bcd60e51b815260206004820152601860248201527f566f7465722068617320616c726561647920566f74656421000000000000000060448201526064016103f9565b63ffffffff841660009081526006602090815260408083206001600160a01b0387168452909152902054811115610ec45760405162461bcd60e51b815260206004820152601f60248201527f566f74657220646f206e6f74206861766520736f206d616e7920766f7465730060448201526064016103f9565b63ffffffff8416600090815260036020908152604080832060ff86168452909152902054610f345760405162461bcd60e51b815260206004820152601a60248201527f496e76616c69642063616e64696461746520746f20566f74652100000000000060448201526064016103f9565b63ffffffff8416600090815260036020908152604080832060ff86168452909152902060010154610f669082906115bc565b63ffffffff8516600081815260036020908152604080832060ff88168452825280832060010194909455918152600682528281206001600160a01b03871682529091522054610fb69082906115d4565b63ffffffff851660009081526006602090815260408083206001600160a01b038816845290915290208190556110205763ffffffff841660009081526006602090815260408083206001600160a01b038716845290915290206001908101805460ff191690911790555b6040805163ffffffff861681526001600160a01b038516602082015260ff8416818301526060810183905290517f66eb9354084da3c9417bfaeb0f63de26c8976282f67e1687af5b90e8d3fbd3879181900360800190a150505050565b828054611089906115eb565b90600052602060002090601f0160209004810192826110ab57600085556110f1565b82601f106110c457805160ff19168380011785556110f1565b828001600101855582156110f1579182015b828111156110f15782518255916020019190600101906110d6565b506110fd929150611101565b5090565b5b808211156110fd5760008155600101611102565b803563ffffffff8116811461112a57600080fd5b919050565b6000806040838503121561114257600080fd5b61114b83611116565b946020939093013593505050565b60006020828403121561116b57600080fd5b61078d82611116565b6020808252825182820181905260009190848201906040850190845b818110156111ac57835183529284019291840191600101611190565b50909695505050505050565b803560ff8116811461112a57600080fd5b6000806000606084860312156111de57600080fd5b6111e784611116565b92506111f5602085016111b8565b9150604084013590509250925092565b60006020828403121561121757600080fd5b5035919050565b6000806040838503121561123157600080fd5b61123a83611116565b915060208301356001600160a01b038116811461125657600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156112a0576112a0611261565b604052919050565b8035801515811461112a57600080fd5b600082601f8301126112c957600080fd5b8135602067ffffffffffffffff8211156112e5576112e5611261565b8160051b6112f4828201611277565b928352848101820192828101908785111561130e57600080fd5b83870192505b8483101561132d57823582529183019190830190611314565b979650505050505050565b600080600080600080600080610100898b03121561135557600080fd5b883597506020808a013567ffffffffffffffff8082111561137557600080fd5b818c0191508c601f83011261138957600080fd5b81358181111561139b5761139b611261565b6113ad601f8201601f19168501611277565b8181528e858386010111156113c157600080fd5b81858501868301376000858383010152809b5050506113e260408d016112a8565b985060608c01359250808311156113f857600080fd5b50506114068b828c016112b8565b95505061141560808a01611116565b935061142360a08a01611116565b925061143160c08a01611116565b915061143f60e08a01611116565b90509295985092959890939650565b6000806040838503121561146157600080fd5b61146a83611116565b9150611478602084016111b8565b90509250929050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff8114156114c4576114c4611497565b60010192915050565b600063ffffffff808316818114156114e7576114e7611497565b6001019392505050565b600060ff821660ff84168060ff0382111561150e5761150e611497565b019392505050565b60006101008a8352602081818501528a518083860152600092505b80831015611550578b8301820151858401610120015291810191611531565b8083111561156357600061012082870101525b601f01601f19168401610120019250611587915050604083018963ffffffff169052565b951515606082015263ffffffff948516608082015292841660a084015290831660c083015290911660e0909101529392505050565b600082198211156115cf576115cf611497565b500190565b6000828210156115e6576115e6611497565b500390565b600181811c908216806115ff57607f821691505b6020821081141561071f57634e487b7160e01b600052602260045260246000fdfea2646970667358221220302bf866eb3794d4cde5ba3c5a5c4d9c3f0908afe9456d85f3116bec27c2bb8564736f6c634300080c0033",
  "deployedSourceMap": "57:8677:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1021:65;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;611:4:1;599:17;;;581:36;;569:2;554:18;1021:65:0;;;;;;;;6962:178;;;;;;:::i;:::-;;:::i;:::-;;8212:125;;;;;;:::i;:::-;8300:22;;;;8277:4;8300:22;;;:9;:22;;;;;;;;:25;;;:30;;;8212:125;;;;1078:14:1;;1071:22;1053:41;;1041:2;1026:18;8212:125:0;913:187:1;6291:508:0;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;7420:228::-;;;;;;:::i;:::-;;:::i;5643:258::-;;;;;;:::i;:::-;;:::i;5935:308::-;;;:::i;8076:130::-;;;;;;:::i;:::-;8144:4;8167:27;;;;;;;;;;;;;:32;;;8076:130;7654:241;;;;;;:::i;:::-;;:::i;8542:190::-;;;;;;:::i;:::-;8683:26;;;;;8655:5;8683:26;;;:13;:26;;;;;;;;:42;;;;;;;;;;;8542:190;1139:48;;;;;;:::i;:::-;;:::i;1888:1629::-;;;;;;:::i;:::-;;:::i;950:64::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6186:25:1;;;6242:2;6227:18;;6220:34;;;;6159:18;950:64:0;6012:248:1;8343:193:0;;;;;;:::i;:::-;8481:23;;;8453:4;8481:23;;;:10;:23;;;;;;;;:37;;;;;;;;;;:42;:47;;8343:193;;;;;7901:169;;;;;;:::i;:::-;8031:19;;;8004:4;8031:19;;;:6;:19;;;;;;;;-1:-1:-1;;;;;8031:26:0;;;;;;;;;:32;;;;;7901:169;;;;;7146:268;;;;;;:::i;:::-;;:::i;1241:58::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6433:25:1;;;6501:14;;6494:22;6489:2;6474:18;;6467:50;6406:18;1241:58:0;6265:258:1;6962:178:0;7025:34;7047:11;7025:21;:34::i;:::-;7017:68;;;;-1:-1:-1;;;7017:68:0;;6730:2:1;7017:68:0;;;6712:21:1;6769:2;6749:18;;;6742:30;-1:-1:-1;;;6788:18:1;;;6781:51;6849:18;;7017:68:0;;;;;;;;;6912:19;;;;;;:6;:19;;;;;;;;7122:10;6912:26;;;;;;;6948:1;6912:37;;6962:178::o;6291:508::-;8300:22;;;;8277:4;8300:22;;;:9;:22;;;;;;;;:25;;6390:16;;8300:25;6422:66;;;;-1:-1:-1;;;6422:66:0;;7080:2:1;6422:66:0;;;7062:21:1;7119:2;7099:18;;;7092:30;7158:28;7138:18;;;7131:56;7204:18;;6422:66:0;6878:350:1;6422:66:0;6551:27;;;6498:23;6551:27;;;:14;:27;;;;;:34;6524:71;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6524:71:0;;6498:97;;6610:7;6605:164;6627:27;;;;;;;:14;:27;;;;;:34;6623:38;;;;6605:164;;;6692:23;;;;;;;:10;:23;;;;;;;;6716:14;:27;;;;;:30;;6692:23;;;6716:30;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;6692:55;;;;;;;;;;;;;;;:77;;;6680:6;6687:1;6680:9;;;;;;;;;;:::i;:::-;;;;;;;;;;:89;6663:3;;;;:::i;:::-;;;;6605:164;;;-1:-1:-1;6786:6:0;6291:508;-1:-1:-1;;6291:508:0:o;7420:228::-;7513:22;;;;7488:4;7513:22;;;:9;:22;;;;;;;:36;;7488:4;;7553:15;7513:36;;;;;:55;;;;7512:128;;-1:-1:-1;7586:22:0;;;;;;;;:9;:22;;;;;;;;:34;;7624:15;-1:-1:-1;;;7586:34:0;;;;;;:53;;7512:128;7504:137;7420:228;-1:-1:-1;;7420:228:0:o;5643:258::-;5837:57;5847:11;5860:10;5872:12;5886:7;5837:9;:57::i;:::-;5643:258;;;:::o;5935:308::-;6055:16;:23;5987:16;;6015:23;;6041:38;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6041:38:0;;6015:64;;6094:8;6089:125;6112:16;:23;6108:27;;;;6089:125;;;6168:9;:30;6178:16;6195:1;6178:19;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;6168:30;;;;;;;;;;;;;;;:35;;;6156:6;6163:1;6156:9;;;;;;;;;;:::i;:::-;;;;;;;;;;:47;6137:3;;;;:::i;:::-;;;;6089:125;;;-1:-1:-1;6230:6:0;5935:308;-1:-1:-1;5935:308:0:o;7654:241::-;7790:19;;;7761:4;7790:19;;;:6;:19;;;;;;;;-1:-1:-1;;;;;7790:26:0;;;;;;;;;:33;:38;;;7789:98;;-1:-1:-1;7846:19:0;;;;;;;:6;:19;;;;;;;;-1:-1:-1;;;;;7846:26:0;;;;;;;;;:32;;;;;;;:40;;;7789:98;7781:107;7654:241;-1:-1:-1;;;7654:241:0:o;1139:48::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1888:1629::-;2499:1;2478:11;:18;:22;2470:71;;;;-1:-1:-1;;;2470:71:0;;8085:2:1;2470:71:0;;;8067:21:1;8124:2;8104:18;;;8097:30;8163:34;8143:18;;;8136:62;-1:-1:-1;;;8214:18:1;;;8207:34;8258:19;;2470:71:0;7883:400:1;2470:71:0;8144:4;8167:27;;;;;;;;;;;;;:32;2552:123;;;;-1:-1:-1;;;2552:123:0;;8490:2:1;2552:123:0;;;8472:21:1;8529:2;8509:18;;;8502:30;8568:34;8548:18;;;8541:62;-1:-1:-1;;;8619:18:1;;;8612:52;8681:19;;2552:123:0;8288:418:1;2552:123:0;2705:13;;2752:236;;;2705:13;2752:236;;;;;;;;;;;;;;2705:13;;;;2752:236;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2685:17;2728:21;;;:9;:21;;;;;;:260;;;;;;;;2752:236;;2728:21;:260;;2705:13;2728:260;;;;;;:::i;:::-;-1:-1:-1;2728:260:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2728:260:0;-1:-1:-1;;;;2728:260:0;;;-1:-1:-1;;;2728:260:0;;;;;-1:-1:-1;;;;2728:260:0;;;-1:-1:-1;;;2728:260:0;-1:-1:-1;;2728:260:0;;;;;;;;;-1:-1:-1;;2728:260:0;;;;;-1:-1:-1;;2728:260:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2998:19;;;;;;;;;;:32;;;;;-1:-1:-1;;2998:32:0;;;;;;;;;2728:260;3040:33;;;;;;;;;;;;;;;;;;;;;2728:260;3040:33;2728:260;3040:33;;;;;;;;;;;;;3084:119;3106:11;:18;3102:1;:22;;;3084:119;;;3145:47;3158:10;3170:11;3182:1;3170:14;;;;;;;;;;:::i;:::-;;;;;;;3186:1;3190;3186:5;;;;:::i;:::-;3739:28;;;;;;;;;;;-1:-1:-1;3739:28:0;;;;;;;3699:23;;;;;;;;:10;:23;;;;;:37;;;;;;;;;;;;;:68;;;;;;;;;;;3777:26;;;:13;:26;;;;;:42;;;;;;;;;:57;;-1:-1:-1;;3777:57:0;;;;;3844:27;;;:14;:27;;;;;:46;;;;;;;;;;;;;;;;;;;;;;;;;3777:57;3844:46;;;;;;;;;;;;;;;;3565:332;3145:47;3126:3;;;;:::i;:::-;;;;3084:119;;;;3217:243;3246:5;3265:12;3291:10;3315:19;3348:14;3376:12;3402:18;3434:16;3217:243;;;;;;;;;;;;;:::i;:::-;;;;;;;;3470:13;:15;;;;;:13;:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;3495:13;;:15;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;2460:1057;1888:1629;;;;;;;;:::o;7146:268::-;7271:22;;;;7242:4;7271:22;;;:9;:22;;;;;;;:40;;7242:4;;7315:15;-1:-1:-1;;;7271:40:0;;;;:59;;;;7270:136;;-1:-1:-1;;7348:22:0;;;;;;;;:9;:22;;;;;;;;:38;;7390:15;-1:-1:-1;;;7348:38:0;;;;;;:57;;;7146:268::o;3954:1653::-;8300:22;;;;8277:4;8300:22;;;:9;:22;;;;;;;;:25;;;4190:66;;;;-1:-1:-1;;;4190:66:0;;7080:2:1;4190:66:0;;;7062:21:1;7119:2;7099:18;;;7092:30;7158:28;7138:18;;;7131:56;7204:18;;4190:66:0;6878:350:1;4190:66:0;4274:30;4292:11;4274:17;:30::i;:::-;4266:65;;;;-1:-1:-1;;;4266:65:0;;10398:2:1;4266:65:0;;;10380:21:1;10437:2;10417:18;;;10410:30;-1:-1:-1;;;10456:18:1;;;10449:52;10518:18;;4266:65:0;10196:346:1;4266:65:0;4345:22;;;;;;;:9;:22;;;;;;;;:41;;;;;;;4341:257;;;4427:38;4445:11;4458:6;4427:17;:38::i;:::-;4402:120;;;;-1:-1:-1;;;4402:120:0;;10749:2:1;4402:120:0;;;10731:21:1;10788:2;10768:18;;;10761:30;10827:25;10807:18;;;10800:53;10870:18;;4402:120:0;10547:347:1;4402:120:0;4341:257;;;6912:19;;;;;;;:6;:19;;;;;;;;-1:-1:-1;;;;;6912:26:0;;;;;;;;;6948:1;6912:37;;4553:34;8031:19;;;8004:4;8031:19;;;:6;:19;;;;;;;;-1:-1:-1;;;;;8031:26:0;;;;;;;;;:32;;;;;4628:35;4607:106;;;;-1:-1:-1;;;4607:106:0;;11101:2:1;4607:106:0;;;11083:21:1;11140:2;11120:18;;;11113:30;11179:26;11159:18;;;11152:54;11223:18;;4607:106:0;10899:348:1;4607:106:0;4755:19;;;;;;;:6;:19;;;;;;;;-1:-1:-1;;;;;4755:27:0;;;;;;;;;:34;4744:45;;;4723:123;;;;-1:-1:-1;;;4723:123:0;;11454:2:1;4723:123:0;;;11436:21:1;11493:2;11473:18;;;11466:30;11532:33;11512:18;;;11505:61;11583:18;;4723:123:0;11252:355:1;4723:123:0;8481:23;;;8453:4;8481:23;;;:10;:23;;;;;;;;:37;;;;;;;;;;:42;4856:115;;;;-1:-1:-1;;;4856:115:0;;11814:2:1;4856:115:0;;;11796:21:1;11853:2;11833:18;;;11826:30;11892:28;11872:18;;;11865:56;11938:18;;4856:115:0;11612:350:1;4856:115:0;5098:23;;;;;;;:10;:23;;;;;;;;:37;;;;;;;;;;:47;;;:69;;5160:7;;5098:69;:::i;:::-;5036:23;;;;;;;:10;:23;;;;;;;;:37;;;;;;;;;;:47;;:131;;;;5279:19;;;:6;:19;;;;;-1:-1:-1;;;;;5279:27:0;;;;;;;;:34;:56;;5328:7;;5279:56;:::i;:::-;5230:19;;;;;;;:6;:19;;;;;;;;-1:-1:-1;;;;;5230:27:0;;;;;;;;;:105;;;5426:110;;5485:19;;;;;;;:6;:19;;;;;;;;-1:-1:-1;;;;;5485:27:0;;;;;;;;;5521:4;5485:33;;;:40;;-1:-1:-1;;5485:40:0;;;;;;5426:110;5551:49;;;12485:10:1;12473:23;;12455:42;;-1:-1:-1;;;;;12533:32:1;;12528:2;12513:18;;12506:60;12614:4;12602:17;;12582:18;;;12575:45;12651:2;12636:18;;12629:34;;;5551:49:0;;;;;;;12442:3:1;5551:49:0;;;3954:1653;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:163:1;81:20;;141:10;130:22;;120:33;;110:61;;167:1;164;157:12;110:61;14:163;;;:::o;182:252::-;249:6;257;310:2;298:9;289:7;285:23;281:32;278:52;;;326:1;323;316:12;278:52;349:28;367:9;349:28;:::i;:::-;339:38;424:2;409:18;;;;396:32;;-1:-1:-1;;;182:252:1:o;628:184::-;686:6;739:2;727:9;718:7;714:23;710:32;707:52;;;755:1;752;745:12;707:52;778:28;796:9;778:28;:::i;1105:632::-;1276:2;1328:21;;;1398:13;;1301:18;;;1420:22;;;1247:4;;1276:2;1499:15;;;;1473:2;1458:18;;;1247:4;1542:169;1556:6;1553:1;1550:13;1542:169;;;1617:13;;1605:26;;1686:15;;;;1651:12;;;;1578:1;1571:9;1542:169;;;-1:-1:-1;1728:3:1;;1105:632;-1:-1:-1;;;;;;1105:632:1:o;1742:156::-;1808:20;;1868:4;1857:16;;1847:27;;1837:55;;1888:1;1885;1878:12;1903:322;1977:6;1985;1993;2046:2;2034:9;2025:7;2021:23;2017:32;2014:52;;;2062:1;2059;2052:12;2014:52;2085:28;2103:9;2085:28;:::i;:::-;2075:38;;2132:36;2164:2;2153:9;2149:18;2132:36;:::i;:::-;2122:46;;2215:2;2204:9;2200:18;2187:32;2177:42;;1903:322;;;;;:::o;2230:180::-;2289:6;2342:2;2330:9;2321:7;2317:23;2313:32;2310:52;;;2358:1;2355;2348:12;2310:52;-1:-1:-1;2381:23:1;;2230:180;-1:-1:-1;2230:180:1:o;2415:358::-;2482:6;2490;2543:2;2531:9;2522:7;2518:23;2514:32;2511:52;;;2559:1;2556;2549:12;2511:52;2582:28;2600:9;2582:28;:::i;:::-;2572:38;-1:-1:-1;2660:2:1;2645:18;;2632:32;-1:-1:-1;;;;;2693:31:1;;2683:42;;2673:70;;2739:1;2736;2729:12;2673:70;2762:5;2752:15;;;2415:358;;;;;:::o;3035:127::-;3096:10;3091:3;3087:20;3084:1;3077:31;3127:4;3124:1;3117:15;3151:4;3148:1;3141:15;3167:275;3238:2;3232:9;3303:2;3284:13;;-1:-1:-1;;3280:27:1;3268:40;;3338:18;3323:34;;3359:22;;;3320:62;3317:88;;;3385:18;;:::i;:::-;3421:2;3414:22;3167:275;;-1:-1:-1;3167:275:1:o;3447:160::-;3512:20;;3568:13;;3561:21;3551:32;;3541:60;;3597:1;3594;3587:12;3612:712;3666:5;3719:3;3712:4;3704:6;3700:17;3696:27;3686:55;;3737:1;3734;3727:12;3686:55;3773:6;3760:20;3799:4;3822:18;3818:2;3815:26;3812:52;;;3844:18;;:::i;:::-;3890:2;3887:1;3883:10;3913:28;3937:2;3933;3929:11;3913:28;:::i;:::-;3975:15;;;4045;;;4041:24;;;4006:12;;;;4077:15;;;4074:35;;;4105:1;4102;4095:12;4074:35;4141:2;4133:6;4129:15;4118:26;;4153:142;4169:6;4164:3;4161:15;4153:142;;;4235:17;;4223:30;;4186:12;;;;4273;;;;4153:142;;;4313:5;3612:712;-1:-1:-1;;;;;;;3612:712:1:o;4329:1419::-;4479:6;4487;4495;4503;4511;4519;4527;4535;4588:3;4576:9;4567:7;4563:23;4559:33;4556:53;;;4605:1;4602;4595:12;4556:53;4641:9;4628:23;4618:33;;4670:2;4723;4712:9;4708:18;4695:32;4746:18;4787:2;4779:6;4776:14;4773:34;;;4803:1;4800;4793:12;4773:34;4841:6;4830:9;4826:22;4816:32;;4886:7;4879:4;4875:2;4871:13;4867:27;4857:55;;4908:1;4905;4898:12;4857:55;4944:2;4931:16;4966:2;4962;4959:10;4956:36;;;4972:18;;:::i;:::-;5014:53;5057:2;5038:13;;-1:-1:-1;;5034:27:1;5030:36;;5014:53;:::i;:::-;5090:2;5083:5;5076:17;5130:7;5125:2;5120;5116;5112:11;5108:20;5105:33;5102:53;;;5151:1;5148;5141:12;5102:53;5206:2;5201;5197;5193:11;5188:2;5181:5;5177:14;5164:45;5250:1;5245:2;5240;5233:5;5229:14;5225:23;5218:34;5271:5;5261:15;;;;5295:35;5326:2;5315:9;5311:18;5295:35;:::i;:::-;5285:45;;5383:2;5372:9;5368:18;5355:32;5339:48;;5412:2;5402:8;5399:16;5396:36;;;5428:1;5425;5418:12;5396:36;;;5451:63;5506:7;5495:8;5484:9;5480:24;5451:63;:::i;:::-;5441:73;;;5533:38;5566:3;5555:9;5551:19;5533:38;:::i;:::-;5523:48;;5590:38;5623:3;5612:9;5608:19;5590:38;:::i;:::-;5580:48;;5647:38;5680:3;5669:9;5665:19;5647:38;:::i;:::-;5637:48;;5704:38;5737:3;5726:9;5722:19;5704:38;:::i;:::-;5694:48;;4329:1419;;;;;;;;;;;:::o;5753:254::-;5818:6;5826;5879:2;5867:9;5858:7;5854:23;5850:32;5847:52;;;5895:1;5892;5885:12;5847:52;5918:28;5936:9;5918:28;:::i;:::-;5908:38;;5965:36;5997:2;5986:9;5982:18;5965:36;:::i;:::-;5955:46;;5753:254;;;;;:::o;7233:127::-;7294:10;7289:3;7285:20;7282:1;7275:31;7325:4;7322:1;7315:15;7349:4;7346:1;7339:15;7365:127;7426:10;7421:3;7417:20;7414:1;7407:31;7457:4;7454:1;7447:15;7481:4;7478:1;7471:15;7497:175;7534:3;7578:4;7571:5;7567:16;7607:4;7598:7;7595:17;7592:43;;;7615:18;;:::i;:::-;7664:1;7651:15;;7497:175;-1:-1:-1;;7497:175:1:o;7677:201::-;7715:3;7743:10;7788:2;7781:5;7777:14;7815:2;7806:7;7803:15;7800:41;;;7821:18;;:::i;:::-;7870:1;7857:15;;7677:201;-1:-1:-1;;;7677:201:1:o;8711:204::-;8749:3;8785:4;8782:1;8778:12;8817:4;8814:1;8810:12;8852:3;8846:4;8842:14;8837:3;8834:23;8831:49;;;8860:18;;:::i;:::-;8896:13;;8711:204;-1:-1:-1;;;8711:204:1:o;9019:1172::-;9312:4;9341:3;9371:6;9360:9;9353:25;9397:2;9435;9430;9419:9;9415:18;9408:30;9467:6;9461:13;9510:6;9505:2;9494:9;9490:18;9483:34;9535:1;9526:10;;9545:141;9559:6;9556:1;9553:13;9545:141;;;9655:14;;;9651:23;;9645:30;9620:17;;;9639:3;9616:27;9609:67;9574:10;;;;9545:141;;;9704:6;9701:1;9698:13;9695:92;;;9775:1;9769:3;9760:6;9749:9;9745:22;9741:32;9734:43;9695:92;9848:2;9827:15;-1:-1:-1;;9823:29:1;9808:45;;9855:3;9804:55;;-1:-1:-1;9868:45:1;;-1:-1:-1;;9909:2:1;9894:18;;9886:6;8996:10;8985:22;8973:35;;8920:94;9868:45;887:13;;880:21;9961:2;9946:18;;868:34;8996:10;8985:22;;;10015:3;10000:19;;8973:35;8985:22;;;10070:3;10055:19;;8973:35;8985:22;;;10125:3;10110:19;;8973:35;8985:22;;;10180:3;10165:19;;;8973:35;9019:1172;;-1:-1:-1;;;9019:1172:1:o;11967:128::-;12007:3;12038:1;12034:6;12031:1;12028:13;12025:39;;;12044:18;;:::i;:::-;-1:-1:-1;12080:9:1;;11967:128::o;12100:125::-;12140:4;12168:1;12165;12162:8;12159:34;;;12173:18;;:::i;:::-;-1:-1:-1;12210:9:1;;12100:125::o;12674:380::-;12753:1;12749:12;;;;12796;;;12817:61;;12871:4;12863:6;12859:17;12849:27;;12817:61;12924:2;12916:6;12913:14;12893:18;12890:38;12887:161;;;12970:10;12965:3;12961:20;12958:1;12951:31;13005:4;13002:1;12995:15;13033:4;13030:1;13023:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    57,
    8734
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8553E12D GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x901AB94D GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x901AB94D EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0xB957E109 EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0xD66E33CA EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0xE0D7C7CC EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0xEDFBF9B0 EQ PUSH2 0x366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8553E12D EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x89B0BF99 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x89F67182 EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0x8BC31C84 EQ PUSH2 0x27B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F8C13F0 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x3F8C13F0 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x5B4206C4 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x7133A501 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x7349746B EQ PUSH2 0x1F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x28FF9F3 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x130D7906 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x320D0573 EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x3EC4F362 EQ PUSH2 0x1A9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13E PUSH2 0x11E CALLDATASIZE PUSH1 0x4 PUSH2 0x112F JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x168 PUSH2 0x163 CALLDATASIZE PUSH1 0x4 PUSH2 0x1159 JUMP JUMPDEST PUSH2 0x3B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x199 PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0x1159 JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14C JUMP JUMPDEST PUSH2 0x1BC PUSH2 0x1B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1159 JUMP JUMPDEST PUSH2 0x427 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x1174 JUMP JUMPDEST PUSH2 0x199 PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1159 JUMP JUMPDEST PUSH2 0x5B7 JUMP JUMPDEST PUSH2 0x168 PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0x11C9 JUMP JUMPDEST PUSH2 0x618 JUMP JUMPDEST PUSH2 0x1BC PUSH2 0x629 JUMP JUMPDEST PUSH2 0x199 PUSH2 0x205 CALLDATASIZE PUSH1 0x4 PUSH2 0x1205 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x199 PUSH2 0x22D CALLDATASIZE PUSH1 0x4 PUSH2 0x121E JUMP JUMPDEST PUSH2 0x725 JUMP JUMPDEST PUSH2 0x13E PUSH2 0x240 CALLDATASIZE PUSH1 0x4 PUSH2 0x112F JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x13E PUSH2 0x276 CALLDATASIZE PUSH1 0x4 PUSH2 0x112F JUMP JUMPDEST PUSH2 0x794 JUMP JUMPDEST PUSH2 0x168 PUSH2 0x289 CALLDATASIZE PUSH1 0x4 PUSH2 0x1338 JUMP JUMPDEST PUSH2 0x7D7 JUMP JUMPDEST PUSH2 0x2C0 PUSH2 0x29C CALLDATASIZE PUSH1 0x4 PUSH2 0x144E JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x14C JUMP JUMPDEST PUSH2 0x199 PUSH2 0x2E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x144E JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0xFF DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x199 PUSH2 0x31D CALLDATASIZE PUSH1 0x4 PUSH2 0x121E JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x199 PUSH2 0x361 CALLDATASIZE PUSH1 0x4 PUSH2 0x1159 JUMP JUMPDEST PUSH2 0xC09 JUMP JUMPDEST PUSH2 0x39B PUSH2 0x374 CALLDATASIZE PUSH1 0x4 PUSH2 0x121E JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x14C JUMP JUMPDEST PUSH2 0x3B9 DUP2 PUSH2 0xC09 JUMP JUMPDEST PUSH2 0x402 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x2932B3B4B9BA3930BA34B7B7103737BA1037B832B7 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 SWAP1 SSTORE JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x60 SWAP2 AND PUSH2 0x492 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520656C656374696F6E20646F65736E2774206578697374000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4C0 JUMPI PUSH2 0x4C0 PUSH2 0x1261 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4E9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH4 0xFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF DUP3 AND LT ISZERO PUSH2 0x5B0 JUMPI PUSH4 0xFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x5 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP2 PUSH1 0xFF DUP6 AND SWAP1 DUP2 LT PUSH2 0x546 JUMPI PUSH2 0x546 PUSH2 0x1481 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP3 DUP3 PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0x593 JUMPI PUSH2 0x593 PUSH2 0x1481 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x5A8 DUP2 PUSH2 0x14AD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4EF JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD SWAP1 SWAP2 TIMESTAMP PUSH6 0x10000000000 SWAP1 SWAP3 DIV AND GT DUP1 ISZERO SWAP1 PUSH2 0x612 JUMPI POP PUSH4 0xFFFFFFFF DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD TIMESTAMP PUSH1 0x1 PUSH1 0x48 SHL SWAP1 SWAP2 DIV SWAP1 SWAP2 AND LT ISZERO JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x624 DUP4 CALLER DUP5 DUP5 PUSH2 0xC65 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x64A JUMPI PUSH2 0x64A PUSH2 0x1261 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x673 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x1 SLOAD PUSH4 0xFFFFFFFF DUP3 AND LT ISZERO PUSH2 0x71F JUMPI PUSH1 0x2 PUSH1 0x0 PUSH1 0x1 DUP4 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x6A6 JUMPI PUSH2 0x6A6 PUSH2 0x1481 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x4 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP3 DUP3 PUSH4 0xFFFFFFFF AND DUP2 MLOAD DUP2 LT PUSH2 0x702 JUMPI PUSH2 0x702 PUSH2 0x1481 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x717 DUP2 PUSH2 0x14CD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x679 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD ISZERO ISZERO DUP1 PUSH2 0x78D JUMPI POP PUSH4 0xFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x7B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP6 MLOAD GT PUSH2 0x834 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x54686572652073686F756C642062652061746C6561737420312063616E646964 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x30BA3297 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND ISZERO PUSH2 0x8B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468697320656C656374696F6E20616C7265616479206578697374732C20706C PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x656173652073656C656374206F74686572206E616D65 PUSH1 0x50 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE DUP11 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP12 DUP2 MSTORE PUSH4 0xFFFFFFFF SWAP5 DUP6 AND DUP4 DUP6 ADD DUP2 SWAP1 MSTORE DUP12 ISZERO ISZERO PUSH1 0x60 DUP6 ADD MSTORE DUP10 DUP7 AND PUSH1 0x80 DUP6 ADD MSTORE DUP9 DUP7 AND PUSH1 0xA0 DUP6 ADD MSTORE DUP8 DUP7 AND PUSH1 0xC0 DUP6 ADD MSTORE SWAP5 DUP7 AND PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 DUP4 MSTORE SWAP4 SWAP1 SWAP4 KECCAK256 DUP3 MLOAD DUP2 SSTORE SWAP3 MLOAD DUP1 MLOAD SWAP3 SWAP4 SWAP3 PUSH2 0x92C SWAP3 PUSH1 0x1 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x107D JUMP JUMPDEST POP PUSH1 0x40 DUP3 DUP2 ADD MLOAD PUSH1 0x2 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x80 DUP7 ADD MLOAD PUSH1 0xA0 DUP8 ADD MLOAD PUSH1 0xC0 DUP9 ADD MLOAD PUSH1 0xE0 SWAP1 SWAP9 ADD MLOAD PUSH4 0xFFFFFFFF SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x88 SHL MUL PUSH4 0xFFFFFFFF PUSH1 0x88 SHL NOT SWAP10 DUP3 AND PUSH1 0x1 PUSH1 0x68 SHL MUL SWAP10 SWAP1 SWAP10 AND PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x68 SHL NOT SWAP3 DUP3 AND PUSH1 0x1 PUSH1 0x48 SHL MUL PUSH13 0xFFFFFFFF000000000000000000 NOT SWAP5 DUP4 AND PUSH6 0x10000000000 MUL SWAP5 SWAP1 SWAP5 AND PUSH13 0xFFFFFFFFFFFFFFFF0000000000 NOT SWAP6 ISZERO ISZERO PUSH5 0x100000000 MUL PUSH5 0xFFFFFFFFFF NOT SWAP1 SWAP8 AND SWAP10 DUP4 AND SWAP10 SWAP1 SWAP10 OR SWAP6 SWAP1 SWAP6 OR SWAP4 SWAP1 SWAP4 AND SWAP7 SWAP1 SWAP7 OR OR SWAP5 SWAP1 SWAP5 AND OR SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP2 DUP3 KECCAK256 DUP1 SLOAD DUP5 DUP4 AND PUSH4 0xFFFFFFFF NOT SWAP2 SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SLOAD DUP1 DUP3 ADD DUP3 SSTORE SWAP1 DUP5 MSTORE PUSH1 0x8 DUP2 DIV PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD DUP1 SLOAD PUSH1 0x7 SWAP1 SWAP3 AND PUSH1 0x4 MUL PUSH2 0x100 EXP SWAP3 DUP4 MUL SWAP3 SWAP1 SWAP4 MUL NOT AND OR SWAP1 SSTORE JUMPDEST DUP7 MLOAD DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0xB42 JUMPI PUSH2 0xB30 DUP3 DUP9 DUP4 PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0xA82 JUMPI PUSH2 0xA82 PUSH2 0x1481 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH1 0x1 PUSH2 0xA97 SWAP2 SWAP1 PUSH2 0x14F1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE DUP4 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP3 DUP2 MSTORE PUSH4 0xFFFFFFFF SWAP8 SWAP1 SWAP8 AND DUP1 DUP4 MSTORE PUSH1 0x3 DUP3 MSTORE DUP5 DUP4 KECCAK256 PUSH1 0xFF SWAP7 DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP6 DUP5 KECCAK256 SWAP5 MLOAD DUP6 SSTORE SWAP8 MLOAD PUSH1 0x1 SWAP5 DUP6 ADD SSTORE DUP1 DUP4 MSTORE PUSH1 0x4 DUP3 MSTORE DUP5 DUP4 KECCAK256 SWAP7 DUP4 MSTORE SWAP6 DUP2 MSTORE DUP4 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP9 OR SWAP1 SSTORE SWAP5 DUP2 MSTORE PUSH1 0x5 DUP6 MSTORE SWAP2 DUP3 KECCAK256 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 SWAP3 DUP2 DIV SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1F SWAP1 SWAP4 AND PUSH2 0x100 EXP SWAP2 DUP3 MUL NOT SWAP1 SWAP3 AND SWAP3 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH2 0xB3A DUP2 PUSH2 0x14AD JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA5D JUMP JUMPDEST POP PUSH32 0x8C22F42E1642C0F410BC4E3DEBF771A1355EC556BDAF3CE7428E555196569C96 DUP10 DUP10 DUP4 DUP11 DUP10 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH2 0xB80 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1516 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x7 DUP1 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x0 PUSH2 0xB9E DUP4 PUSH2 0x14CD JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH1 0x7 PUSH1 0x4 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xBDF SWAP1 PUSH2 0x14CD JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD SWAP1 SWAP2 TIMESTAMP PUSH1 0x1 PUSH1 0x68 SHL SWAP1 SWAP3 DIV AND GT DUP1 ISZERO SWAP1 PUSH2 0x612 JUMPI POP POP PUSH4 0xFFFFFFFF SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD TIMESTAMP PUSH1 0x1 PUSH1 0x88 SHL SWAP1 SWAP2 DIV SWAP1 SWAP2 AND LT ISZERO SWAP1 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD AND PUSH2 0xCCD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520656C656374696F6E20646F65736E2774206578697374000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH2 0xCD6 DUP5 PUSH2 0x5B7 JUMP JUMPDEST PUSH2 0xD1B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x151A1948195B1958DD1A5BDB881A5CC818DB1BDCD959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xDA0 JUMPI PUSH2 0xD4F DUP5 DUP5 PUSH2 0x725 JUMP JUMPDEST PUSH2 0xD9B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F746572206861736E27742072656769737465726564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH2 0xDCE JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 SWAP1 SSTORE JUMPDEST PUSH4 0xFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE4B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F7465722068617320616C726561647920566F746564210000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0xEC4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F74657220646F206E6F74206861766520736F206D616E7920766F74657300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0xFF DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0xF34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642063616E64696461746520746F20566F746521000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0xFF DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xF66 SWAP1 DUP3 SWAP1 PUSH2 0x15BC JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0xFF DUP9 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 PUSH1 0x1 ADD SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP2 MSTORE PUSH1 0x6 DUP3 MSTORE DUP3 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP3 MSTORE SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH2 0xFB6 SWAP1 DUP3 SWAP1 PUSH2 0x15D4 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE PUSH2 0x1020 JUMPI PUSH4 0xFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF DUP7 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xFF DUP5 AND DUP2 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD PUSH32 0x66EB9354084DA3C9417BFAEB0F63DE26C8976282F67E1687AF5B90E8D3FBD387 SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1089 SWAP1 PUSH2 0x15EB JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x10AB JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x10F1 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x10C4 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x10F1 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x10F1 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x10F1 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x10D6 JUMP JUMPDEST POP PUSH2 0x10FD SWAP3 SWAP2 POP PUSH2 0x1101 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x10FD JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1102 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x112A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1142 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x114B DUP4 PUSH2 0x1116 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x116B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x78D DUP3 PUSH2 0x1116 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x11AC JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1190 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x112A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x11DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11E7 DUP5 PUSH2 0x1116 JUMP JUMPDEST SWAP3 POP PUSH2 0x11F5 PUSH1 0x20 DUP6 ADD PUSH2 0x11B8 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1231 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123A DUP4 PUSH2 0x1116 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x12A0 JUMPI PUSH2 0x12A0 PUSH2 0x1261 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x112A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x12C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x12E5 JUMPI PUSH2 0x12E5 PUSH2 0x1261 JUMP JUMPDEST DUP2 PUSH1 0x5 SHL PUSH2 0x12F4 DUP3 DUP3 ADD PUSH2 0x1277 JUMP JUMPDEST SWAP3 DUP4 MSTORE DUP5 DUP2 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP1 DUP8 DUP6 GT ISZERO PUSH2 0x130E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD SWAP3 POP JUMPDEST DUP5 DUP4 LT ISZERO PUSH2 0x132D JUMPI DUP3 CALLDATALOAD DUP3 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH2 0x1314 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x1355 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD SWAP8 POP PUSH1 0x20 DUP1 DUP11 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1375 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP13 ADD SWAP2 POP DUP13 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x139B JUMPI PUSH2 0x139B PUSH2 0x1261 JUMP JUMPDEST PUSH2 0x13AD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP6 ADD PUSH2 0x1277 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP15 DUP6 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x13C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 DUP6 ADD DUP7 DUP4 ADD CALLDATACOPY PUSH1 0x0 DUP6 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP12 POP POP POP PUSH2 0x13E2 PUSH1 0x40 DUP14 ADD PUSH2 0x12A8 JUMP JUMPDEST SWAP9 POP PUSH1 0x60 DUP13 ADD CALLDATALOAD SWAP3 POP DUP1 DUP4 GT ISZERO PUSH2 0x13F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH2 0x1406 DUP12 DUP3 DUP13 ADD PUSH2 0x12B8 JUMP JUMPDEST SWAP6 POP POP PUSH2 0x1415 PUSH1 0x80 DUP11 ADD PUSH2 0x1116 JUMP JUMPDEST SWAP4 POP PUSH2 0x1423 PUSH1 0xA0 DUP11 ADD PUSH2 0x1116 JUMP JUMPDEST SWAP3 POP PUSH2 0x1431 PUSH1 0xC0 DUP11 ADD PUSH2 0x1116 JUMP JUMPDEST SWAP2 POP PUSH2 0x143F PUSH1 0xE0 DUP11 ADD PUSH2 0x1116 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1461 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x146A DUP4 PUSH2 0x1116 JUMP JUMPDEST SWAP2 POP PUSH2 0x1478 PUSH1 0x20 DUP5 ADD PUSH2 0x11B8 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x14C4 JUMPI PUSH2 0x14C4 PUSH2 0x1497 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 DUP4 AND DUP2 DUP2 EQ ISZERO PUSH2 0x14E7 JUMPI PUSH2 0x14E7 PUSH2 0x1497 JUMP JUMPDEST PUSH1 0x1 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP5 AND DUP1 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH2 0x150E JUMPI PUSH2 0x150E PUSH2 0x1497 JUMP JUMPDEST ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP11 DUP4 MSTORE PUSH1 0x20 DUP2 DUP2 DUP6 ADD MSTORE DUP11 MLOAD DUP1 DUP4 DUP7 ADD MSTORE PUSH1 0x0 SWAP3 POP JUMPDEST DUP1 DUP4 LT ISZERO PUSH2 0x1550 JUMPI DUP12 DUP4 ADD DUP3 ADD MLOAD DUP6 DUP5 ADD PUSH2 0x120 ADD MSTORE SWAP2 DUP2 ADD SWAP2 PUSH2 0x1531 JUMP JUMPDEST DUP1 DUP4 GT ISZERO PUSH2 0x1563 JUMPI PUSH1 0x0 PUSH2 0x120 DUP3 DUP8 ADD ADD MSTORE JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP5 ADD PUSH2 0x120 ADD SWAP3 POP PUSH2 0x1587 SWAP2 POP POP PUSH1 0x40 DUP4 ADD DUP10 PUSH4 0xFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST SWAP6 ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH4 0xFFFFFFFF SWAP5 DUP6 AND PUSH1 0x80 DUP3 ADD MSTORE SWAP3 DUP5 AND PUSH1 0xA0 DUP5 ADD MSTORE SWAP1 DUP4 AND PUSH1 0xC0 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0xE0 SWAP1 SWAP2 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x15CF JUMPI PUSH2 0x15CF PUSH2 0x1497 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x15E6 JUMPI PUSH2 0x15E6 PUSH2 0x1497 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x15FF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x71F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS 0x2B 0xF8 PUSH7 0xEB3794D4CDE5BA EXTCODECOPY GAS 0x5C 0x4D SWAP13 EXTCODEHASH MULMOD ADDMOD 0xAF 0xE9 GASLIMIT PUSH14 0x85F3116BEC27C2BB8564736F6C63 NUMBER STOP ADDMOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        57,
        8734
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10B"
    },
    "25": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8553E12D"
    },
    "38": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA2"
    },
    "42": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x901AB94D"
    },
    "49": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "GT",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x901AB94D"
    },
    "60": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28E"
    },
    "64": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB957E109"
    },
    "71": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D5"
    },
    "75": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD66E33CA"
    },
    "82": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x30F"
    },
    "86": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE0D7C7CC"
    },
    "93": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "EQ",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x353"
    },
    "97": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "DUP1",
      "path": "0"
    },
    "99": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xEDFBF9B0"
    },
    "104": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "EQ",
      "path": "0"
    },
    "105": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x366"
    },
    "108": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "109": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "DUP1",
      "path": "0"
    },
    "112": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "REVERT",
      "path": "0"
    },
    "113": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "DUP1",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8553E12D"
    },
    "120": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "EQ",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21F"
    },
    "124": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x89B0BF99"
    },
    "131": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "EQ",
      "path": "0"
    },
    "132": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x232"
    },
    "135": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "DUP1",
      "path": "0"
    },
    "137": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x89F67182"
    },
    "142": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "EQ",
      "path": "0"
    },
    "143": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x268"
    },
    "146": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "147": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "DUP1",
      "path": "0"
    },
    "148": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8BC31C84"
    },
    "153": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "EQ",
      "path": "0"
    },
    "154": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27B"
    },
    "157": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "158": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "160": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "DUP1",
      "path": "0"
    },
    "161": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "REVERT",
      "path": "0"
    },
    "162": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "163": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "DUP1",
      "path": "0"
    },
    "164": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3F8C13F0"
    },
    "169": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "GT",
      "path": "0"
    },
    "170": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDE"
    },
    "173": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "174": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "DUP1",
      "path": "0"
    },
    "175": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3F8C13F0"
    },
    "180": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "EQ",
      "path": "0"
    },
    "181": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C9"
    },
    "184": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "185": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "DUP1",
      "path": "0"
    },
    "186": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5B4206C4"
    },
    "191": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "EQ",
      "path": "0"
    },
    "192": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DC"
    },
    "195": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "196": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "DUP1",
      "path": "0"
    },
    "197": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7133A501"
    },
    "202": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "EQ",
      "path": "0"
    },
    "203": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EF"
    },
    "206": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "207": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "DUP1",
      "path": "0"
    },
    "208": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7349746B"
    },
    "213": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "EQ",
      "path": "0"
    },
    "214": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F7"
    },
    "217": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "218": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "220": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "DUP1",
      "path": "0"
    },
    "221": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "REVERT",
      "path": "0"
    },
    "222": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "223": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "DUP1",
      "path": "0"
    },
    "224": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x28FF9F3"
    },
    "229": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "EQ",
      "path": "0"
    },
    "230": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x110"
    },
    "233": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "234": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "DUP1",
      "path": "0"
    },
    "235": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x130D7906"
    },
    "240": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "EQ",
      "path": "0"
    },
    "241": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x155"
    },
    "244": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "245": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "DUP1",
      "path": "0"
    },
    "246": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x320D0573"
    },
    "251": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "EQ",
      "path": "0"
    },
    "252": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16A"
    },
    "255": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "256": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "DUP1",
      "path": "0"
    },
    "257": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3EC4F362"
    },
    "262": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "EQ",
      "path": "0"
    },
    "263": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A9"
    },
    "266": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "267": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "268": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "270": {
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "DUP1",
      "path": "0"
    },
    "271": {
      "first_revert": true,
      "fn": null,
      "offset": [
        57,
        8734
      ],
      "op": "REVERT",
      "path": "0"
    },
    "272": {
      "offset": [
        1021,
        1086
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "273": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13E"
    },
    "276": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11E"
    },
    "279": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "280": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "282": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x112F"
    },
    "285": {
      "fn": null,
      "jump": "i",
      "offset": [
        1021,
        1086
      ],
      "op": "JUMP",
      "path": "0"
    },
    "286": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "287": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "289": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "291": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "292": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "DUP2",
      "path": "0"
    },
    "293": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "294": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "296": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "297": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "DUP4",
      "path": "0"
    },
    "298": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "299": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "301": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "DUP1",
      "path": "0"
    },
    "302": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "DUP5",
      "path": "0"
    },
    "303": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "304": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "305": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "306": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "307": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "308": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "DUP3",
      "path": "0"
    },
    "309": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "310": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "311": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "312": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "313": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "315": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "AND",
      "path": "0"
    },
    "316": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "DUP2",
      "path": "0"
    },
    "317": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "JUMP",
      "path": "0"
    },
    "318": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "319": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "321": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "322": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "324": {
      "op": "SWAP1"
    },
    "325": {
      "op": "SWAP2"
    },
    "326": {
      "op": "AND"
    },
    "327": {
      "op": "DUP2"
    },
    "328": {
      "op": "MSTORE"
    },
    "329": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "331": {
      "op": "ADD"
    },
    "332": {
      "offset": [
        1021,
        1086
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "333": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "335": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "336": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "DUP1",
      "path": "0"
    },
    "337": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "338": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "SUB",
      "path": "0"
    },
    "339": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "340": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "RETURN",
      "path": "0"
    },
    "341": {
      "fn": "SimpleElection.register",
      "offset": [
        6962,
        7140
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "342": {
      "fn": "SimpleElection.register",
      "offset": [
        6962,
        7140
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x168"
    },
    "345": {
      "fn": "SimpleElection.register",
      "offset": [
        6962,
        7140
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x163"
    },
    "348": {
      "fn": "SimpleElection.register",
      "offset": [
        6962,
        7140
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "349": {
      "fn": "SimpleElection.register",
      "offset": [
        6962,
        7140
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "351": {
      "fn": "SimpleElection.register",
      "offset": [
        6962,
        7140
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1159"
    },
    "354": {
      "fn": "SimpleElection.register",
      "jump": "i",
      "offset": [
        6962,
        7140
      ],
      "op": "JUMP",
      "path": "0"
    },
    "355": {
      "fn": "SimpleElection.register",
      "offset": [
        6962,
        7140
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "356": {
      "fn": "SimpleElection.register",
      "offset": [
        6962,
        7140
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B0"
    },
    "359": {
      "fn": "SimpleElection.register",
      "jump": "i",
      "offset": [
        6962,
        7140
      ],
      "op": "JUMP",
      "path": "0"
    },
    "360": {
      "fn": "SimpleElection.register",
      "offset": [
        6962,
        7140
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "361": {
      "fn": "SimpleElection.register",
      "offset": [
        6962,
        7140
      ],
      "op": "STOP",
      "path": "0"
    },
    "362": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8212,
        8337
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "363": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8212,
        8337
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x199"
    },
    "366": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8212,
        8337
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x178"
    },
    "369": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8212,
        8337
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "370": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8212,
        8337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "372": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8212,
        8337
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1159"
    },
    "375": {
      "fn": "SimpleElection.electionExists",
      "jump": "i",
      "offset": [
        8212,
        8337
      ],
      "op": "JUMP",
      "path": "0"
    },
    "376": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8212,
        8337
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "377": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8322
      ],
      "op": "PUSH4",
      "path": "0",
      "statement": 0,
      "value": "0xFFFFFFFF"
    },
    "382": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8322
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "383": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8322
      ],
      "op": "DUP2",
      "path": "0"
    },
    "384": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8322
      ],
      "op": "AND",
      "path": "0"
    },
    "385": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8277,
        8281
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "387": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8322
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "388": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8322
      ],
      "op": "DUP2",
      "path": "0"
    },
    "389": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8322
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "390": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8309
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "392": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8322
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "394": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8322
      ],
      "op": "DUP2",
      "path": "0"
    },
    "395": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8322
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "396": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8322
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "397": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8322
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "399": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8322
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "400": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8322
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "401": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8322
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "402": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8325
      ],
      "op": "ADD",
      "path": "0"
    },
    "403": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8325
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "404": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8325
      ],
      "op": "AND",
      "path": "0"
    },
    "405": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8330
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "406": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8330
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "407": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8330
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "408": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8212,
        8337
      ],
      "op": "JUMP",
      "path": "0"
    },
    "409": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8212,
        8337
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "410": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8212,
        8337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "412": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8212,
        8337
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "413": {
      "op": "SWAP1"
    },
    "414": {
      "op": "ISZERO"
    },
    "415": {
      "op": "ISZERO"
    },
    "416": {
      "op": "DUP2"
    },
    "417": {
      "op": "MSTORE"
    },
    "418": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "420": {
      "op": "ADD"
    },
    "421": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8212,
        8337
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14C"
    },
    "424": {
      "op": "JUMP"
    },
    "425": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6291,
        6799
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "426": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6291,
        6799
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BC"
    },
    "429": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6291,
        6799
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B7"
    },
    "432": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6291,
        6799
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "433": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6291,
        6799
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "435": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6291,
        6799
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1159"
    },
    "438": {
      "fn": "SimpleElection.getCandidatesForElection",
      "jump": "i",
      "offset": [
        6291,
        6799
      ],
      "op": "JUMP",
      "path": "0"
    },
    "439": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6291,
        6799
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "440": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6291,
        6799
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x427"
    },
    "443": {
      "fn": "SimpleElection.getCandidatesForElection",
      "jump": "i",
      "offset": [
        6291,
        6799
      ],
      "op": "JUMP",
      "path": "0"
    },
    "444": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6291,
        6799
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "445": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6291,
        6799
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "447": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6291,
        6799
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "448": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6291,
        6799
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14C"
    },
    "451": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6291,
        6799
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "452": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6291,
        6799
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "453": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6291,
        6799
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1174"
    },
    "456": {
      "fn": "SimpleElection.getCandidatesForElection",
      "jump": "i",
      "offset": [
        6291,
        6799
      ],
      "op": "JUMP",
      "path": "0"
    },
    "457": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7420,
        7648
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "458": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7420,
        7648
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x199"
    },
    "461": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7420,
        7648
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D7"
    },
    "464": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7420,
        7648
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "465": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7420,
        7648
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "467": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7420,
        7648
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1159"
    },
    "470": {
      "fn": "SimpleElection.checkElectionOpen",
      "jump": "i",
      "offset": [
        7420,
        7648
      ],
      "op": "JUMP",
      "path": "0"
    },
    "471": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7420,
        7648
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "472": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7420,
        7648
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B7"
    },
    "475": {
      "fn": "SimpleElection.checkElectionOpen",
      "jump": "i",
      "offset": [
        7420,
        7648
      ],
      "op": "JUMP",
      "path": "0"
    },
    "476": {
      "fn": "SimpleElection.vote",
      "offset": [
        5643,
        5901
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "477": {
      "fn": "SimpleElection.vote",
      "offset": [
        5643,
        5901
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x168"
    },
    "480": {
      "fn": "SimpleElection.vote",
      "offset": [
        5643,
        5901
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EA"
    },
    "483": {
      "fn": "SimpleElection.vote",
      "offset": [
        5643,
        5901
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "484": {
      "fn": "SimpleElection.vote",
      "offset": [
        5643,
        5901
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "486": {
      "fn": "SimpleElection.vote",
      "offset": [
        5643,
        5901
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11C9"
    },
    "489": {
      "fn": "SimpleElection.vote",
      "jump": "i",
      "offset": [
        5643,
        5901
      ],
      "op": "JUMP",
      "path": "0"
    },
    "490": {
      "fn": "SimpleElection.vote",
      "offset": [
        5643,
        5901
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "491": {
      "fn": "SimpleElection.vote",
      "offset": [
        5643,
        5901
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x618"
    },
    "494": {
      "fn": "SimpleElection.vote",
      "jump": "i",
      "offset": [
        5643,
        5901
      ],
      "op": "JUMP",
      "path": "0"
    },
    "495": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        5935,
        6243
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "496": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        5935,
        6243
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BC"
    },
    "499": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        5935,
        6243
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x629"
    },
    "502": {
      "fn": "SimpleElection.getCurrentElections",
      "jump": "i",
      "offset": [
        5935,
        6243
      ],
      "op": "JUMP",
      "path": "0"
    },
    "503": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8076,
        8206
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "504": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8076,
        8206
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x199"
    },
    "507": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8076,
        8206
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x205"
    },
    "510": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8076,
        8206
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "511": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8076,
        8206
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "513": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8076,
        8206
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1205"
    },
    "516": {
      "fn": "SimpleElection.electionExists",
      "jump": "i",
      "offset": [
        8076,
        8206
      ],
      "op": "JUMP",
      "path": "0"
    },
    "517": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8076,
        8206
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "518": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8144,
        8148
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "520": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8167,
        8194
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 1
    },
    "521": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8167,
        8194
      ],
      "op": "DUP2",
      "path": "0"
    },
    "522": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8167,
        8194
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "523": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8167,
        8194
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "525": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8167,
        8194
      ],
      "op": "DUP2",
      "path": "0"
    },
    "526": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8167,
        8194
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "527": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8167,
        8194
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "528": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8167,
        8194
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "530": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8167,
        8194
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "531": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8167,
        8194
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "532": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8167,
        8194
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "533": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8167,
        8194
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "538": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8167,
        8194
      ],
      "op": "AND",
      "path": "0"
    },
    "539": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8167,
        8199
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "540": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8167,
        8199
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "541": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8167,
        8199
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "542": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8076,
        8206
      ],
      "op": "JUMP",
      "path": "0"
    },
    "543": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7654,
        7895
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "544": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7654,
        7895
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x199"
    },
    "547": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7654,
        7895
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22D"
    },
    "550": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7654,
        7895
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "551": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7654,
        7895
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "553": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7654,
        7895
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x121E"
    },
    "556": {
      "fn": "SimpleElection.voterHasRegistred",
      "jump": "i",
      "offset": [
        7654,
        7895
      ],
      "op": "JUMP",
      "path": "0"
    },
    "557": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7654,
        7895
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "558": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7654,
        7895
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x725"
    },
    "561": {
      "fn": "SimpleElection.voterHasRegistred",
      "jump": "i",
      "offset": [
        7654,
        7895
      ],
      "op": "JUMP",
      "path": "0"
    },
    "562": {
      "fn": "SimpleElection.getCandidateId",
      "offset": [
        8542,
        8732
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "563": {
      "fn": "SimpleElection.getCandidateId",
      "offset": [
        8542,
        8732
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13E"
    },
    "566": {
      "fn": "SimpleElection.getCandidateId",
      "offset": [
        8542,
        8732
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x240"
    },
    "569": {
      "fn": "SimpleElection.getCandidateId",
      "offset": [
        8542,
        8732
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "570": {
      "fn": "SimpleElection.getCandidateId",
      "offset": [
        8542,
        8732
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "572": {
      "fn": "SimpleElection.getCandidateId",
      "offset": [
        8542,
        8732
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x112F"
    },
    "575": {
      "fn": "SimpleElection.getCandidateId",
      "jump": "i",
      "offset": [
        8542,
        8732
      ],
      "op": "JUMP",
      "path": "0"
    },
    "576": {
      "fn": "SimpleElection.getCandidateId",
      "offset": [
        8542,
        8732
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "577": {
      "fn": "SimpleElection.getCandidateId",
      "offset": [
        8683,
        8709
      ],
      "op": "PUSH4",
      "path": "0",
      "statement": 2,
      "value": "0xFFFFFFFF"
    },
    "582": {
      "fn": "SimpleElection.getCandidateId",
      "offset": [
        8683,
        8709
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "583": {
      "fn": "SimpleElection.getCandidateId",
      "offset": [
        8683,
        8709
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "584": {
      "fn": "SimpleElection.getCandidateId",
      "offset": [
        8683,
        8709
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "585": {
      "fn": "SimpleElection.getCandidateId",
      "offset": [
        8683,
        8709
      ],
      "op": "AND",
      "path": "0"
    },
    "586": {
      "fn": "SimpleElection.getCandidateId",
      "offset": [
        8655,
        8660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "588": {
      "fn": "SimpleElection.getCandidateId",
      "offset": [
        8683,
        8709
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "589": {
      "fn": "SimpleElection.getCandidateId",
      "offset": [
        8683,
        8709
      ],
      "op": "DUP2",
      "path": "0"
    },
    "590": {
      "fn": "SimpleElection.getCandidateId",
      "offset": [
        8683,
        8709
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "591": {
      "fn": "SimpleElection.getCandidateId",
      "offset": [
        8683,
        8696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "593": {
      "fn": "SimpleElection.getCandidateId",
      "offset": [
        8683,
        8709
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "595": {
      "fn": "SimpleElection.getCandidateId",
      "offset": [
        8683,
        8709
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "596": {
      "fn": "SimpleElection.getCandidateId",
      "offset": [
        8683,
        8709
      ],
      "op": "DUP2",
      "path": "0"
    },
    "597": {
      "fn": "SimpleElection.getCandidateId",
      "offset": [
        8683,
        8709
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "598": {
      "fn": "SimpleElection.getCandidateId",
      "offset": [
        8683,
        8709
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "600": {
      "fn": "SimpleElection.getCandidateId",
      "offset": [
        8683,
        8709
      ],
      "op": "DUP1",
      "path": "0"
    },
    "601": {
      "fn": "SimpleElection.getCandidateId",
      "offset": [
        8683,
        8709
      ],
      "op": "DUP4",
      "path": "0"
    },
    "602": {
      "fn": "SimpleElection.getCandidateId",
      "offset": [
        8683,
        8709
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "603": {
      "fn": "SimpleElection.getCandidateId",
      "offset": [
        8683,
        8725
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "604": {
      "fn": "SimpleElection.getCandidateId",
      "offset": [
        8683,
        8725
      ],
      "op": "DUP4",
      "path": "0"
    },
    "605": {
      "fn": "SimpleElection.getCandidateId",
      "offset": [
        8683,
        8725
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "606": {
      "fn": "SimpleElection.getCandidateId",
      "offset": [
        8683,
        8725
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "607": {
      "fn": "SimpleElection.getCandidateId",
      "offset": [
        8683,
        8725
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "608": {
      "fn": "SimpleElection.getCandidateId",
      "offset": [
        8683,
        8725
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "609": {
      "fn": "SimpleElection.getCandidateId",
      "offset": [
        8683,
        8725
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "610": {
      "fn": "SimpleElection.getCandidateId",
      "offset": [
        8683,
        8725
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "611": {
      "fn": "SimpleElection.getCandidateId",
      "offset": [
        8683,
        8725
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "613": {
      "fn": "SimpleElection.getCandidateId",
      "offset": [
        8683,
        8725
      ],
      "op": "AND",
      "path": "0"
    },
    "614": {
      "fn": "SimpleElection.getCandidateId",
      "offset": [
        8683,
        8725
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "615": {
      "fn": "SimpleElection.getCandidateId",
      "offset": [
        8542,
        8732
      ],
      "op": "JUMP",
      "path": "0"
    },
    "616": {
      "offset": [
        1139,
        1187
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "617": {
      "fn": "SimpleElection.getCandidateId",
      "offset": [
        1139,
        1187
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13E"
    },
    "620": {
      "fn": "SimpleElection.getCandidateId",
      "offset": [
        1139,
        1187
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x276"
    },
    "623": {
      "fn": "SimpleElection.getCandidateId",
      "offset": [
        1139,
        1187
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "624": {
      "fn": "SimpleElection.getCandidateId",
      "offset": [
        1139,
        1187
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "626": {
      "fn": "SimpleElection.getCandidateId",
      "offset": [
        1139,
        1187
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x112F"
    },
    "629": {
      "fn": "SimpleElection.getCandidateId",
      "jump": "i",
      "offset": [
        1139,
        1187
      ],
      "op": "JUMP",
      "path": "0"
    },
    "630": {
      "fn": "SimpleElection.getCandidateId",
      "offset": [
        1139,
        1187
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "631": {
      "fn": "SimpleElection.getCandidateId",
      "offset": [
        1139,
        1187
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x794"
    },
    "634": {
      "fn": "SimpleElection.getCandidateId",
      "jump": "i",
      "offset": [
        1139,
        1187
      ],
      "op": "JUMP",
      "path": "0"
    },
    "635": {
      "fn": "SimpleElection.createElection",
      "offset": [
        1888,
        3517
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "636": {
      "fn": "SimpleElection.createElection",
      "offset": [
        1888,
        3517
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x168"
    },
    "639": {
      "fn": "SimpleElection.createElection",
      "offset": [
        1888,
        3517
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x289"
    },
    "642": {
      "fn": "SimpleElection.createElection",
      "offset": [
        1888,
        3517
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "643": {
      "fn": "SimpleElection.createElection",
      "offset": [
        1888,
        3517
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "645": {
      "fn": "SimpleElection.createElection",
      "offset": [
        1888,
        3517
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1338"
    },
    "648": {
      "fn": "SimpleElection.createElection",
      "jump": "i",
      "offset": [
        1888,
        3517
      ],
      "op": "JUMP",
      "path": "0"
    },
    "649": {
      "fn": "SimpleElection.createElection",
      "offset": [
        1888,
        3517
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "650": {
      "fn": "SimpleElection.createElection",
      "offset": [
        1888,
        3517
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7D7"
    },
    "653": {
      "fn": "SimpleElection.createElection",
      "jump": "i",
      "offset": [
        1888,
        3517
      ],
      "op": "JUMP",
      "path": "0"
    },
    "654": {
      "offset": [
        950,
        1014
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "655": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C0"
    },
    "658": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29C"
    },
    "661": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "662": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "664": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x144E"
    },
    "667": {
      "fn": "SimpleElection.createElection",
      "jump": "i",
      "offset": [
        950,
        1014
      ],
      "op": "JUMP",
      "path": "0"
    },
    "668": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "669": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "671": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "673": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "674": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "DUP2",
      "path": "0"
    },
    "675": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "676": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "678": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "679": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "DUP4",
      "path": "0"
    },
    "680": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "681": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "683": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "DUP1",
      "path": "0"
    },
    "684": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "DUP5",
      "path": "0"
    },
    "685": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "686": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "687": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "688": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "689": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "690": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "DUP3",
      "path": "0"
    },
    "691": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "692": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "693": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "694": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "DUP1",
      "path": "0"
    },
    "695": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "696": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "698": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "699": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "700": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "ADD",
      "path": "0"
    },
    "701": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "702": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "DUP3",
      "path": "0"
    },
    "703": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "JUMP",
      "path": "0"
    },
    "704": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "705": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "707": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "DUP1",
      "path": "0"
    },
    "708": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "709": {
      "op": "SWAP3"
    },
    "710": {
      "op": "DUP4"
    },
    "711": {
      "op": "MSTORE"
    },
    "712": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "714": {
      "op": "DUP4"
    },
    "715": {
      "op": "ADD"
    },
    "716": {
      "op": "SWAP2"
    },
    "717": {
      "op": "SWAP1"
    },
    "718": {
      "op": "SWAP2"
    },
    "719": {
      "op": "MSTORE"
    },
    "720": {
      "op": "ADD"
    },
    "721": {
      "offset": [
        950,
        1014
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14C"
    },
    "724": {
      "op": "JUMP"
    },
    "725": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8343,
        8536
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "726": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8343,
        8536
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x199"
    },
    "729": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8343,
        8536
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E3"
    },
    "732": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8343,
        8536
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "733": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8343,
        8536
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "735": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8343,
        8536
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x144E"
    },
    "738": {
      "fn": "SimpleElection.candidateExists",
      "jump": "i",
      "offset": [
        8343,
        8536
      ],
      "op": "JUMP",
      "path": "0"
    },
    "739": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8343,
        8536
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "740": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8504
      ],
      "op": "PUSH4",
      "path": "0",
      "statement": 3,
      "value": "0xFFFFFFFF"
    },
    "745": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8504
      ],
      "op": "DUP3",
      "path": "0"
    },
    "746": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8504
      ],
      "op": "AND",
      "path": "0"
    },
    "747": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8453,
        8457
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "749": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8504
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "750": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8504
      ],
      "op": "DUP2",
      "path": "0"
    },
    "751": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8504
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "752": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "754": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8504
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "756": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8504
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "757": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8504
      ],
      "op": "DUP2",
      "path": "0"
    },
    "758": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8504
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "759": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8504
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "761": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8504
      ],
      "op": "DUP1",
      "path": "0"
    },
    "762": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8504
      ],
      "op": "DUP4",
      "path": "0"
    },
    "763": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8504
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "764": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8518
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "766": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8518
      ],
      "op": "DUP6",
      "path": "0"
    },
    "767": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8518
      ],
      "op": "AND",
      "path": "0"
    },
    "768": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8518
      ],
      "op": "DUP5",
      "path": "0"
    },
    "769": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8518
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "770": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8518
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "771": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8518
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "772": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8518
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "773": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8518
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "774": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8518
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "775": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8523
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "776": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8528
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "777": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8528
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "778": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8343,
        8536
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "779": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8343,
        8536
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "780": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8343,
        8536
      ],
      "op": "POP",
      "path": "0"
    },
    "781": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8343,
        8536
      ],
      "op": "POP",
      "path": "0"
    },
    "782": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8343,
        8536
      ],
      "op": "JUMP",
      "path": "0"
    },
    "783": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        7901,
        8070
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "784": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        7901,
        8070
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x199"
    },
    "787": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        7901,
        8070
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31D"
    },
    "790": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        7901,
        8070
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "791": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        7901,
        8070
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "793": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        7901,
        8070
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x121E"
    },
    "796": {
      "fn": "SimpleElection.voterHasVoted",
      "jump": "i",
      "offset": [
        7901,
        8070
      ],
      "op": "JUMP",
      "path": "0"
    },
    "797": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        7901,
        8070
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "798": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8050
      ],
      "op": "PUSH4",
      "path": "0",
      "statement": 4,
      "value": "0xFFFFFFFF"
    },
    "803": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8050
      ],
      "op": "DUP3",
      "path": "0"
    },
    "804": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8050
      ],
      "op": "AND",
      "path": "0"
    },
    "805": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8004,
        8008
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "807": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8050
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "808": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8050
      ],
      "op": "DUP2",
      "path": "0"
    },
    "809": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8050
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "810": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8037
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "812": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8050
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "814": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8050
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "815": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8050
      ],
      "op": "DUP2",
      "path": "0"
    },
    "816": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8050
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "817": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8050
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "819": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8050
      ],
      "op": "DUP1",
      "path": "0"
    },
    "820": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8050
      ],
      "op": "DUP4",
      "path": "0"
    },
    "821": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8050
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "826": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "828": {
      "op": "SHL"
    },
    "829": {
      "op": "SUB"
    },
    "830": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8057
      ],
      "op": "DUP6",
      "path": "0"
    },
    "831": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8057
      ],
      "op": "AND",
      "path": "0"
    },
    "832": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8057
      ],
      "op": "DUP5",
      "path": "0"
    },
    "833": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8057
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "834": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8057
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "835": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8057
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "836": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8057
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "837": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8057
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "838": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8057
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "839": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8063
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "841": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8063
      ],
      "op": "ADD",
      "path": "0"
    },
    "842": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8063
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "843": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8063
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "845": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8063
      ],
      "op": "AND",
      "path": "0"
    },
    "846": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        7901,
        8070
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "847": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        7901,
        8070
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "848": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        7901,
        8070
      ],
      "op": "POP",
      "path": "0"
    },
    "849": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        7901,
        8070
      ],
      "op": "POP",
      "path": "0"
    },
    "850": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        7901,
        8070
      ],
      "op": "JUMP",
      "path": "0"
    },
    "851": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7146,
        7414
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "852": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7146,
        7414
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x199"
    },
    "855": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7146,
        7414
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x361"
    },
    "858": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7146,
        7414
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "859": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7146,
        7414
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "861": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7146,
        7414
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1159"
    },
    "864": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "jump": "i",
      "offset": [
        7146,
        7414
      ],
      "op": "JUMP",
      "path": "0"
    },
    "865": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7146,
        7414
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "866": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7146,
        7414
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC09"
    },
    "869": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "jump": "i",
      "offset": [
        7146,
        7414
      ],
      "op": "JUMP",
      "path": "0"
    },
    "870": {
      "offset": [
        1241,
        1299
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "871": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x39B"
    },
    "874": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x374"
    },
    "877": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "878": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "880": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x121E"
    },
    "883": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "jump": "i",
      "offset": [
        1241,
        1299
      ],
      "op": "JUMP",
      "path": "0"
    },
    "884": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "885": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "887": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "889": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "890": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "DUP2",
      "path": "0"
    },
    "891": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "892": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "894": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "895": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "DUP4",
      "path": "0"
    },
    "896": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "897": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "899": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "DUP1",
      "path": "0"
    },
    "900": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "DUP5",
      "path": "0"
    },
    "901": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "902": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "903": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "904": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "905": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "906": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "DUP3",
      "path": "0"
    },
    "907": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "908": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "909": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "910": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "DUP1",
      "path": "0"
    },
    "911": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "912": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "914": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "915": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "916": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "ADD",
      "path": "0"
    },
    "917": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "918": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "920": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "AND",
      "path": "0"
    },
    "921": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "DUP3",
      "path": "0"
    },
    "922": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "JUMP",
      "path": "0"
    },
    "923": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "924": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "926": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "DUP1",
      "path": "0"
    },
    "927": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "928": {
      "op": "SWAP3"
    },
    "929": {
      "op": "DUP4"
    },
    "930": {
      "op": "MSTORE"
    },
    "931": {
      "op": "SWAP1"
    },
    "932": {
      "op": "ISZERO"
    },
    "933": {
      "op": "ISZERO"
    },
    "934": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "936": {
      "op": "DUP4"
    },
    "937": {
      "op": "ADD"
    },
    "938": {
      "op": "MSTORE"
    },
    "939": {
      "op": "ADD"
    },
    "940": {
      "offset": [
        1241,
        1299
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14C"
    },
    "943": {
      "op": "JUMP"
    },
    "944": {
      "fn": "SimpleElection.register",
      "offset": [
        6962,
        7140
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "945": {
      "fn": "SimpleElection.register",
      "offset": [
        7025,
        7059
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 5,
      "value": "0x3B9"
    },
    "948": {
      "fn": "SimpleElection.register",
      "offset": [
        7047,
        7058
      ],
      "op": "DUP2",
      "path": "0"
    },
    "949": {
      "fn": "SimpleElection.register",
      "offset": [
        7025,
        7046
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC09"
    },
    "952": {
      "fn": "SimpleElection.register",
      "jump": "i",
      "offset": [
        7025,
        7059
      ],
      "op": "JUMP",
      "path": "0"
    },
    "953": {
      "branch": 43,
      "fn": "SimpleElection.register",
      "offset": [
        7025,
        7059
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "954": {
      "fn": "SimpleElection.register",
      "offset": [
        7017,
        7085
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x402"
    },
    "957": {
      "branch": 43,
      "fn": "SimpleElection.register",
      "offset": [
        7017,
        7085
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "958": {
      "fn": "SimpleElection.register",
      "offset": [
        7017,
        7085
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "960": {
      "fn": "SimpleElection.register",
      "offset": [
        7017,
        7085
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "961": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "965": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "967": {
      "op": "SHL"
    },
    "968": {
      "fn": "SimpleElection.register",
      "offset": [
        7017,
        7085
      ],
      "op": "DUP2",
      "path": "0"
    },
    "969": {
      "fn": "SimpleElection.register",
      "offset": [
        7017,
        7085
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "970": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "972": {
      "fn": "SimpleElection.register",
      "offset": [
        7017,
        7085
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "974": {
      "fn": "SimpleElection.register",
      "offset": [
        7017,
        7085
      ],
      "op": "DUP3",
      "path": "0"
    },
    "975": {
      "fn": "SimpleElection.register",
      "offset": [
        7017,
        7085
      ],
      "op": "ADD",
      "path": "0"
    },
    "976": {
      "op": "MSTORE"
    },
    "977": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "979": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "981": {
      "op": "DUP3"
    },
    "982": {
      "op": "ADD"
    },
    "983": {
      "op": "MSTORE"
    },
    "984": {
      "op": "PUSH21",
      "value": "0x2932B3B4B9BA3930BA34B7B7103737BA1037B832B7"
    },
    "1006": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "1008": {
      "op": "SHL"
    },
    "1009": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1011": {
      "op": "DUP3"
    },
    "1012": {
      "op": "ADD"
    },
    "1013": {
      "op": "MSTORE"
    },
    "1014": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1016": {
      "op": "ADD"
    },
    "1017": {
      "fn": "SimpleElection.register",
      "offset": [
        7017,
        7085
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1018": {
      "fn": "SimpleElection.register",
      "offset": [
        7017,
        7085
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1020": {
      "fn": "SimpleElection.register",
      "offset": [
        7017,
        7085
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1021": {
      "fn": "SimpleElection.register",
      "offset": [
        7017,
        7085
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1022": {
      "fn": "SimpleElection.register",
      "offset": [
        7017,
        7085
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1023": {
      "fn": "SimpleElection.register",
      "offset": [
        7017,
        7085
      ],
      "op": "SUB",
      "path": "0"
    },
    "1024": {
      "fn": "SimpleElection.register",
      "offset": [
        7017,
        7085
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1025": {
      "fn": "SimpleElection.register",
      "offset": [
        7017,
        7085
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "1026": {
      "fn": "SimpleElection.register",
      "offset": [
        7017,
        7085
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1027": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6912,
        6931
      ],
      "op": "PUSH4",
      "path": "0",
      "statement": 6,
      "value": "0xFFFFFFFF"
    },
    "1032": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6912,
        6931
      ],
      "op": "AND",
      "path": "0"
    },
    "1033": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6912,
        6931
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1035": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6912,
        6931
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1036": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6912,
        6931
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1037": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6912,
        6931
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1038": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6912,
        6918
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "1040": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6912,
        6931
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1042": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6912,
        6931
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1043": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6912,
        6931
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1044": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6912,
        6931
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1045": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6912,
        6931
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1047": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6912,
        6931
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1048": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6912,
        6931
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1049": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6912,
        6931
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1050": {
      "fn": "SimpleElection.register",
      "offset": [
        7122,
        7132
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 7
    },
    "1051": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6912,
        6938
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1052": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6912,
        6938
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1053": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6912,
        6938
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1054": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6912,
        6938
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1055": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6912,
        6938
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1056": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6912,
        6938
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1057": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6912,
        6938
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1058": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6948,
        6949
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1060": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6912,
        6949
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1061": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6912,
        6949
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1062": {
      "fn": "SimpleElection.register",
      "jump": "o",
      "offset": [
        6962,
        7140
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1063": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6291,
        6799
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1064": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8322
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1069": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8322
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1070": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8322
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1071": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8322
      ],
      "op": "AND",
      "path": "0"
    },
    "1072": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8277,
        8281
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1074": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8322
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1075": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8322
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1076": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8322
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1077": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8309
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1079": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8322
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1081": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8322
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1082": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8322
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1083": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8322
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1084": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8322
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1086": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8322
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1087": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8322
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1088": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8322
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1089": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8325
      ],
      "op": "ADD",
      "path": "0"
    },
    "1090": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8325
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1091": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6390,
        6406
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1093": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6390,
        6406
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1094": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8325
      ],
      "op": "AND",
      "path": "0"
    },
    "1095": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6422,
        6488
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 8,
      "value": "0x492"
    },
    "1098": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6422,
        6488
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1099": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6422,
        6488
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1101": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6422,
        6488
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1102": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1106": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1108": {
      "op": "SHL"
    },
    "1109": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6422,
        6488
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1110": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6422,
        6488
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1111": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1113": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6422,
        6488
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1115": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6422,
        6488
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1116": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6422,
        6488
      ],
      "op": "ADD",
      "path": "0"
    },
    "1117": {
      "op": "MSTORE"
    },
    "1118": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "1120": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1122": {
      "op": "DUP3"
    },
    "1123": {
      "op": "ADD"
    },
    "1124": {
      "op": "MSTORE"
    },
    "1125": {
      "op": "PUSH32",
      "value": "0x54686520656C656374696F6E20646F65736E2774206578697374000000000000"
    },
    "1158": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1160": {
      "op": "DUP3"
    },
    "1161": {
      "op": "ADD"
    },
    "1162": {
      "op": "MSTORE"
    },
    "1163": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1165": {
      "op": "ADD"
    },
    "1166": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6422,
        6488
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F9"
    },
    "1169": {
      "op": "JUMP"
    },
    "1170": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6422,
        6488
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1171": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6551,
        6578
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1176": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6551,
        6578
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1177": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6551,
        6578
      ],
      "op": "AND",
      "path": "0"
    },
    "1178": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6498,
        6521
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1180": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6551,
        6578
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1181": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6551,
        6578
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1182": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6551,
        6578
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1183": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6551,
        6565
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1185": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6551,
        6578
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1187": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6551,
        6578
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1188": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6551,
        6578
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1190": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6551,
        6578
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1191": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6551,
        6578
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1192": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6551,
        6585
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1193": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6524,
        6595
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1202": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6524,
        6595
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1203": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6524,
        6595
      ],
      "op": "GT",
      "path": "0"
    },
    "1204": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6524,
        6595
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1205": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6524,
        6595
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4C0"
    },
    "1208": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6524,
        6595
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1209": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6524,
        6595
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4C0"
    },
    "1212": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6524,
        6595
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1261"
    },
    "1215": {
      "fn": "SimpleElection.getCandidatesForElection",
      "jump": "i",
      "offset": [
        6524,
        6595
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1216": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6524,
        6595
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1217": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6524,
        6595
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1219": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6524,
        6595
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1220": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6524,
        6595
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1221": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6524,
        6595
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1222": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6524,
        6595
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1223": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6524,
        6595
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1224": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6524,
        6595
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1225": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6524,
        6595
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1227": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6524,
        6595
      ],
      "op": "MUL",
      "path": "0"
    },
    "1228": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6524,
        6595
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1230": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6524,
        6595
      ],
      "op": "ADD",
      "path": "0"
    },
    "1231": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6524,
        6595
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1232": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6524,
        6595
      ],
      "op": "ADD",
      "path": "0"
    },
    "1233": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6524,
        6595
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1235": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6524,
        6595
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1236": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6524,
        6595
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1237": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6524,
        6595
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1238": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6524,
        6595
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4E9"
    },
    "1241": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6524,
        6595
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1242": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6524,
        6595
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1243": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6524,
        6595
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1245": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6524,
        6595
      ],
      "op": "ADD",
      "path": "0"
    },
    "1246": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6524,
        6595
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1248": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6524,
        6595
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1249": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6524,
        6595
      ],
      "op": "MUL",
      "path": "0"
    },
    "1250": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6524,
        6595
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1251": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6524,
        6595
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1252": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6524,
        6595
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1253": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6524,
        6595
      ],
      "op": "CALLDATACOPY",
      "path": "0"
    },
    "1254": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6524,
        6595
      ],
      "op": "ADD",
      "path": "0"
    },
    "1255": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6524,
        6595
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1256": {
      "op": "POP"
    },
    "1257": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6524,
        6595
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1258": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6524,
        6595
      ],
      "op": "POP",
      "path": "0"
    },
    "1259": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6498,
        6595
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1260": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6498,
        6595
      ],
      "op": "POP",
      "path": "0"
    },
    "1261": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6610,
        6617
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1263": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6605,
        6769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1264": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6627,
        6654
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1269": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6627,
        6654
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1270": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6627,
        6654
      ],
      "op": "AND",
      "path": "0"
    },
    "1271": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6627,
        6654
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1273": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6627,
        6654
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1274": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6627,
        6654
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1275": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6627,
        6654
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1276": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6627,
        6641
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1278": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6627,
        6654
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1280": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6627,
        6654
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1281": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6627,
        6654
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1283": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6627,
        6654
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1284": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6627,
        6654
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1285": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6627,
        6661
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1286": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6623,
        6661
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1288": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6623,
        6661
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1289": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6623,
        6661
      ],
      "op": "AND",
      "path": "0"
    },
    "1290": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6623,
        6661
      ],
      "op": "LT",
      "path": "0"
    },
    "1291": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6605,
        6769
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1292": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6605,
        6769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B0"
    },
    "1295": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6605,
        6769
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1296": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6692,
        6715
      ],
      "op": "PUSH4",
      "path": "0",
      "statement": 9,
      "value": "0xFFFFFFFF"
    },
    "1301": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6692,
        6715
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1302": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6692,
        6715
      ],
      "op": "AND",
      "path": "0"
    },
    "1303": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6692,
        6715
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1305": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6692,
        6715
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1306": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6692,
        6715
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1307": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6692,
        6715
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1308": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6692,
        6702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1310": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6692,
        6715
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1312": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6692,
        6715
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1313": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6692,
        6715
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1314": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6692,
        6715
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1315": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6692,
        6715
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1317": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6692,
        6715
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1318": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6692,
        6715
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1319": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6692,
        6715
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1320": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6716,
        6730
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1322": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6716,
        6743
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1323": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6716,
        6743
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1324": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6716,
        6743
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1325": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6716,
        6743
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1326": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6716,
        6743
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1327": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6716,
        6746
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1328": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6716,
        6746
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1329": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6692,
        6715
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1330": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6692,
        6715
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1331": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6692,
        6715
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1332": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6716,
        6746
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1334": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6716,
        6746
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1335": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6716,
        6746
      ],
      "op": "AND",
      "path": "0"
    },
    "1336": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6716,
        6746
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1337": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6716,
        6746
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1338": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6716,
        6746
      ],
      "op": "LT",
      "path": "0"
    },
    "1339": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6716,
        6746
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x546"
    },
    "1342": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6716,
        6746
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1343": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6716,
        6746
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x546"
    },
    "1346": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6716,
        6746
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1481"
    },
    "1349": {
      "fn": "SimpleElection.getCandidatesForElection",
      "jump": "i",
      "offset": [
        6716,
        6746
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1350": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6716,
        6746
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1351": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6716,
        6746
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1352": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6716,
        6746
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1354": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6716,
        6746
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1355": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6716,
        6746
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1357": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6716,
        6746
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1359": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6716,
        6746
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1360": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6716,
        6746
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1361": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6716,
        6746
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1363": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6716,
        6746
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1364": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6716,
        6746
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1365": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6716,
        6746
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1366": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6716,
        6746
      ],
      "op": "DIV",
      "path": "0"
    },
    "1367": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6716,
        6746
      ],
      "op": "ADD",
      "path": "0"
    },
    "1368": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6716,
        6746
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1369": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6716,
        6746
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1370": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6716,
        6746
      ],
      "op": "MOD",
      "path": "0"
    },
    "1371": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6716,
        6746
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1372": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6716,
        6746
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1373": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6716,
        6746
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1374": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6716,
        6746
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1377": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6716,
        6746
      ],
      "op": "EXP",
      "path": "0"
    },
    "1378": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6716,
        6746
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1379": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6716,
        6746
      ],
      "op": "DIV",
      "path": "0"
    },
    "1380": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6716,
        6746
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1382": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6716,
        6746
      ],
      "op": "AND",
      "path": "0"
    },
    "1383": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6692,
        6747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1385": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6692,
        6747
      ],
      "op": "AND",
      "path": "0"
    },
    "1386": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6692,
        6747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1388": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6692,
        6747
      ],
      "op": "AND",
      "path": "0"
    },
    "1389": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6692,
        6747
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1390": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6692,
        6747
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1391": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6692,
        6747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1393": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6692,
        6747
      ],
      "op": "ADD",
      "path": "0"
    },
    "1394": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6692,
        6747
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1395": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6692,
        6747
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1396": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6692,
        6747
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1397": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6692,
        6747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1399": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6692,
        6747
      ],
      "op": "ADD",
      "path": "0"
    },
    "1400": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6692,
        6747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1402": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6692,
        6747
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1403": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6692,
        6769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1405": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6692,
        6769
      ],
      "op": "ADD",
      "path": "0"
    },
    "1406": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6692,
        6769
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1407": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6680,
        6686
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1408": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6687,
        6688
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1409": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6680,
        6689
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1411": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6680,
        6689
      ],
      "op": "AND",
      "path": "0"
    },
    "1412": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6680,
        6689
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1413": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6680,
        6689
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1414": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6680,
        6689
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1415": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6680,
        6689
      ],
      "op": "LT",
      "path": "0"
    },
    "1416": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6680,
        6689
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x593"
    },
    "1419": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6680,
        6689
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1420": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6680,
        6689
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x593"
    },
    "1423": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6680,
        6689
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1481"
    },
    "1426": {
      "fn": "SimpleElection.getCandidatesForElection",
      "jump": "i",
      "offset": [
        6680,
        6689
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1427": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6680,
        6689
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1428": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6680,
        6689
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1430": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6680,
        6689
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1431": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6680,
        6689
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1432": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6680,
        6689
      ],
      "op": "MUL",
      "path": "0"
    },
    "1433": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6680,
        6689
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1434": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6680,
        6689
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1435": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6680,
        6689
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1436": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6680,
        6689
      ],
      "op": "ADD",
      "path": "0"
    },
    "1437": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6680,
        6689
      ],
      "op": "ADD",
      "path": "0"
    },
    "1438": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6680,
        6769
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1439": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6663,
        6666
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 10
    },
    "1440": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6663,
        6666
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5A8"
    },
    "1443": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6663,
        6666
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1444": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6663,
        6666
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AD"
    },
    "1447": {
      "fn": "SimpleElection.getCandidatesForElection",
      "jump": "i",
      "offset": [
        6663,
        6666
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1448": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6663,
        6666
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1449": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6663,
        6666
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1450": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6663,
        6666
      ],
      "op": "POP",
      "path": "0"
    },
    "1451": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6663,
        6666
      ],
      "op": "POP",
      "path": "0"
    },
    "1452": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6605,
        6769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4EF"
    },
    "1455": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6605,
        6769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1456": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6605,
        6769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1457": {
      "op": "POP"
    },
    "1458": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6786,
        6792
      ],
      "op": "SWAP3",
      "path": "0",
      "statement": 11
    },
    "1459": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6291,
        6799
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1460": {
      "op": "POP"
    },
    "1461": {
      "op": "POP"
    },
    "1462": {
      "fn": "SimpleElection.getCandidatesForElection",
      "jump": "o",
      "offset": [
        6291,
        6799
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1463": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7420,
        7648
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1464": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7513,
        7535
      ],
      "op": "PUSH4",
      "path": "0",
      "statement": 12,
      "value": "0xFFFFFFFF"
    },
    "1469": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7513,
        7535
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1470": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7513,
        7535
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1471": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7513,
        7535
      ],
      "op": "AND",
      "path": "0"
    },
    "1472": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7488,
        7492
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1474": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7513,
        7535
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1475": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7513,
        7535
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1476": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7513,
        7535
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1477": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7513,
        7522
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1479": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7513,
        7535
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1481": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7513,
        7535
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1482": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7513,
        7535
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1483": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7513,
        7535
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1484": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7513,
        7535
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1486": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7513,
        7535
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1487": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7513,
        7535
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1488": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7513,
        7549
      ],
      "op": "ADD",
      "path": "0"
    },
    "1489": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7513,
        7549
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1490": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7488,
        7492
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1491": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7488,
        7492
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1492": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7553,
        7568
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "1493": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7513,
        7549
      ],
      "op": "PUSH6",
      "path": "0",
      "value": "0x10000000000"
    },
    "1500": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7513,
        7549
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1501": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7513,
        7549
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1502": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7513,
        7549
      ],
      "op": "DIV",
      "path": "0"
    },
    "1503": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7513,
        7549
      ],
      "op": "AND",
      "path": "0"
    },
    "1504": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7513,
        7568
      ],
      "op": "GT",
      "path": "0"
    },
    "1505": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7513,
        7568
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1506": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7513,
        7568
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1507": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7513,
        7568
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1508": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7512,
        7640
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x612"
    },
    "1511": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7512,
        7640
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1512": {
      "op": "POP"
    },
    "1513": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7586,
        7608
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1518": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7586,
        7608
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1519": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7586,
        7608
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1520": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7586,
        7608
      ],
      "op": "AND",
      "path": "0"
    },
    "1521": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7586,
        7608
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1523": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7586,
        7608
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1524": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7586,
        7608
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1525": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7586,
        7608
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1526": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7586,
        7595
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1528": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7586,
        7608
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1530": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7586,
        7608
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1531": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7586,
        7608
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1532": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7586,
        7608
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1533": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7586,
        7608
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1535": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7586,
        7608
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1536": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7586,
        7608
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1537": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7586,
        7608
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1538": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7586,
        7620
      ],
      "op": "ADD",
      "path": "0"
    },
    "1539": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7586,
        7620
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1540": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7624,
        7639
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "1541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1543": {
      "op": "PUSH1",
      "value": "0x48"
    },
    "1545": {
      "op": "SHL"
    },
    "1546": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7586,
        7620
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1547": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7586,
        7620
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1548": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7586,
        7620
      ],
      "op": "DIV",
      "path": "0"
    },
    "1549": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7586,
        7620
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1550": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7586,
        7620
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1551": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7586,
        7620
      ],
      "op": "AND",
      "path": "0"
    },
    "1552": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7586,
        7639
      ],
      "op": "LT",
      "path": "0"
    },
    "1553": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7586,
        7639
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1554": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7512,
        7640
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1555": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7504,
        7641
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1556": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7420,
        7648
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1557": {
      "op": "POP"
    },
    "1558": {
      "op": "POP"
    },
    "1559": {
      "fn": "SimpleElection.checkElectionOpen",
      "jump": "o",
      "offset": [
        7420,
        7648
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1560": {
      "fn": "SimpleElection.vote",
      "offset": [
        5643,
        5901
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1561": {
      "fn": "SimpleElection.vote",
      "offset": [
        5837,
        5894
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 13,
      "value": "0x624"
    },
    "1564": {
      "fn": "SimpleElection.vote",
      "offset": [
        5847,
        5858
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1565": {
      "fn": "SimpleElection.vote",
      "offset": [
        5860,
        5870
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1566": {
      "fn": "SimpleElection.vote",
      "offset": [
        5872,
        5884
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1567": {
      "fn": "SimpleElection.vote",
      "offset": [
        5886,
        5893
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1568": {
      "fn": "SimpleElection.vote",
      "offset": [
        5837,
        5846
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC65"
    },
    "1571": {
      "fn": "SimpleElection.vote",
      "jump": "i",
      "offset": [
        5837,
        5894
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1572": {
      "fn": "SimpleElection.vote",
      "offset": [
        5837,
        5894
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1573": {
      "fn": "SimpleElection.vote",
      "offset": [
        5643,
        5901
      ],
      "op": "POP",
      "path": "0"
    },
    "1574": {
      "fn": "SimpleElection.vote",
      "offset": [
        5643,
        5901
      ],
      "op": "POP",
      "path": "0"
    },
    "1575": {
      "fn": "SimpleElection.vote",
      "offset": [
        5643,
        5901
      ],
      "op": "POP",
      "path": "0"
    },
    "1576": {
      "fn": "SimpleElection.vote",
      "jump": "o",
      "offset": [
        5643,
        5901
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1577": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        5935,
        6243
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1578": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6055,
        6071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1580": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6055,
        6078
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1581": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        5987,
        6003
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1583": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        5987,
        6003
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1584": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6015,
        6038
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1586": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6015,
        6038
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1587": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6041,
        6079
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1596": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6041,
        6079
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1597": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6041,
        6079
      ],
      "op": "GT",
      "path": "0"
    },
    "1598": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6041,
        6079
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1599": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6041,
        6079
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x64A"
    },
    "1602": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6041,
        6079
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1603": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6041,
        6079
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x64A"
    },
    "1606": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6041,
        6079
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1261"
    },
    "1609": {
      "fn": "SimpleElection.getCurrentElections",
      "jump": "i",
      "offset": [
        6041,
        6079
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1610": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6041,
        6079
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1611": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6041,
        6079
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1613": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6041,
        6079
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1614": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6041,
        6079
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1615": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6041,
        6079
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1616": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6041,
        6079
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1617": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6041,
        6079
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1618": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6041,
        6079
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1619": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6041,
        6079
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1621": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6041,
        6079
      ],
      "op": "MUL",
      "path": "0"
    },
    "1622": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6041,
        6079
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1624": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6041,
        6079
      ],
      "op": "ADD",
      "path": "0"
    },
    "1625": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6041,
        6079
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1626": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6041,
        6079
      ],
      "op": "ADD",
      "path": "0"
    },
    "1627": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6041,
        6079
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1629": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6041,
        6079
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1630": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6041,
        6079
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1631": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6041,
        6079
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1632": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6041,
        6079
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x673"
    },
    "1635": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6041,
        6079
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1636": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6041,
        6079
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1637": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6041,
        6079
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1639": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6041,
        6079
      ],
      "op": "ADD",
      "path": "0"
    },
    "1640": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6041,
        6079
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1642": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6041,
        6079
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1643": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6041,
        6079
      ],
      "op": "MUL",
      "path": "0"
    },
    "1644": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6041,
        6079
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1645": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6041,
        6079
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1646": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6041,
        6079
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1647": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6041,
        6079
      ],
      "op": "CALLDATACOPY",
      "path": "0"
    },
    "1648": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6041,
        6079
      ],
      "op": "ADD",
      "path": "0"
    },
    "1649": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6041,
        6079
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1650": {
      "op": "POP"
    },
    "1651": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6041,
        6079
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1652": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6041,
        6079
      ],
      "op": "POP",
      "path": "0"
    },
    "1653": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6015,
        6079
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1654": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6015,
        6079
      ],
      "op": "POP",
      "path": "0"
    },
    "1655": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6094,
        6102
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1657": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6089,
        6214
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1658": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6112,
        6128
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1660": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6112,
        6135
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1661": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6108,
        6135
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1666": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6108,
        6135
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1667": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6108,
        6135
      ],
      "op": "AND",
      "path": "0"
    },
    "1668": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6108,
        6135
      ],
      "op": "LT",
      "path": "0"
    },
    "1669": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6089,
        6214
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1670": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6089,
        6214
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x71F"
    },
    "1673": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6089,
        6214
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1674": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6168,
        6177
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 14,
      "value": "0x2"
    },
    "1676": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6168,
        6198
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1678": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6178,
        6194
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1680": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6195,
        6196
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1681": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6178,
        6197
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1686": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6178,
        6197
      ],
      "op": "AND",
      "path": "0"
    },
    "1687": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6178,
        6197
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1688": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6178,
        6197
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1689": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6178,
        6197
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1690": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6178,
        6197
      ],
      "op": "LT",
      "path": "0"
    },
    "1691": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6178,
        6197
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A6"
    },
    "1694": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6178,
        6197
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1695": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6178,
        6197
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A6"
    },
    "1698": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6178,
        6197
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1481"
    },
    "1701": {
      "fn": "SimpleElection.getCurrentElections",
      "jump": "i",
      "offset": [
        6178,
        6197
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1702": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6178,
        6197
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1703": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6178,
        6197
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1704": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6178,
        6197
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1706": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6178,
        6197
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1707": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6178,
        6197
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1709": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6178,
        6197
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1711": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6178,
        6197
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1712": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6178,
        6197
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1713": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6178,
        6197
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "1715": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6178,
        6197
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1716": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6178,
        6197
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1717": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6178,
        6197
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1718": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6178,
        6197
      ],
      "op": "DIV",
      "path": "0"
    },
    "1719": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6178,
        6197
      ],
      "op": "ADD",
      "path": "0"
    },
    "1720": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6178,
        6197
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1721": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6178,
        6197
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1722": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6178,
        6197
      ],
      "op": "MOD",
      "path": "0"
    },
    "1723": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6178,
        6197
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1725": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6178,
        6197
      ],
      "op": "MUL",
      "path": "0"
    },
    "1726": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6178,
        6197
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1727": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6178,
        6197
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1728": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6178,
        6197
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1729": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6178,
        6197
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1732": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6178,
        6197
      ],
      "op": "EXP",
      "path": "0"
    },
    "1733": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6178,
        6197
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1734": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6178,
        6197
      ],
      "op": "DIV",
      "path": "0"
    },
    "1735": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6178,
        6197
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1740": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6178,
        6197
      ],
      "op": "AND",
      "path": "0"
    },
    "1741": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6168,
        6198
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1746": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6168,
        6198
      ],
      "op": "AND",
      "path": "0"
    },
    "1747": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6168,
        6198
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1752": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6168,
        6198
      ],
      "op": "AND",
      "path": "0"
    },
    "1753": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6168,
        6198
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1754": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6168,
        6198
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1755": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6168,
        6198
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1757": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6168,
        6198
      ],
      "op": "ADD",
      "path": "0"
    },
    "1758": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6168,
        6198
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1759": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6168,
        6198
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1760": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6168,
        6198
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1761": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6168,
        6198
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1763": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6168,
        6198
      ],
      "op": "ADD",
      "path": "0"
    },
    "1764": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6168,
        6198
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1766": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6168,
        6198
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1767": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6168,
        6203
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1769": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6168,
        6203
      ],
      "op": "ADD",
      "path": "0"
    },
    "1770": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6168,
        6203
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1771": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6156,
        6162
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1772": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6163,
        6164
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1773": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6156,
        6165
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1778": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6156,
        6165
      ],
      "op": "AND",
      "path": "0"
    },
    "1779": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6156,
        6165
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1780": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6156,
        6165
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1781": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6156,
        6165
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1782": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6156,
        6165
      ],
      "op": "LT",
      "path": "0"
    },
    "1783": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6156,
        6165
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x702"
    },
    "1786": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6156,
        6165
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1787": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6156,
        6165
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x702"
    },
    "1790": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6156,
        6165
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1481"
    },
    "1793": {
      "fn": "SimpleElection.getCurrentElections",
      "jump": "i",
      "offset": [
        6156,
        6165
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1794": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6156,
        6165
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1795": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6156,
        6165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1797": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6156,
        6165
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1798": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6156,
        6165
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1799": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6156,
        6165
      ],
      "op": "MUL",
      "path": "0"
    },
    "1800": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6156,
        6165
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1801": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6156,
        6165
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1802": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6156,
        6165
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1803": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6156,
        6165
      ],
      "op": "ADD",
      "path": "0"
    },
    "1804": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6156,
        6165
      ],
      "op": "ADD",
      "path": "0"
    },
    "1805": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6156,
        6203
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1806": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6137,
        6140
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 15
    },
    "1807": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6137,
        6140
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x717"
    },
    "1810": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6137,
        6140
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1811": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6137,
        6140
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14CD"
    },
    "1814": {
      "fn": "SimpleElection.getCurrentElections",
      "jump": "i",
      "offset": [
        6137,
        6140
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1815": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6137,
        6140
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1816": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6137,
        6140
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1817": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6137,
        6140
      ],
      "op": "POP",
      "path": "0"
    },
    "1818": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6137,
        6140
      ],
      "op": "POP",
      "path": "0"
    },
    "1819": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6089,
        6214
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x679"
    },
    "1822": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6089,
        6214
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1823": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6089,
        6214
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1824": {
      "op": "POP"
    },
    "1825": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6230,
        6236
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 16
    },
    "1826": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        5935,
        6243
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1827": {
      "op": "POP"
    },
    "1828": {
      "fn": "SimpleElection.getCurrentElections",
      "jump": "o",
      "offset": [
        5935,
        6243
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1829": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7654,
        7895
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1830": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7790,
        7809
      ],
      "op": "PUSH4",
      "path": "0",
      "statement": 17,
      "value": "0xFFFFFFFF"
    },
    "1835": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7790,
        7809
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1836": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7790,
        7809
      ],
      "op": "AND",
      "path": "0"
    },
    "1837": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7761,
        7765
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1839": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7790,
        7809
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1840": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7790,
        7809
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1841": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7790,
        7809
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1842": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7790,
        7796
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "1844": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7790,
        7809
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1846": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7790,
        7809
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1847": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7790,
        7809
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1848": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7790,
        7809
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1849": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7790,
        7809
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1851": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7790,
        7809
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1852": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7790,
        7809
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1853": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7790,
        7809
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1858": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1860": {
      "op": "SHL"
    },
    "1861": {
      "op": "SUB"
    },
    "1862": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7790,
        7816
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1863": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7790,
        7816
      ],
      "op": "AND",
      "path": "0"
    },
    "1864": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7790,
        7816
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1865": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7790,
        7816
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1866": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7790,
        7816
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1867": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7790,
        7816
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1868": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7790,
        7816
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1869": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7790,
        7816
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1870": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7790,
        7816
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1871": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7790,
        7823
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1872": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7790,
        7828
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1873": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7790,
        7828
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1874": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7790,
        7828
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1875": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7789,
        7887
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x78D"
    },
    "1878": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7789,
        7887
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1879": {
      "op": "POP"
    },
    "1880": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7846,
        7865
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1885": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7846,
        7865
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1886": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7846,
        7865
      ],
      "op": "AND",
      "path": "0"
    },
    "1887": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7846,
        7865
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1889": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7846,
        7865
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1890": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7846,
        7865
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1891": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7846,
        7865
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1892": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7846,
        7852
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "1894": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7846,
        7865
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1896": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7846,
        7865
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1897": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7846,
        7865
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1898": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7846,
        7865
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1899": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7846,
        7865
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1901": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7846,
        7865
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1902": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7846,
        7865
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1903": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7846,
        7865
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1908": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1910": {
      "op": "SHL"
    },
    "1911": {
      "op": "SUB"
    },
    "1912": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7846,
        7872
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1913": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7846,
        7872
      ],
      "op": "AND",
      "path": "0"
    },
    "1914": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7846,
        7872
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1915": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7846,
        7872
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1916": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7846,
        7872
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1917": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7846,
        7872
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1918": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7846,
        7872
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1919": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7846,
        7872
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1920": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7846,
        7872
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1921": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7846,
        7878
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1923": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7846,
        7878
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1924": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7846,
        7878
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1925": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7846,
        7878
      ],
      "op": "ADD",
      "path": "0"
    },
    "1926": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7846,
        7878
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1927": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7846,
        7878
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1929": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7846,
        7878
      ],
      "op": "AND",
      "path": "0"
    },
    "1930": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7846,
        7886
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1931": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7846,
        7886
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1932": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7846,
        7886
      ],
      "op": "EQ",
      "path": "0"
    },
    "1933": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7789,
        7887
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1934": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7781,
        7888
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1935": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7654,
        7895
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1936": {
      "op": "POP"
    },
    "1937": {
      "op": "POP"
    },
    "1938": {
      "op": "POP"
    },
    "1939": {
      "fn": "SimpleElection.voterHasRegistred",
      "jump": "o",
      "offset": [
        7654,
        7895
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1940": {
      "offset": [
        1139,
        1187
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1941": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1943": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1945": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1946": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1947": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1949": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1950": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1952": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1954": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1955": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1956": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1957": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1958": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1959": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "LT",
      "path": "0"
    },
    "1960": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7B0"
    },
    "1963": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1964": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1966": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1967": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1968": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1969": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1970": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1972": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1973": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1975": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1977": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1978": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1979": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1981": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1982": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1983": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1984": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "DIV",
      "path": "0"
    },
    "1985": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "ADD",
      "path": "0"
    },
    "1986": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1987": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1988": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "MOD",
      "path": "0"
    },
    "1989": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1990": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "POP",
      "path": "0"
    },
    "1991": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1992": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "POP",
      "path": "0"
    },
    "1993": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1994": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1995": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1996": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1999": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "EXP",
      "path": "0"
    },
    "2000": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2001": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "DIV",
      "path": "0"
    },
    "2002": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2004": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "AND",
      "path": "0"
    },
    "2005": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2006": {
      "fn": "SimpleElection.voterHasRegistred",
      "jump": "o",
      "offset": [
        1139,
        1187
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2007": {
      "fn": "SimpleElection.createElection",
      "offset": [
        1888,
        3517
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2008": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2499,
        2500
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 18,
      "value": "0x0"
    },
    "2010": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2478,
        2489
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2011": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2478,
        2496
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2012": {
      "branch": 44,
      "fn": "SimpleElection.createElection",
      "offset": [
        2478,
        2500
      ],
      "op": "GT",
      "path": "0"
    },
    "2013": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2470,
        2541
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x834"
    },
    "2016": {
      "branch": 44,
      "fn": "SimpleElection.createElection",
      "offset": [
        2470,
        2541
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2017": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2470,
        2541
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2019": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2470,
        2541
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2020": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2024": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2026": {
      "op": "SHL"
    },
    "2027": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2470,
        2541
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2028": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2470,
        2541
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2029": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2031": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2470,
        2541
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2033": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2470,
        2541
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2034": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2470,
        2541
      ],
      "op": "ADD",
      "path": "0"
    },
    "2035": {
      "op": "MSTORE"
    },
    "2036": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2038": {
      "op": "DUP1"
    },
    "2039": {
      "op": "DUP3"
    },
    "2040": {
      "op": "ADD"
    },
    "2041": {
      "op": "MSTORE"
    },
    "2042": {
      "op": "PUSH32",
      "value": "0x54686572652073686F756C642062652061746C6561737420312063616E646964"
    },
    "2075": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2077": {
      "op": "DUP3"
    },
    "2078": {
      "op": "ADD"
    },
    "2079": {
      "op": "MSTORE"
    },
    "2080": {
      "op": "PUSH4",
      "value": "0x30BA3297"
    },
    "2085": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2087": {
      "op": "SHL"
    },
    "2088": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2090": {
      "op": "DUP3"
    },
    "2091": {
      "op": "ADD"
    },
    "2092": {
      "op": "MSTORE"
    },
    "2093": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2095": {
      "op": "ADD"
    },
    "2096": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2470,
        2541
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F9"
    },
    "2099": {
      "op": "JUMP"
    },
    "2100": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2470,
        2541
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2101": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8144,
        8148
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2103": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8167,
        8194
      ],
      "op": "DUP9",
      "path": "0"
    },
    "2104": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8167,
        8194
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2105": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8167,
        8194
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2106": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8167,
        8194
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2108": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8167,
        8194
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2109": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8167,
        8194
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2110": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8167,
        8194
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2111": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8167,
        8194
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2113": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8167,
        8194
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2114": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8167,
        8194
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2115": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8167,
        8194
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2116": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8167,
        8194
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "2121": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8167,
        8194
      ],
      "op": "AND",
      "path": "0"
    },
    "2122": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8167,
        8199
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2123": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2552,
        2675
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 19,
      "value": "0x8B5"
    },
    "2126": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2552,
        2675
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2127": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2552,
        2675
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2129": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2552,
        2675
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2130": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2134": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2136": {
      "op": "SHL"
    },
    "2137": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2552,
        2675
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2138": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2552,
        2675
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2139": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2141": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2552,
        2675
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2143": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2552,
        2675
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2144": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2552,
        2675
      ],
      "op": "ADD",
      "path": "0"
    },
    "2145": {
      "op": "MSTORE"
    },
    "2146": {
      "op": "PUSH1",
      "value": "0x36"
    },
    "2148": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2150": {
      "op": "DUP3"
    },
    "2151": {
      "op": "ADD"
    },
    "2152": {
      "op": "MSTORE"
    },
    "2153": {
      "op": "PUSH32",
      "value": "0x5468697320656C656374696F6E20616C7265616479206578697374732C20706C"
    },
    "2186": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2188": {
      "op": "DUP3"
    },
    "2189": {
      "op": "ADD"
    },
    "2190": {
      "op": "MSTORE"
    },
    "2191": {
      "op": "PUSH22",
      "value": "0x656173652073656C656374206F74686572206E616D65"
    },
    "2214": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "2216": {
      "op": "SHL"
    },
    "2217": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2219": {
      "op": "DUP3"
    },
    "2220": {
      "op": "ADD"
    },
    "2221": {
      "op": "MSTORE"
    },
    "2222": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2224": {
      "op": "ADD"
    },
    "2225": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2552,
        2675
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F9"
    },
    "2228": {
      "op": "JUMP"
    },
    "2229": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2552,
        2675
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2230": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2705,
        2718
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "2232": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2705,
        2718
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2233": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 20,
      "value": "0x40"
    },
    "2235": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2236": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2237": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2705,
        2718
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2240": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2241": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "ADD",
      "path": "0"
    },
    "2242": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2243": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2244": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "DUP11",
      "path": "0"
    },
    "2245": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2246": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2247": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2249": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2250": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2251": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "ADD",
      "path": "0"
    },
    "2252": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "DUP12",
      "path": "0"
    },
    "2253": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2254": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2255": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2705,
        2718
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "2260": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2705,
        2718
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2261": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2705,
        2718
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2262": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2705,
        2718
      ],
      "op": "AND",
      "path": "0"
    },
    "2263": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2264": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2265": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "ADD",
      "path": "0"
    },
    "2266": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2267": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2268": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2269": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "DUP12",
      "path": "0"
    },
    "2270": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2271": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2272": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "2274": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2275": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "ADD",
      "path": "0"
    },
    "2276": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2277": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "DUP10",
      "path": "0"
    },
    "2278": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2279": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "AND",
      "path": "0"
    },
    "2280": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2282": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2283": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "ADD",
      "path": "0"
    },
    "2284": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2285": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "DUP9",
      "path": "0"
    },
    "2286": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2287": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "AND",
      "path": "0"
    },
    "2288": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "2290": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2291": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "ADD",
      "path": "0"
    },
    "2292": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2293": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2294": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2295": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "AND",
      "path": "0"
    },
    "2296": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "2298": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2299": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "ADD",
      "path": "0"
    },
    "2300": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2301": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2302": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2303": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "AND",
      "path": "0"
    },
    "2304": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "2306": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2307": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "ADD",
      "path": "0"
    },
    "2308": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2309": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2685,
        2702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2311": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2749
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2312": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2749
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2313": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2749
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2314": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2737
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2316": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2749
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2317": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2749
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2318": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2749
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2319": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2749
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2320": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2749
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2321": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2749
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2322": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2323": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2324": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2325": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2326": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2327": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2328": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2329": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2330": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2331": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2752,
        2988
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2332": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2749
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2333": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x92C"
    },
    "2336": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2337": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2705,
        2718
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2339": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2340": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "ADD",
      "path": "0"
    },
    "2341": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2342": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "ADD",
      "path": "0"
    },
    "2343": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2344": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x107D"
    },
    "2347": {
      "fn": "SimpleElection.createElection",
      "jump": "i",
      "offset": [
        2728,
        2988
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2348": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2349": {
      "op": "POP"
    },
    "2350": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2352": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2353": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2354": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "ADD",
      "path": "0"
    },
    "2355": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2356": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2358": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2359": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2360": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "ADD",
      "path": "0"
    },
    "2361": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2362": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2363": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "2365": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2366": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "ADD",
      "path": "0"
    },
    "2367": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2368": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2370": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2371": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "ADD",
      "path": "0"
    },
    "2372": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2373": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "2375": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2376": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "ADD",
      "path": "0"
    },
    "2377": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2378": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "2380": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "DUP9",
      "path": "0"
    },
    "2381": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "ADD",
      "path": "0"
    },
    "2382": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2383": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "2385": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2386": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "SWAP9",
      "path": "0"
    },
    "2387": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "ADD",
      "path": "0"
    },
    "2388": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2389": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "2394": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2395": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2396": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "AND",
      "path": "0"
    },
    "2397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2399": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "2401": {
      "op": "SHL"
    },
    "2402": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "MUL",
      "path": "0"
    },
    "2403": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "2408": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "2410": {
      "op": "SHL"
    },
    "2411": {
      "op": "NOT"
    },
    "2412": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "SWAP10",
      "path": "0"
    },
    "2413": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2414": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "AND",
      "path": "0"
    },
    "2415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2417": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "2419": {
      "op": "SHL"
    },
    "2420": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "MUL",
      "path": "0"
    },
    "2421": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "SWAP10",
      "path": "0"
    },
    "2422": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2423": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "SWAP10",
      "path": "0"
    },
    "2424": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "AND",
      "path": "0"
    },
    "2425": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2434": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "2436": {
      "op": "SHL"
    },
    "2437": {
      "op": "NOT"
    },
    "2438": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2439": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2440": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "AND",
      "path": "0"
    },
    "2441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2443": {
      "op": "PUSH1",
      "value": "0x48"
    },
    "2445": {
      "op": "SHL"
    },
    "2446": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "MUL",
      "path": "0"
    },
    "2447": {
      "op": "PUSH13",
      "value": "0xFFFFFFFF000000000000000000"
    },
    "2461": {
      "op": "NOT"
    },
    "2462": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2463": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2464": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "AND",
      "path": "0"
    },
    "2465": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "PUSH6",
      "path": "0",
      "value": "0x10000000000"
    },
    "2472": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "MUL",
      "path": "0"
    },
    "2473": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2474": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2475": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2476": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "AND",
      "path": "0"
    },
    "2477": {
      "op": "PUSH13",
      "value": "0xFFFFFFFFFFFFFFFF0000000000"
    },
    "2491": {
      "op": "NOT"
    },
    "2492": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "2493": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2494": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2495": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "PUSH5",
      "path": "0",
      "value": "0x100000000"
    },
    "2501": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "MUL",
      "path": "0"
    },
    "2502": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "2508": {
      "op": "NOT"
    },
    "2509": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2510": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "SWAP8",
      "path": "0"
    },
    "2511": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "AND",
      "path": "0"
    },
    "2512": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "SWAP10",
      "path": "0"
    },
    "2513": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2514": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "AND",
      "path": "0"
    },
    "2515": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "SWAP10",
      "path": "0"
    },
    "2516": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2517": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "SWAP10",
      "path": "0"
    },
    "2518": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "OR",
      "path": "0"
    },
    "2519": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "2520": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2521": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "2522": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "OR",
      "path": "0"
    },
    "2523": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2524": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2525": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2526": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "AND",
      "path": "0"
    },
    "2527": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "2528": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2529": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "2530": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "OR",
      "path": "0"
    },
    "2531": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "OR",
      "path": "0"
    },
    "2532": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2533": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2534": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2535": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "AND",
      "path": "0"
    },
    "2536": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "OR",
      "path": "0"
    },
    "2537": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2538": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2539": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2540": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "OR",
      "path": "0"
    },
    "2541": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2542": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2543": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2544": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2546": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2998,
        3017
      ],
      "op": "DUP12",
      "path": "0",
      "statement": 21
    },
    "2547": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2998,
        3017
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2548": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2998,
        3017
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2549": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2998,
        3017
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2551": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2998,
        3017
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2552": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2998,
        3017
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2553": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2998,
        3017
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2554": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2998,
        3017
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2555": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2998,
        3017
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2556": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2998,
        3017
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2557": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2998,
        3030
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2558": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2998,
        3030
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2559": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2998,
        3030
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2560": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2998,
        3030
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2561": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2998,
        3030
      ],
      "op": "AND",
      "path": "0"
    },
    "2562": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "2567": {
      "op": "NOT"
    },
    "2568": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2998,
        3030
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2569": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2998,
        3030
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2570": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2998,
        3030
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2571": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2998,
        3030
      ],
      "op": "AND",
      "path": "0"
    },
    "2572": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2998,
        3030
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2573": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2998,
        3030
      ],
      "op": "OR",
      "path": "0"
    },
    "2574": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2998,
        3030
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2575": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2998,
        3030
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2576": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2998,
        3030
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2577": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2579": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3040,
        3073
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 22
    },
    "2580": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3040,
        3073
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2581": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3040,
        3073
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2582": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3040,
        3073
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2583": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3040,
        3073
      ],
      "op": "ADD",
      "path": "0"
    },
    "2584": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3040,
        3073
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2585": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3040,
        3073
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2586": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3040,
        3073
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2587": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3040,
        3073
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2588": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3040,
        3073
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2589": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3040,
        3073
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "2591": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3040,
        3073
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2592": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3040,
        3073
      ],
      "op": "DIV",
      "path": "0"
    },
    "2593": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3040,
        3073
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6"
    },
    "2626": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3040,
        3073
      ],
      "op": "ADD",
      "path": "0"
    },
    "2627": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3040,
        3073
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2628": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3040,
        3073
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2629": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3040,
        3073
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "2631": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3040,
        3073
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2632": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3040,
        3073
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2633": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3040,
        3073
      ],
      "op": "AND",
      "path": "0"
    },
    "2634": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2636": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3040,
        3073
      ],
      "op": "MUL",
      "path": "0"
    },
    "2637": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2728,
        2988
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2640": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3040,
        3073
      ],
      "op": "EXP",
      "path": "0"
    },
    "2641": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3040,
        3073
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2642": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3040,
        3073
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2643": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3040,
        3073
      ],
      "op": "MUL",
      "path": "0"
    },
    "2644": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3040,
        3073
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2645": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3040,
        3073
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2646": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3040,
        3073
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2647": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3040,
        3073
      ],
      "op": "MUL",
      "path": "0"
    },
    "2648": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3040,
        3073
      ],
      "op": "NOT",
      "path": "0"
    },
    "2649": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3040,
        3073
      ],
      "op": "AND",
      "path": "0"
    },
    "2650": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3040,
        3073
      ],
      "op": "OR",
      "path": "0"
    },
    "2651": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3040,
        3073
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2652": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3040,
        3073
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2653": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3084,
        3203
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2654": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3106,
        3117
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2655": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3106,
        3124
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2656": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3102,
        3103
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2657": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3102,
        3124
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2659": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3102,
        3124
      ],
      "op": "AND",
      "path": "0"
    },
    "2660": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3102,
        3124
      ],
      "op": "LT",
      "path": "0"
    },
    "2661": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3084,
        3203
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2662": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3084,
        3203
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB42"
    },
    "2665": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3084,
        3203
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2666": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3145,
        3192
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 23,
      "value": "0xB30"
    },
    "2669": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3158,
        3168
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2670": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3170,
        3181
      ],
      "op": "DUP9",
      "path": "0"
    },
    "2671": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3182,
        3183
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2672": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3170,
        3184
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2674": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3170,
        3184
      ],
      "op": "AND",
      "path": "0"
    },
    "2675": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3170,
        3184
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2676": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3170,
        3184
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2677": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3170,
        3184
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2678": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3170,
        3184
      ],
      "op": "LT",
      "path": "0"
    },
    "2679": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3170,
        3184
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA82"
    },
    "2682": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3170,
        3184
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2683": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3170,
        3184
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA82"
    },
    "2686": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3170,
        3184
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1481"
    },
    "2689": {
      "fn": "SimpleElection.createElection",
      "jump": "i",
      "offset": [
        3170,
        3184
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2690": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3170,
        3184
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2691": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3170,
        3184
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2693": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3170,
        3184
      ],
      "op": "MUL",
      "path": "0"
    },
    "2694": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3170,
        3184
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2696": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3170,
        3184
      ],
      "op": "ADD",
      "path": "0"
    },
    "2697": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3170,
        3184
      ],
      "op": "ADD",
      "path": "0"
    },
    "2698": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3170,
        3184
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2699": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3186,
        3187
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2700": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3190,
        3191
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2702": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3186,
        3191
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA97"
    },
    "2705": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3186,
        3191
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2706": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3186,
        3191
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2707": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3186,
        3191
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14F1"
    },
    "2710": {
      "fn": "SimpleElection.createElection",
      "jump": "i",
      "offset": [
        3186,
        3191
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2711": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3186,
        3191
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2712": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3739,
        3767
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 24,
      "value": "0x40"
    },
    "2714": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3739,
        3767
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2715": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3739,
        3767
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2716": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3739,
        3767
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2717": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3739,
        3767
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2718": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3739,
        3767
      ],
      "op": "ADD",
      "path": "0"
    },
    "2719": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3739,
        3767
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2720": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3739,
        3767
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2721": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3739,
        3767
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2722": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3739,
        3767
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2723": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3739,
        3767
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2724": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2726": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3739,
        3767
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2728": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3739,
        3767
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2729": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3739,
        3767
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2730": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3739,
        3767
      ],
      "op": "ADD",
      "path": "0"
    },
    "2731": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3739,
        3767
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2732": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3739,
        3767
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2733": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3739,
        3767
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2734": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3699,
        3722
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "2739": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3699,
        3722
      ],
      "op": "SWAP8",
      "path": "0"
    },
    "2740": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3699,
        3722
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2741": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3699,
        3722
      ],
      "op": "SWAP8",
      "path": "0"
    },
    "2742": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3699,
        3722
      ],
      "op": "AND",
      "path": "0"
    },
    "2743": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3699,
        3722
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2744": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3699,
        3722
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2745": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3699,
        3722
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2746": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3699,
        3709
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2748": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3699,
        3722
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2749": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3699,
        3722
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2750": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3699,
        3722
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2751": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3699,
        3722
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2752": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3699,
        3722
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2753": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3699,
        3736
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2755": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3699,
        3736
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "2756": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3699,
        3736
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2757": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3699,
        3736
      ],
      "op": "AND",
      "path": "0"
    },
    "2758": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3699,
        3736
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2759": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3699,
        3736
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2760": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3699,
        3736
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2761": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3699,
        3736
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2762": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3699,
        3736
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2763": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3699,
        3736
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2764": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3699,
        3736
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2765": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3699,
        3736
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2766": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3699,
        3736
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2767": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3699,
        3767
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2768": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3699,
        3767
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2769": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3699,
        3767
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2770": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3699,
        3767
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2771": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3699,
        3767
      ],
      "op": "SWAP8",
      "path": "0"
    },
    "2772": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3699,
        3767
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2773": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3699,
        3767
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2775": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3699,
        3767
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2776": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3699,
        3767
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2777": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3699,
        3767
      ],
      "op": "ADD",
      "path": "0"
    },
    "2778": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3699,
        3767
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2779": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3777,
        3803
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 25
    },
    "2780": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3777,
        3803
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2781": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3777,
        3803
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2782": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3777,
        3790
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2784": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3777,
        3803
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2785": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3777,
        3803
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2786": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3777,
        3803
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2787": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3777,
        3803
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2788": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3777,
        3803
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2789": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3777,
        3819
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "2790": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3777,
        3819
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2791": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3777,
        3819
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2792": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3777,
        3819
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "2793": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3777,
        3819
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2794": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3777,
        3819
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2795": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3777,
        3819
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2796": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3777,
        3819
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2797": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3777,
        3819
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2798": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3777,
        3834
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2799": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3777,
        3834
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2800": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2802": {
      "op": "NOT"
    },
    "2803": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3777,
        3834
      ],
      "op": "AND",
      "path": "0"
    },
    "2804": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3777,
        3834
      ],
      "op": "DUP9",
      "path": "0"
    },
    "2805": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3777,
        3834
      ],
      "op": "OR",
      "path": "0"
    },
    "2806": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3777,
        3834
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2807": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3777,
        3834
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2808": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3844,
        3871
      ],
      "op": "SWAP5",
      "path": "0",
      "statement": 26
    },
    "2809": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3844,
        3871
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2810": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3844,
        3871
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2811": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3844,
        3858
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2813": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3844,
        3871
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2814": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3844,
        3871
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2815": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3844,
        3871
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2816": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3844,
        3871
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2817": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3844,
        3871
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2818": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3844,
        3890
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2819": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3844,
        3890
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2820": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3844,
        3890
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2821": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3844,
        3890
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2822": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3844,
        3890
      ],
      "op": "ADD",
      "path": "0"
    },
    "2823": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3844,
        3890
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2824": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3844,
        3890
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2825": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3844,
        3890
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2826": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3844,
        3890
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2827": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3844,
        3890
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2828": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3844,
        3890
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2829": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3844,
        3890
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2830": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3844,
        3890
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2831": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3844,
        3890
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2832": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3844,
        3890
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2833": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3844,
        3890
      ],
      "op": "DIV",
      "path": "0"
    },
    "2834": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3844,
        3890
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2835": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3844,
        3890
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2836": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3844,
        3890
      ],
      "op": "ADD",
      "path": "0"
    },
    "2837": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3844,
        3890
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2838": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3844,
        3890
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2839": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3844,
        3890
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2841": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3844,
        3890
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2842": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3844,
        3890
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2843": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3844,
        3890
      ],
      "op": "AND",
      "path": "0"
    },
    "2844": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3777,
        3834
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2847": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3844,
        3890
      ],
      "op": "EXP",
      "path": "0"
    },
    "2848": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3844,
        3890
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2849": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3844,
        3890
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2850": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3844,
        3890
      ],
      "op": "MUL",
      "path": "0"
    },
    "2851": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3844,
        3890
      ],
      "op": "NOT",
      "path": "0"
    },
    "2852": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3844,
        3890
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2853": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3844,
        3890
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2854": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3844,
        3890
      ],
      "op": "AND",
      "path": "0"
    },
    "2855": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3844,
        3890
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2856": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3844,
        3890
      ],
      "op": "MUL",
      "path": "0"
    },
    "2857": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3844,
        3890
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2858": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3844,
        3890
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2859": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3844,
        3890
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2860": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3844,
        3890
      ],
      "op": "OR",
      "path": "0"
    },
    "2861": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3844,
        3890
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2862": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3844,
        3890
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2863": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3565,
        3897
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2864": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3145,
        3192
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2865": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3126,
        3129
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 27
    },
    "2866": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3126,
        3129
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB3A"
    },
    "2869": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3126,
        3129
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2870": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3126,
        3129
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14AD"
    },
    "2873": {
      "fn": "SimpleElection.createElection",
      "jump": "i",
      "offset": [
        3126,
        3129
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2874": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3126,
        3129
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2875": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3126,
        3129
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2876": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3126,
        3129
      ],
      "op": "POP",
      "path": "0"
    },
    "2877": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3126,
        3129
      ],
      "op": "POP",
      "path": "0"
    },
    "2878": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3084,
        3203
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA5D"
    },
    "2881": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3084,
        3203
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2882": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3084,
        3203
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2883": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3084,
        3203
      ],
      "op": "POP",
      "path": "0"
    },
    "2884": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3217,
        3460
      ],
      "op": "PUSH32",
      "path": "0",
      "statement": 28,
      "value": "0x8C22F42E1642C0F410BC4E3DEBF771A1355EC556BDAF3CE7428E555196569C96"
    },
    "2917": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3246,
        3251
      ],
      "op": "DUP10",
      "path": "0"
    },
    "2918": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3265,
        3277
      ],
      "op": "DUP10",
      "path": "0"
    },
    "2919": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3291,
        3301
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2920": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3315,
        3334
      ],
      "op": "DUP11",
      "path": "0"
    },
    "2921": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3348,
        3362
      ],
      "op": "DUP10",
      "path": "0"
    },
    "2922": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3376,
        3388
      ],
      "op": "DUP10",
      "path": "0"
    },
    "2923": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3402,
        3420
      ],
      "op": "DUP10",
      "path": "0"
    },
    "2924": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3434,
        3450
      ],
      "op": "DUP10",
      "path": "0"
    },
    "2925": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3217,
        3460
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2927": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3217,
        3460
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2928": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3217,
        3460
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB80"
    },
    "2931": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3217,
        3460
      ],
      "op": "SWAP9",
      "path": "0"
    },
    "2932": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3217,
        3460
      ],
      "op": "SWAP8",
      "path": "0"
    },
    "2933": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3217,
        3460
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "2934": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3217,
        3460
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "2935": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3217,
        3460
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2936": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3217,
        3460
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2937": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3217,
        3460
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2938": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3217,
        3460
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2939": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3217,
        3460
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2940": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3217,
        3460
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1516"
    },
    "2943": {
      "fn": "SimpleElection.createElection",
      "jump": "i",
      "offset": [
        3217,
        3460
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2944": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3217,
        3460
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2945": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3217,
        3460
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2947": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3217,
        3460
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2948": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3217,
        3460
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2949": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3217,
        3460
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2950": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3217,
        3460
      ],
      "op": "SUB",
      "path": "0"
    },
    "2951": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3217,
        3460
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2952": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3217,
        3460
      ],
      "op": "LOG1",
      "path": "0"
    },
    "2953": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3483
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 29,
      "value": "0x7"
    },
    "2955": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2956": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2957": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "2962": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "AND",
      "path": "0"
    },
    "2963": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2964": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3483
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2966": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB9E"
    },
    "2969": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2970": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14CD"
    },
    "2973": {
      "fn": "SimpleElection.createElection",
      "jump": "i",
      "offset": [
        3470,
        3485
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2974": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2975": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2976": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2977": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2980": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "EXP",
      "path": "0"
    },
    "2981": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2982": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2983": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2984": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "2989": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "MUL",
      "path": "0"
    },
    "2990": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "NOT",
      "path": "0"
    },
    "2991": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "AND",
      "path": "0"
    },
    "2992": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2993": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2994": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "2999": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "AND",
      "path": "0"
    },
    "3000": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "MUL",
      "path": "0"
    },
    "3001": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "OR",
      "path": "0"
    },
    "3002": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3003": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3004": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "POP",
      "path": "0"
    },
    "3005": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "POP",
      "path": "0"
    },
    "3006": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3495,
        3508
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 30,
      "value": "0x7"
    },
    "3008": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3495,
        3508
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3010": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3495,
        3510
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3011": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3495,
        3510
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3012": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3495,
        3510
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3013": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3495,
        3510
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3014": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3495,
        3510
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3015": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3495,
        3510
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "3018": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3495,
        3510
      ],
      "op": "EXP",
      "path": "0"
    },
    "3019": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3495,
        3510
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3020": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3495,
        3510
      ],
      "op": "DIV",
      "path": "0"
    },
    "3021": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3495,
        3510
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "3026": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3495,
        3510
      ],
      "op": "AND",
      "path": "0"
    },
    "3027": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3495,
        3510
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3028": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3495,
        3510
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3029": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3495,
        3510
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3030": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3495,
        3510
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3031": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3495,
        3510
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBDF"
    },
    "3034": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3495,
        3510
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3035": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3495,
        3510
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14CD"
    },
    "3038": {
      "fn": "SimpleElection.createElection",
      "jump": "i",
      "offset": [
        3495,
        3510
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3039": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3495,
        3510
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3040": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3495,
        3510
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3041": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3495,
        3510
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3042": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3495,
        3510
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "3045": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3495,
        3510
      ],
      "op": "EXP",
      "path": "0"
    },
    "3046": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3495,
        3510
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3047": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3495,
        3510
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3048": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3495,
        3510
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3049": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3495,
        3510
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "3054": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3495,
        3510
      ],
      "op": "MUL",
      "path": "0"
    },
    "3055": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3495,
        3510
      ],
      "op": "NOT",
      "path": "0"
    },
    "3056": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3495,
        3510
      ],
      "op": "AND",
      "path": "0"
    },
    "3057": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3495,
        3510
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3058": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3495,
        3510
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3059": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3495,
        3510
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "3064": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3495,
        3510
      ],
      "op": "AND",
      "path": "0"
    },
    "3065": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3495,
        3510
      ],
      "op": "MUL",
      "path": "0"
    },
    "3066": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3495,
        3510
      ],
      "op": "OR",
      "path": "0"
    },
    "3067": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3495,
        3510
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3068": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3495,
        3510
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3069": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3495,
        3510
      ],
      "op": "POP",
      "path": "0"
    },
    "3070": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3495,
        3510
      ],
      "op": "POP",
      "path": "0"
    },
    "3071": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2460,
        3517
      ],
      "op": "POP",
      "path": "0"
    },
    "3072": {
      "fn": "SimpleElection.createElection",
      "offset": [
        1888,
        3517
      ],
      "op": "POP",
      "path": "0"
    },
    "3073": {
      "fn": "SimpleElection.createElection",
      "offset": [
        1888,
        3517
      ],
      "op": "POP",
      "path": "0"
    },
    "3074": {
      "fn": "SimpleElection.createElection",
      "offset": [
        1888,
        3517
      ],
      "op": "POP",
      "path": "0"
    },
    "3075": {
      "fn": "SimpleElection.createElection",
      "offset": [
        1888,
        3517
      ],
      "op": "POP",
      "path": "0"
    },
    "3076": {
      "fn": "SimpleElection.createElection",
      "offset": [
        1888,
        3517
      ],
      "op": "POP",
      "path": "0"
    },
    "3077": {
      "fn": "SimpleElection.createElection",
      "offset": [
        1888,
        3517
      ],
      "op": "POP",
      "path": "0"
    },
    "3078": {
      "fn": "SimpleElection.createElection",
      "offset": [
        1888,
        3517
      ],
      "op": "POP",
      "path": "0"
    },
    "3079": {
      "fn": "SimpleElection.createElection",
      "offset": [
        1888,
        3517
      ],
      "op": "POP",
      "path": "0"
    },
    "3080": {
      "fn": "SimpleElection.createElection",
      "jump": "o",
      "offset": [
        1888,
        3517
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3081": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7146,
        7414
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3082": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7271,
        7293
      ],
      "op": "PUSH4",
      "path": "0",
      "statement": 31,
      "value": "0xFFFFFFFF"
    },
    "3087": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7271,
        7293
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3088": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7271,
        7293
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3089": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7271,
        7293
      ],
      "op": "AND",
      "path": "0"
    },
    "3090": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7242,
        7246
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3092": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7271,
        7293
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3093": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7271,
        7293
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3094": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7271,
        7293
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3095": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7271,
        7280
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3097": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7271,
        7293
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3099": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7271,
        7293
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3100": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7271,
        7293
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3101": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7271,
        7293
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3102": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7271,
        7293
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3104": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7271,
        7293
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3105": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7271,
        7293
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3106": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7271,
        7311
      ],
      "op": "ADD",
      "path": "0"
    },
    "3107": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7271,
        7311
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3108": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7242,
        7246
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3109": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7242,
        7246
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3110": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7315,
        7330
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "3111": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3113": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "3115": {
      "op": "SHL"
    },
    "3116": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7271,
        7311
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3117": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7271,
        7311
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3118": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7271,
        7311
      ],
      "op": "DIV",
      "path": "0"
    },
    "3119": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7271,
        7311
      ],
      "op": "AND",
      "path": "0"
    },
    "3120": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7271,
        7330
      ],
      "op": "GT",
      "path": "0"
    },
    "3121": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7271,
        7330
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3122": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7271,
        7330
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3123": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7271,
        7330
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3124": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7270,
        7406
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x612"
    },
    "3127": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7270,
        7406
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3128": {
      "op": "POP"
    },
    "3129": {
      "op": "POP"
    },
    "3130": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7348,
        7370
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "3135": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7348,
        7370
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3136": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7348,
        7370
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3137": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7348,
        7370
      ],
      "op": "AND",
      "path": "0"
    },
    "3138": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7348,
        7370
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3140": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7348,
        7370
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3141": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7348,
        7370
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3142": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7348,
        7370
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3143": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7348,
        7357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3145": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7348,
        7370
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3147": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7348,
        7370
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3148": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7348,
        7370
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3149": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7348,
        7370
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3150": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7348,
        7370
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3152": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7348,
        7370
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3153": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7348,
        7370
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3154": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7348,
        7370
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3155": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7348,
        7386
      ],
      "op": "ADD",
      "path": "0"
    },
    "3156": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7348,
        7386
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3157": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7390,
        7405
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "3158": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3160": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "3162": {
      "op": "SHL"
    },
    "3163": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7348,
        7386
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3164": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7348,
        7386
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3165": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7348,
        7386
      ],
      "op": "DIV",
      "path": "0"
    },
    "3166": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7348,
        7386
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3167": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7348,
        7386
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3168": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7348,
        7386
      ],
      "op": "AND",
      "path": "0"
    },
    "3169": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7348,
        7405
      ],
      "op": "LT",
      "path": "0"
    },
    "3170": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7348,
        7405
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3171": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7348,
        7405
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3172": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "jump": "o",
      "offset": [
        7146,
        7414
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3173": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        3954,
        5607
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3174": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8322
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "3179": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8322
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3180": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8322
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3181": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8322
      ],
      "op": "AND",
      "path": "0"
    },
    "3182": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8277,
        8281
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3184": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8322
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3185": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8322
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3186": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8322
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3187": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8309
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3189": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8322
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3191": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8322
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3192": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8322
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3193": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8322
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3194": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8322
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3196": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8322
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3197": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8322
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3198": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8322
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3199": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8325
      ],
      "op": "ADD",
      "path": "0"
    },
    "3200": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8325
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3201": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8300,
        8325
      ],
      "op": "AND",
      "path": "0"
    },
    "3202": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4190,
        4256
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 32,
      "value": "0xCCD"
    },
    "3205": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4190,
        4256
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3206": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4190,
        4256
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3208": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4190,
        4256
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3209": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3213": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3215": {
      "op": "SHL"
    },
    "3216": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4190,
        4256
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3217": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4190,
        4256
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3218": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3220": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4190,
        4256
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3222": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4190,
        4256
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3223": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4190,
        4256
      ],
      "op": "ADD",
      "path": "0"
    },
    "3224": {
      "op": "MSTORE"
    },
    "3225": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "3227": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3229": {
      "op": "DUP3"
    },
    "3230": {
      "op": "ADD"
    },
    "3231": {
      "op": "MSTORE"
    },
    "3232": {
      "op": "PUSH32",
      "value": "0x54686520656C656374696F6E20646F65736E2774206578697374000000000000"
    },
    "3265": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3267": {
      "op": "DUP3"
    },
    "3268": {
      "op": "ADD"
    },
    "3269": {
      "op": "MSTORE"
    },
    "3270": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3272": {
      "op": "ADD"
    },
    "3273": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4190,
        4256
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F9"
    },
    "3276": {
      "op": "JUMP"
    },
    "3277": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4190,
        4256
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3278": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4274,
        4304
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 33,
      "value": "0xCD6"
    },
    "3281": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4292,
        4303
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3282": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4274,
        4291
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B7"
    },
    "3285": {
      "fn": "SimpleElection.voterVote",
      "jump": "i",
      "offset": [
        4274,
        4304
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3286": {
      "branch": 45,
      "fn": "SimpleElection.voterVote",
      "offset": [
        4274,
        4304
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3287": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4266,
        4331
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD1B"
    },
    "3290": {
      "branch": 45,
      "fn": "SimpleElection.voterVote",
      "offset": [
        4266,
        4331
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3291": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4266,
        4331
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3293": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4266,
        4331
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3294": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3298": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3300": {
      "op": "SHL"
    },
    "3301": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4266,
        4331
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3302": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4266,
        4331
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3303": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3305": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4266,
        4331
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3307": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4266,
        4331
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3308": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4266,
        4331
      ],
      "op": "ADD",
      "path": "0"
    },
    "3309": {
      "op": "MSTORE"
    },
    "3310": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "3312": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3314": {
      "op": "DUP3"
    },
    "3315": {
      "op": "ADD"
    },
    "3316": {
      "op": "MSTORE"
    },
    "3317": {
      "op": "PUSH22",
      "value": "0x151A1948195B1958DD1A5BDB881A5CC818DB1BDCD959"
    },
    "3340": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "3342": {
      "op": "SHL"
    },
    "3343": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3345": {
      "op": "DUP3"
    },
    "3346": {
      "op": "ADD"
    },
    "3347": {
      "op": "MSTORE"
    },
    "3348": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3350": {
      "op": "ADD"
    },
    "3351": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4266,
        4331
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F9"
    },
    "3354": {
      "op": "JUMP"
    },
    "3355": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4266,
        4331
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3356": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4345,
        4367
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "3361": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4345,
        4367
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3362": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4345,
        4367
      ],
      "op": "AND",
      "path": "0"
    },
    "3363": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4345,
        4367
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3365": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4345,
        4367
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3366": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4345,
        4367
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3367": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4345,
        4367
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3368": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4345,
        4354
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3370": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4345,
        4367
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3372": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4345,
        4367
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3373": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4345,
        4367
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3374": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4345,
        4367
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3375": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4345,
        4367
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3377": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4345,
        4367
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3378": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4345,
        4367
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3379": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4345,
        4367
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3380": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4345,
        4386
      ],
      "op": "ADD",
      "path": "0"
    },
    "3381": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4345,
        4386
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3382": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4345,
        4386
      ],
      "op": "PUSH5",
      "path": "0",
      "value": "0x100000000"
    },
    "3388": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4345,
        4386
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3389": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4345,
        4386
      ],
      "op": "DIV",
      "path": "0"
    },
    "3390": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4345,
        4386
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3392": {
      "branch": 46,
      "fn": "SimpleElection.voterVote",
      "offset": [
        4345,
        4386
      ],
      "op": "AND",
      "path": "0"
    },
    "3393": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4341,
        4598
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3394": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4341,
        4598
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDA0"
    },
    "3397": {
      "branch": 46,
      "fn": "SimpleElection.voterVote",
      "offset": [
        4341,
        4598
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3398": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4427,
        4465
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 34,
      "value": "0xD4F"
    },
    "3401": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4445,
        4456
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3402": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4458,
        4464
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3403": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4427,
        4444
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x725"
    },
    "3406": {
      "fn": "SimpleElection.voterVote",
      "jump": "i",
      "offset": [
        4427,
        4465
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3407": {
      "branch": 47,
      "fn": "SimpleElection.voterVote",
      "offset": [
        4427,
        4465
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3408": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4402,
        4522
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD9B"
    },
    "3411": {
      "branch": 47,
      "fn": "SimpleElection.voterVote",
      "offset": [
        4402,
        4522
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3412": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4402,
        4522
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3414": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4402,
        4522
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3415": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3419": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3421": {
      "op": "SHL"
    },
    "3422": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4402,
        4522
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3423": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4402,
        4522
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3424": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3426": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4402,
        4522
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3428": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4402,
        4522
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3429": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4402,
        4522
      ],
      "op": "ADD",
      "path": "0"
    },
    "3430": {
      "op": "MSTORE"
    },
    "3431": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "3433": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3435": {
      "op": "DUP3"
    },
    "3436": {
      "op": "ADD"
    },
    "3437": {
      "op": "MSTORE"
    },
    "3438": {
      "op": "PUSH32",
      "value": "0x566F746572206861736E27742072656769737465726564000000000000000000"
    },
    "3471": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3473": {
      "op": "DUP3"
    },
    "3474": {
      "op": "ADD"
    },
    "3475": {
      "op": "MSTORE"
    },
    "3476": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3478": {
      "op": "ADD"
    },
    "3479": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4402,
        4522
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F9"
    },
    "3482": {
      "op": "JUMP"
    },
    "3483": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4402,
        4522
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3484": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4341,
        4598
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDCE"
    },
    "3487": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4341,
        4598
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3488": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4341,
        4598
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3489": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6912,
        6931
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "3494": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6912,
        6931
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3495": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6912,
        6931
      ],
      "op": "AND",
      "path": "0"
    },
    "3496": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6912,
        6931
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3498": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6912,
        6931
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3499": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6912,
        6931
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3500": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6912,
        6931
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3501": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6912,
        6918
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "3503": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6912,
        6931
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3505": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6912,
        6931
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3506": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6912,
        6931
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3507": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6912,
        6931
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3508": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6912,
        6931
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3510": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6912,
        6931
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3511": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6912,
        6931
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3512": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6912,
        6931
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3517": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3519": {
      "op": "SHL"
    },
    "3520": {
      "op": "SUB"
    },
    "3521": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6912,
        6938
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3522": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6912,
        6938
      ],
      "op": "AND",
      "path": "0"
    },
    "3523": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6912,
        6938
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3524": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6912,
        6938
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3525": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6912,
        6938
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3526": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6912,
        6938
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3527": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6912,
        6938
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3528": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6912,
        6938
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3529": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6912,
        6938
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3530": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6948,
        6949
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3532": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6912,
        6949
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3533": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6912,
        6949
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3534": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4553,
        4587
      ],
      "op": "JUMPDEST",
      "path": "0",
      "statement": 35
    },
    "3535": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8050
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "3540": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8050
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3541": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8050
      ],
      "op": "AND",
      "path": "0"
    },
    "3542": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8004,
        8008
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3544": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8050
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3545": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8050
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3546": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8050
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3547": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8037
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "3549": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8050
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3551": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8050
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3552": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8050
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3553": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8050
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3554": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8050
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3556": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8050
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3557": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8050
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3558": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8050
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3563": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3565": {
      "op": "SHL"
    },
    "3566": {
      "op": "SUB"
    },
    "3567": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8057
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3568": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8057
      ],
      "op": "AND",
      "path": "0"
    },
    "3569": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8057
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3570": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8057
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3571": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8057
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3572": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8057
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3573": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8057
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3574": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8057
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3575": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8057
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3576": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8063
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3578": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8063
      ],
      "op": "ADD",
      "path": "0"
    },
    "3579": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8063
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3580": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8063
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3582": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8031,
        8063
      ],
      "op": "AND",
      "path": "0"
    },
    "3583": {
      "branch": 48,
      "fn": "SimpleElection.voterVote",
      "offset": [
        4628,
        4663
      ],
      "op": "ISZERO",
      "path": "0",
      "statement": 36
    },
    "3584": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4607,
        4713
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE4B"
    },
    "3587": {
      "branch": 48,
      "fn": "SimpleElection.voterVote",
      "offset": [
        4607,
        4713
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3588": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4607,
        4713
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3590": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4607,
        4713
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3591": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3595": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3597": {
      "op": "SHL"
    },
    "3598": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4607,
        4713
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3599": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4607,
        4713
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3600": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3602": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4607,
        4713
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3604": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4607,
        4713
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3605": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4607,
        4713
      ],
      "op": "ADD",
      "path": "0"
    },
    "3606": {
      "op": "MSTORE"
    },
    "3607": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "3609": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3611": {
      "op": "DUP3"
    },
    "3612": {
      "op": "ADD"
    },
    "3613": {
      "op": "MSTORE"
    },
    "3614": {
      "op": "PUSH32",
      "value": "0x566F7465722068617320616C726561647920566F746564210000000000000000"
    },
    "3647": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3649": {
      "op": "DUP3"
    },
    "3650": {
      "op": "ADD"
    },
    "3651": {
      "op": "MSTORE"
    },
    "3652": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3654": {
      "op": "ADD"
    },
    "3655": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4607,
        4713
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F9"
    },
    "3658": {
      "op": "JUMP"
    },
    "3659": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4607,
        4713
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3660": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4755,
        4774
      ],
      "op": "PUSH4",
      "path": "0",
      "statement": 37,
      "value": "0xFFFFFFFF"
    },
    "3665": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4755,
        4774
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3666": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4755,
        4774
      ],
      "op": "AND",
      "path": "0"
    },
    "3667": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4755,
        4774
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3669": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4755,
        4774
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3670": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4755,
        4774
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3671": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4755,
        4774
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3672": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4755,
        4761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "3674": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4755,
        4774
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3676": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4755,
        4774
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3677": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4755,
        4774
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3678": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4755,
        4774
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3679": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4755,
        4774
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3681": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4755,
        4774
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3682": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4755,
        4774
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3683": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4755,
        4774
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3688": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3690": {
      "op": "SHL"
    },
    "3691": {
      "op": "SUB"
    },
    "3692": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4755,
        4782
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3693": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4755,
        4782
      ],
      "op": "AND",
      "path": "0"
    },
    "3694": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4755,
        4782
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3695": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4755,
        4782
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3696": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4755,
        4782
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3697": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4755,
        4782
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3698": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4755,
        4782
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3699": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4755,
        4782
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3700": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4755,
        4782
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3701": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4755,
        4789
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3702": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4744,
        4789
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3703": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4744,
        4789
      ],
      "op": "GT",
      "path": "0"
    },
    "3704": {
      "branch": 49,
      "fn": "SimpleElection.voterVote",
      "offset": [
        4744,
        4789
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3705": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4723,
        4846
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEC4"
    },
    "3708": {
      "branch": 49,
      "fn": "SimpleElection.voterVote",
      "offset": [
        4723,
        4846
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3709": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4723,
        4846
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3711": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4723,
        4846
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3712": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3716": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3718": {
      "op": "SHL"
    },
    "3719": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4723,
        4846
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3720": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4723,
        4846
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3721": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3723": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4723,
        4846
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3725": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4723,
        4846
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3726": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4723,
        4846
      ],
      "op": "ADD",
      "path": "0"
    },
    "3727": {
      "op": "MSTORE"
    },
    "3728": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3730": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3732": {
      "op": "DUP3"
    },
    "3733": {
      "op": "ADD"
    },
    "3734": {
      "op": "MSTORE"
    },
    "3735": {
      "op": "PUSH32",
      "value": "0x566F74657220646F206E6F74206861766520736F206D616E7920766F74657300"
    },
    "3768": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3770": {
      "op": "DUP3"
    },
    "3771": {
      "op": "ADD"
    },
    "3772": {
      "op": "MSTORE"
    },
    "3773": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3775": {
      "op": "ADD"
    },
    "3776": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4723,
        4846
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F9"
    },
    "3779": {
      "op": "JUMP"
    },
    "3780": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4723,
        4846
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3781": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8504
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "3786": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8504
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3787": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8504
      ],
      "op": "AND",
      "path": "0"
    },
    "3788": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8453,
        8457
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3790": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8504
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3791": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8504
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3792": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8504
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3793": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3795": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8504
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3797": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8504
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3798": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8504
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3799": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8504
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3800": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8504
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3802": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8504
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3803": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8504
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3804": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8504
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3805": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8518
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3807": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8518
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3808": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8518
      ],
      "op": "AND",
      "path": "0"
    },
    "3809": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8518
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3810": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8518
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3811": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8518
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3812": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8518
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3813": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8518
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3814": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8518
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3815": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8518
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3816": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8481,
        8523
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3817": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4856,
        4971
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 38,
      "value": "0xF34"
    },
    "3820": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4856,
        4971
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3821": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4856,
        4971
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3823": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4856,
        4971
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3824": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3828": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3830": {
      "op": "SHL"
    },
    "3831": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4856,
        4971
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3832": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4856,
        4971
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3833": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3835": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4856,
        4971
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3837": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4856,
        4971
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3838": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4856,
        4971
      ],
      "op": "ADD",
      "path": "0"
    },
    "3839": {
      "op": "MSTORE"
    },
    "3840": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "3842": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3844": {
      "op": "DUP3"
    },
    "3845": {
      "op": "ADD"
    },
    "3846": {
      "op": "MSTORE"
    },
    "3847": {
      "op": "PUSH32",
      "value": "0x496E76616C69642063616E64696461746520746F20566F746521000000000000"
    },
    "3880": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3882": {
      "op": "DUP3"
    },
    "3883": {
      "op": "ADD"
    },
    "3884": {
      "op": "MSTORE"
    },
    "3885": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3887": {
      "op": "ADD"
    },
    "3888": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4856,
        4971
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F9"
    },
    "3891": {
      "op": "JUMP"
    },
    "3892": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4856,
        4971
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3893": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5098,
        5121
      ],
      "op": "PUSH4",
      "path": "0",
      "statement": 39,
      "value": "0xFFFFFFFF"
    },
    "3898": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5098,
        5121
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3899": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5098,
        5121
      ],
      "op": "AND",
      "path": "0"
    },
    "3900": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5098,
        5121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3902": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5098,
        5121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3903": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5098,
        5121
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3904": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5098,
        5121
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3905": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5098,
        5108
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3907": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5098,
        5121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3909": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5098,
        5121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3910": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5098,
        5121
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3911": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5098,
        5121
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3912": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5098,
        5121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3914": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5098,
        5121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3915": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5098,
        5121
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3916": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5098,
        5121
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3917": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5098,
        5135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3919": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5098,
        5135
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3920": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5098,
        5135
      ],
      "op": "AND",
      "path": "0"
    },
    "3921": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5098,
        5135
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3922": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5098,
        5135
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3923": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5098,
        5135
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3924": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5098,
        5135
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3925": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5098,
        5135
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3926": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5098,
        5135
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3927": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5098,
        5135
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3928": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5098,
        5145
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3930": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5098,
        5145
      ],
      "op": "ADD",
      "path": "0"
    },
    "3931": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5098,
        5145
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3932": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5098,
        5167
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF66"
    },
    "3935": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5098,
        5167
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3936": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5160,
        5167
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3937": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5160,
        5167
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3938": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5098,
        5167
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15BC"
    },
    "3941": {
      "fn": "SimpleElection.voterVote",
      "jump": "i",
      "offset": [
        5098,
        5167
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3942": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5098,
        5167
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3943": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5036,
        5059
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "3948": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5036,
        5059
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3949": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5036,
        5059
      ],
      "op": "AND",
      "path": "0"
    },
    "3950": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5036,
        5059
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3952": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5036,
        5059
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3953": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5036,
        5059
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3954": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5036,
        5059
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3955": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5036,
        5046
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3957": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5036,
        5059
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3959": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5036,
        5059
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3960": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5036,
        5059
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3961": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5036,
        5059
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3962": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5036,
        5059
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3964": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5036,
        5059
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3965": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5036,
        5059
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3966": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5036,
        5059
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3967": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5036,
        5073
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3969": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5036,
        5073
      ],
      "op": "DUP9",
      "path": "0"
    },
    "3970": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5036,
        5073
      ],
      "op": "AND",
      "path": "0"
    },
    "3971": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5036,
        5073
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3972": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5036,
        5073
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3973": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5036,
        5073
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3974": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5036,
        5073
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3975": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5036,
        5073
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3976": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5036,
        5073
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3977": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5036,
        5073
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3978": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5036,
        5083
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3980": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5036,
        5083
      ],
      "op": "ADD",
      "path": "0"
    },
    "3981": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5036,
        5167
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "3982": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5036,
        5167
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3983": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5036,
        5167
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "3984": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5036,
        5167
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3985": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5279,
        5298
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 40
    },
    "3986": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5279,
        5298
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3987": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5279,
        5298
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3988": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5279,
        5285
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "3990": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5279,
        5298
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3991": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5279,
        5298
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3992": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5279,
        5298
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3993": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5279,
        5298
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3994": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5279,
        5298
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3999": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4001": {
      "op": "SHL"
    },
    "4002": {
      "op": "SUB"
    },
    "4003": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5279,
        5306
      ],
      "op": "DUP8",
      "path": "0"
    },
    "4004": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5279,
        5306
      ],
      "op": "AND",
      "path": "0"
    },
    "4005": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5279,
        5306
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4006": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5279,
        5306
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4007": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5279,
        5306
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4008": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5279,
        5306
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4009": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5279,
        5306
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4010": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5279,
        5306
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4011": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5279,
        5313
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4012": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5279,
        5335
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFB6"
    },
    "4015": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5279,
        5335
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4016": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5328,
        5335
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4017": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5328,
        5335
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4018": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5279,
        5335
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15D4"
    },
    "4021": {
      "fn": "SimpleElection.voterVote",
      "jump": "i",
      "offset": [
        5279,
        5335
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4022": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5279,
        5335
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4023": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5230,
        5249
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "4028": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5230,
        5249
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4029": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5230,
        5249
      ],
      "op": "AND",
      "path": "0"
    },
    "4030": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5230,
        5249
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4032": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5230,
        5249
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4033": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5230,
        5249
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4034": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5230,
        5249
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4035": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5230,
        5236
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "4037": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5230,
        5249
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4039": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5230,
        5249
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4040": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5230,
        5249
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4041": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5230,
        5249
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4042": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5230,
        5249
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4044": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5230,
        5249
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4045": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5230,
        5249
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4046": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5230,
        5249
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4051": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4053": {
      "op": "SHL"
    },
    "4054": {
      "op": "SUB"
    },
    "4055": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5230,
        5257
      ],
      "op": "DUP9",
      "path": "0"
    },
    "4056": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5230,
        5257
      ],
      "op": "AND",
      "path": "0"
    },
    "4057": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5230,
        5257
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4058": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5230,
        5257
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4059": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5230,
        5257
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4060": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5230,
        5257
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4061": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5230,
        5257
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4062": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5230,
        5257
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4063": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5230,
        5257
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4064": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5230,
        5335
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4065": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5230,
        5335
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4066": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5230,
        5335
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4067": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5426,
        5536
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1020"
    },
    "4070": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5426,
        5536
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4071": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5485,
        5504
      ],
      "op": "PUSH4",
      "path": "0",
      "statement": 41,
      "value": "0xFFFFFFFF"
    },
    "4076": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5485,
        5504
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4077": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5485,
        5504
      ],
      "op": "AND",
      "path": "0"
    },
    "4078": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5485,
        5504
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4080": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5485,
        5504
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4081": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5485,
        5504
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4082": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5485,
        5504
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4083": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5485,
        5491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "4085": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5485,
        5504
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4087": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5485,
        5504
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4088": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5485,
        5504
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4089": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5485,
        5504
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4090": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5485,
        5504
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4092": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5485,
        5504
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4093": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5485,
        5504
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4094": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5485,
        5504
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4097": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4099": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4101": {
      "op": "SHL"
    },
    "4102": {
      "op": "SUB"
    },
    "4103": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5485,
        5512
      ],
      "op": "DUP8",
      "path": "0"
    },
    "4104": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5485,
        5512
      ],
      "op": "AND",
      "path": "0"
    },
    "4105": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5485,
        5512
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4106": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5485,
        5512
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4107": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5485,
        5512
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4108": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5485,
        5512
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4109": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5485,
        5512
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4110": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5485,
        5512
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4111": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5485,
        5512
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4112": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5521,
        5525
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4114": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5485,
        5518
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4115": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5485,
        5518
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4116": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5485,
        5518
      ],
      "op": "ADD",
      "path": "0"
    },
    "4117": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5485,
        5525
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4118": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5485,
        5525
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4119": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4121": {
      "op": "NOT"
    },
    "4122": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5485,
        5525
      ],
      "op": "AND",
      "path": "0"
    },
    "4123": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5485,
        5525
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4124": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5485,
        5525
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4125": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5485,
        5525
      ],
      "op": "OR",
      "path": "0"
    },
    "4126": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5485,
        5525
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4127": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5485,
        5525
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4128": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5426,
        5536
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4129": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5551,
        5600
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 42,
      "value": "0x40"
    },
    "4131": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5551,
        5600
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4132": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5551,
        5600
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4133": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "4138": {
      "op": "DUP7"
    },
    "4139": {
      "op": "AND"
    },
    "4140": {
      "op": "DUP2"
    },
    "4141": {
      "op": "MSTORE"
    },
    "4142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4146": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4148": {
      "op": "SHL"
    },
    "4149": {
      "op": "SUB"
    },
    "4150": {
      "op": "DUP6"
    },
    "4151": {
      "op": "AND"
    },
    "4152": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4154": {
      "op": "DUP3"
    },
    "4155": {
      "op": "ADD"
    },
    "4156": {
      "op": "MSTORE"
    },
    "4157": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4159": {
      "op": "DUP5"
    },
    "4160": {
      "op": "AND"
    },
    "4161": {
      "op": "DUP2"
    },
    "4162": {
      "op": "DUP4"
    },
    "4163": {
      "op": "ADD"
    },
    "4164": {
      "op": "MSTORE"
    },
    "4165": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4167": {
      "op": "DUP2"
    },
    "4168": {
      "op": "ADD"
    },
    "4169": {
      "op": "DUP4"
    },
    "4170": {
      "op": "SWAP1"
    },
    "4171": {
      "op": "MSTORE"
    },
    "4172": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5551,
        5600
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4173": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5551,
        5600
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4174": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5551,
        5600
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x66EB9354084DA3C9417BFAEB0F63DE26C8976282F67E1687AF5B90E8D3FBD387"
    },
    "4207": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5551,
        5600
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4208": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5551,
        5600
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4209": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5551,
        5600
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4210": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5551,
        5600
      ],
      "op": "SUB",
      "path": "0"
    },
    "4211": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4213": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5551,
        5600
      ],
      "op": "ADD",
      "path": "0"
    },
    "4214": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5551,
        5600
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4215": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5551,
        5600
      ],
      "op": "LOG1",
      "path": "0"
    },
    "4216": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        3954,
        5607
      ],
      "op": "POP",
      "path": "0"
    },
    "4217": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        3954,
        5607
      ],
      "op": "POP",
      "path": "0"
    },
    "4218": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        3954,
        5607
      ],
      "op": "POP",
      "path": "0"
    },
    "4219": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        3954,
        5607
      ],
      "op": "POP",
      "path": "0"
    },
    "4220": {
      "fn": "SimpleElection.voterVote",
      "jump": "o",
      "offset": [
        3954,
        5607
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4221": {
      "op": "JUMPDEST"
    },
    "4222": {
      "op": "DUP3"
    },
    "4223": {
      "op": "DUP1"
    },
    "4224": {
      "op": "SLOAD"
    },
    "4225": {
      "op": "PUSH2",
      "value": "0x1089"
    },
    "4228": {
      "op": "SWAP1"
    },
    "4229": {
      "op": "PUSH2",
      "value": "0x15EB"
    },
    "4232": {
      "jump": "i",
      "op": "JUMP"
    },
    "4233": {
      "op": "JUMPDEST"
    },
    "4234": {
      "op": "SWAP1"
    },
    "4235": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4237": {
      "op": "MSTORE"
    },
    "4238": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4240": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4242": {
      "op": "KECCAK256"
    },
    "4243": {
      "op": "SWAP1"
    },
    "4244": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4246": {
      "op": "ADD"
    },
    "4247": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4249": {
      "op": "SWAP1"
    },
    "4250": {
      "op": "DIV"
    },
    "4251": {
      "op": "DUP2"
    },
    "4252": {
      "op": "ADD"
    },
    "4253": {
      "op": "SWAP3"
    },
    "4254": {
      "op": "DUP3"
    },
    "4255": {
      "op": "PUSH2",
      "value": "0x10AB"
    },
    "4258": {
      "op": "JUMPI"
    },
    "4259": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4261": {
      "op": "DUP6"
    },
    "4262": {
      "op": "SSTORE"
    },
    "4263": {
      "op": "PUSH2",
      "value": "0x10F1"
    },
    "4266": {
      "op": "JUMP"
    },
    "4267": {
      "op": "JUMPDEST"
    },
    "4268": {
      "op": "DUP3"
    },
    "4269": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4271": {
      "op": "LT"
    },
    "4272": {
      "op": "PUSH2",
      "value": "0x10C4"
    },
    "4275": {
      "op": "JUMPI"
    },
    "4276": {
      "op": "DUP1"
    },
    "4277": {
      "op": "MLOAD"
    },
    "4278": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4280": {
      "op": "NOT"
    },
    "4281": {
      "op": "AND"
    },
    "4282": {
      "op": "DUP4"
    },
    "4283": {
      "op": "DUP1"
    },
    "4284": {
      "op": "ADD"
    },
    "4285": {
      "op": "OR"
    },
    "4286": {
      "op": "DUP6"
    },
    "4287": {
      "op": "SSTORE"
    },
    "4288": {
      "op": "PUSH2",
      "value": "0x10F1"
    },
    "4291": {
      "op": "JUMP"
    },
    "4292": {
      "op": "JUMPDEST"
    },
    "4293": {
      "op": "DUP3"
    },
    "4294": {
      "op": "DUP1"
    },
    "4295": {
      "op": "ADD"
    },
    "4296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4298": {
      "op": "ADD"
    },
    "4299": {
      "op": "DUP6"
    },
    "4300": {
      "op": "SSTORE"
    },
    "4301": {
      "op": "DUP3"
    },
    "4302": {
      "op": "ISZERO"
    },
    "4303": {
      "op": "PUSH2",
      "value": "0x10F1"
    },
    "4306": {
      "op": "JUMPI"
    },
    "4307": {
      "op": "SWAP2"
    },
    "4308": {
      "op": "DUP3"
    },
    "4309": {
      "op": "ADD"
    },
    "4310": {
      "op": "JUMPDEST"
    },
    "4311": {
      "op": "DUP3"
    },
    "4312": {
      "op": "DUP2"
    },
    "4313": {
      "op": "GT"
    },
    "4314": {
      "op": "ISZERO"
    },
    "4315": {
      "op": "PUSH2",
      "value": "0x10F1"
    },
    "4318": {
      "op": "JUMPI"
    },
    "4319": {
      "op": "DUP3"
    },
    "4320": {
      "op": "MLOAD"
    },
    "4321": {
      "op": "DUP3"
    },
    "4322": {
      "op": "SSTORE"
    },
    "4323": {
      "op": "SWAP2"
    },
    "4324": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4326": {
      "op": "ADD"
    },
    "4327": {
      "op": "SWAP2"
    },
    "4328": {
      "op": "SWAP1"
    },
    "4329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4331": {
      "op": "ADD"
    },
    "4332": {
      "op": "SWAP1"
    },
    "4333": {
      "op": "PUSH2",
      "value": "0x10D6"
    },
    "4336": {
      "op": "JUMP"
    },
    "4337": {
      "op": "JUMPDEST"
    },
    "4338": {
      "op": "POP"
    },
    "4339": {
      "op": "PUSH2",
      "value": "0x10FD"
    },
    "4342": {
      "op": "SWAP3"
    },
    "4343": {
      "op": "SWAP2"
    },
    "4344": {
      "op": "POP"
    },
    "4345": {
      "op": "PUSH2",
      "value": "0x1101"
    },
    "4348": {
      "jump": "i",
      "op": "JUMP"
    },
    "4349": {
      "op": "JUMPDEST"
    },
    "4350": {
      "op": "POP"
    },
    "4351": {
      "op": "SWAP1"
    },
    "4352": {
      "jump": "o",
      "op": "JUMP"
    },
    "4353": {
      "op": "JUMPDEST"
    },
    "4354": {
      "op": "JUMPDEST"
    },
    "4355": {
      "op": "DUP1"
    },
    "4356": {
      "op": "DUP3"
    },
    "4357": {
      "op": "GT"
    },
    "4358": {
      "op": "ISZERO"
    },
    "4359": {
      "op": "PUSH2",
      "value": "0x10FD"
    },
    "4362": {
      "op": "JUMPI"
    },
    "4363": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4365": {
      "op": "DUP2"
    },
    "4366": {
      "op": "SSTORE"
    },
    "4367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4369": {
      "op": "ADD"
    },
    "4370": {
      "op": "PUSH2",
      "value": "0x1102"
    },
    "4373": {
      "op": "JUMP"
    },
    "4374": {
      "op": "JUMPDEST"
    },
    "4375": {
      "op": "DUP1"
    },
    "4376": {
      "op": "CALLDATALOAD"
    },
    "4377": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "4382": {
      "op": "DUP2"
    },
    "4383": {
      "op": "AND"
    },
    "4384": {
      "op": "DUP2"
    },
    "4385": {
      "op": "EQ"
    },
    "4386": {
      "op": "PUSH2",
      "value": "0x112A"
    },
    "4389": {
      "op": "JUMPI"
    },
    "4390": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4392": {
      "op": "DUP1"
    },
    "4393": {
      "op": "REVERT"
    },
    "4394": {
      "op": "JUMPDEST"
    },
    "4395": {
      "op": "SWAP2"
    },
    "4396": {
      "op": "SWAP1"
    },
    "4397": {
      "op": "POP"
    },
    "4398": {
      "jump": "o",
      "op": "JUMP"
    },
    "4399": {
      "op": "JUMPDEST"
    },
    "4400": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4402": {
      "op": "DUP1"
    },
    "4403": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4405": {
      "op": "DUP4"
    },
    "4406": {
      "op": "DUP6"
    },
    "4407": {
      "op": "SUB"
    },
    "4408": {
      "op": "SLT"
    },
    "4409": {
      "op": "ISZERO"
    },
    "4410": {
      "op": "PUSH2",
      "value": "0x1142"
    },
    "4413": {
      "op": "JUMPI"
    },
    "4414": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4416": {
      "op": "DUP1"
    },
    "4417": {
      "op": "REVERT"
    },
    "4418": {
      "op": "JUMPDEST"
    },
    "4419": {
      "op": "PUSH2",
      "value": "0x114B"
    },
    "4422": {
      "op": "DUP4"
    },
    "4423": {
      "op": "PUSH2",
      "value": "0x1116"
    },
    "4426": {
      "jump": "i",
      "op": "JUMP"
    },
    "4427": {
      "op": "JUMPDEST"
    },
    "4428": {
      "op": "SWAP5"
    },
    "4429": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4431": {
      "op": "SWAP4"
    },
    "4432": {
      "op": "SWAP1"
    },
    "4433": {
      "op": "SWAP4"
    },
    "4434": {
      "op": "ADD"
    },
    "4435": {
      "op": "CALLDATALOAD"
    },
    "4436": {
      "op": "SWAP4"
    },
    "4437": {
      "op": "POP"
    },
    "4438": {
      "op": "POP"
    },
    "4439": {
      "op": "POP"
    },
    "4440": {
      "jump": "o",
      "op": "JUMP"
    },
    "4441": {
      "op": "JUMPDEST"
    },
    "4442": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4444": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4446": {
      "op": "DUP3"
    },
    "4447": {
      "op": "DUP5"
    },
    "4448": {
      "op": "SUB"
    },
    "4449": {
      "op": "SLT"
    },
    "4450": {
      "op": "ISZERO"
    },
    "4451": {
      "op": "PUSH2",
      "value": "0x116B"
    },
    "4454": {
      "op": "JUMPI"
    },
    "4455": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4457": {
      "op": "DUP1"
    },
    "4458": {
      "op": "REVERT"
    },
    "4459": {
      "op": "JUMPDEST"
    },
    "4460": {
      "op": "PUSH2",
      "value": "0x78D"
    },
    "4463": {
      "op": "DUP3"
    },
    "4464": {
      "op": "PUSH2",
      "value": "0x1116"
    },
    "4467": {
      "jump": "i",
      "op": "JUMP"
    },
    "4468": {
      "op": "JUMPDEST"
    },
    "4469": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4471": {
      "op": "DUP1"
    },
    "4472": {
      "op": "DUP3"
    },
    "4473": {
      "op": "MSTORE"
    },
    "4474": {
      "op": "DUP3"
    },
    "4475": {
      "op": "MLOAD"
    },
    "4476": {
      "op": "DUP3"
    },
    "4477": {
      "op": "DUP3"
    },
    "4478": {
      "op": "ADD"
    },
    "4479": {
      "op": "DUP2"
    },
    "4480": {
      "op": "SWAP1"
    },
    "4481": {
      "op": "MSTORE"
    },
    "4482": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4484": {
      "op": "SWAP2"
    },
    "4485": {
      "op": "SWAP1"
    },
    "4486": {
      "op": "DUP5"
    },
    "4487": {
      "op": "DUP3"
    },
    "4488": {
      "op": "ADD"
    },
    "4489": {
      "op": "SWAP1"
    },
    "4490": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4492": {
      "op": "DUP6"
    },
    "4493": {
      "op": "ADD"
    },
    "4494": {
      "op": "SWAP1"
    },
    "4495": {
      "op": "DUP5"
    },
    "4496": {
      "op": "JUMPDEST"
    },
    "4497": {
      "op": "DUP2"
    },
    "4498": {
      "op": "DUP2"
    },
    "4499": {
      "op": "LT"
    },
    "4500": {
      "op": "ISZERO"
    },
    "4501": {
      "op": "PUSH2",
      "value": "0x11AC"
    },
    "4504": {
      "op": "JUMPI"
    },
    "4505": {
      "op": "DUP4"
    },
    "4506": {
      "op": "MLOAD"
    },
    "4507": {
      "op": "DUP4"
    },
    "4508": {
      "op": "MSTORE"
    },
    "4509": {
      "op": "SWAP3"
    },
    "4510": {
      "op": "DUP5"
    },
    "4511": {
      "op": "ADD"
    },
    "4512": {
      "op": "SWAP3"
    },
    "4513": {
      "op": "SWAP2"
    },
    "4514": {
      "op": "DUP5"
    },
    "4515": {
      "op": "ADD"
    },
    "4516": {
      "op": "SWAP2"
    },
    "4517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4519": {
      "op": "ADD"
    },
    "4520": {
      "op": "PUSH2",
      "value": "0x1190"
    },
    "4523": {
      "op": "JUMP"
    },
    "4524": {
      "op": "JUMPDEST"
    },
    "4525": {
      "op": "POP"
    },
    "4526": {
      "op": "SWAP1"
    },
    "4527": {
      "op": "SWAP7"
    },
    "4528": {
      "op": "SWAP6"
    },
    "4529": {
      "op": "POP"
    },
    "4530": {
      "op": "POP"
    },
    "4531": {
      "op": "POP"
    },
    "4532": {
      "op": "POP"
    },
    "4533": {
      "op": "POP"
    },
    "4534": {
      "op": "POP"
    },
    "4535": {
      "jump": "o",
      "op": "JUMP"
    },
    "4536": {
      "op": "JUMPDEST"
    },
    "4537": {
      "op": "DUP1"
    },
    "4538": {
      "op": "CALLDATALOAD"
    },
    "4539": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4541": {
      "op": "DUP2"
    },
    "4542": {
      "op": "AND"
    },
    "4543": {
      "op": "DUP2"
    },
    "4544": {
      "op": "EQ"
    },
    "4545": {
      "op": "PUSH2",
      "value": "0x112A"
    },
    "4548": {
      "op": "JUMPI"
    },
    "4549": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4551": {
      "op": "DUP1"
    },
    "4552": {
      "op": "REVERT"
    },
    "4553": {
      "op": "JUMPDEST"
    },
    "4554": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4556": {
      "op": "DUP1"
    },
    "4557": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4559": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4561": {
      "op": "DUP5"
    },
    "4562": {
      "op": "DUP7"
    },
    "4563": {
      "op": "SUB"
    },
    "4564": {
      "op": "SLT"
    },
    "4565": {
      "op": "ISZERO"
    },
    "4566": {
      "op": "PUSH2",
      "value": "0x11DE"
    },
    "4569": {
      "op": "JUMPI"
    },
    "4570": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4572": {
      "op": "DUP1"
    },
    "4573": {
      "op": "REVERT"
    },
    "4574": {
      "op": "JUMPDEST"
    },
    "4575": {
      "op": "PUSH2",
      "value": "0x11E7"
    },
    "4578": {
      "op": "DUP5"
    },
    "4579": {
      "op": "PUSH2",
      "value": "0x1116"
    },
    "4582": {
      "jump": "i",
      "op": "JUMP"
    },
    "4583": {
      "op": "JUMPDEST"
    },
    "4584": {
      "op": "SWAP3"
    },
    "4585": {
      "op": "POP"
    },
    "4586": {
      "op": "PUSH2",
      "value": "0x11F5"
    },
    "4589": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4591": {
      "op": "DUP6"
    },
    "4592": {
      "op": "ADD"
    },
    "4593": {
      "op": "PUSH2",
      "value": "0x11B8"
    },
    "4596": {
      "jump": "i",
      "op": "JUMP"
    },
    "4597": {
      "op": "JUMPDEST"
    },
    "4598": {
      "op": "SWAP2"
    },
    "4599": {
      "op": "POP"
    },
    "4600": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4602": {
      "op": "DUP5"
    },
    "4603": {
      "op": "ADD"
    },
    "4604": {
      "op": "CALLDATALOAD"
    },
    "4605": {
      "op": "SWAP1"
    },
    "4606": {
      "op": "POP"
    },
    "4607": {
      "op": "SWAP3"
    },
    "4608": {
      "op": "POP"
    },
    "4609": {
      "op": "SWAP3"
    },
    "4610": {
      "op": "POP"
    },
    "4611": {
      "op": "SWAP3"
    },
    "4612": {
      "jump": "o",
      "op": "JUMP"
    },
    "4613": {
      "op": "JUMPDEST"
    },
    "4614": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4616": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4618": {
      "op": "DUP3"
    },
    "4619": {
      "op": "DUP5"
    },
    "4620": {
      "op": "SUB"
    },
    "4621": {
      "op": "SLT"
    },
    "4622": {
      "op": "ISZERO"
    },
    "4623": {
      "op": "PUSH2",
      "value": "0x1217"
    },
    "4626": {
      "op": "JUMPI"
    },
    "4627": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4629": {
      "op": "DUP1"
    },
    "4630": {
      "op": "REVERT"
    },
    "4631": {
      "op": "JUMPDEST"
    },
    "4632": {
      "op": "POP"
    },
    "4633": {
      "op": "CALLDATALOAD"
    },
    "4634": {
      "op": "SWAP2"
    },
    "4635": {
      "op": "SWAP1"
    },
    "4636": {
      "op": "POP"
    },
    "4637": {
      "jump": "o",
      "op": "JUMP"
    },
    "4638": {
      "op": "JUMPDEST"
    },
    "4639": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4641": {
      "op": "DUP1"
    },
    "4642": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4644": {
      "op": "DUP4"
    },
    "4645": {
      "op": "DUP6"
    },
    "4646": {
      "op": "SUB"
    },
    "4647": {
      "op": "SLT"
    },
    "4648": {
      "op": "ISZERO"
    },
    "4649": {
      "op": "PUSH2",
      "value": "0x1231"
    },
    "4652": {
      "op": "JUMPI"
    },
    "4653": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4655": {
      "op": "DUP1"
    },
    "4656": {
      "op": "REVERT"
    },
    "4657": {
      "op": "JUMPDEST"
    },
    "4658": {
      "op": "PUSH2",
      "value": "0x123A"
    },
    "4661": {
      "op": "DUP4"
    },
    "4662": {
      "op": "PUSH2",
      "value": "0x1116"
    },
    "4665": {
      "jump": "i",
      "op": "JUMP"
    },
    "4666": {
      "op": "JUMPDEST"
    },
    "4667": {
      "op": "SWAP2"
    },
    "4668": {
      "op": "POP"
    },
    "4669": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4671": {
      "op": "DUP4"
    },
    "4672": {
      "op": "ADD"
    },
    "4673": {
      "op": "CALLDATALOAD"
    },
    "4674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4678": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4680": {
      "op": "SHL"
    },
    "4681": {
      "op": "SUB"
    },
    "4682": {
      "op": "DUP2"
    },
    "4683": {
      "op": "AND"
    },
    "4684": {
      "op": "DUP2"
    },
    "4685": {
      "op": "EQ"
    },
    "4686": {
      "op": "PUSH2",
      "value": "0x1256"
    },
    "4689": {
      "op": "JUMPI"
    },
    "4690": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4692": {
      "op": "DUP1"
    },
    "4693": {
      "op": "REVERT"
    },
    "4694": {
      "op": "JUMPDEST"
    },
    "4695": {
      "op": "DUP1"
    },
    "4696": {
      "op": "SWAP2"
    },
    "4697": {
      "op": "POP"
    },
    "4698": {
      "op": "POP"
    },
    "4699": {
      "op": "SWAP3"
    },
    "4700": {
      "op": "POP"
    },
    "4701": {
      "op": "SWAP3"
    },
    "4702": {
      "op": "SWAP1"
    },
    "4703": {
      "op": "POP"
    },
    "4704": {
      "jump": "o",
      "op": "JUMP"
    },
    "4705": {
      "op": "JUMPDEST"
    },
    "4706": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4711": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4713": {
      "op": "SHL"
    },
    "4714": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4716": {
      "op": "MSTORE"
    },
    "4717": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "4719": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4721": {
      "op": "MSTORE"
    },
    "4722": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4724": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4726": {
      "op": "REVERT"
    },
    "4727": {
      "op": "JUMPDEST"
    },
    "4728": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4730": {
      "op": "MLOAD"
    },
    "4731": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4733": {
      "op": "DUP3"
    },
    "4734": {
      "op": "ADD"
    },
    "4735": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4737": {
      "op": "NOT"
    },
    "4738": {
      "op": "AND"
    },
    "4739": {
      "op": "DUP2"
    },
    "4740": {
      "op": "ADD"
    },
    "4741": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4750": {
      "op": "DUP2"
    },
    "4751": {
      "op": "GT"
    },
    "4752": {
      "op": "DUP3"
    },
    "4753": {
      "op": "DUP3"
    },
    "4754": {
      "op": "LT"
    },
    "4755": {
      "op": "OR"
    },
    "4756": {
      "op": "ISZERO"
    },
    "4757": {
      "op": "PUSH2",
      "value": "0x12A0"
    },
    "4760": {
      "op": "JUMPI"
    },
    "4761": {
      "op": "PUSH2",
      "value": "0x12A0"
    },
    "4764": {
      "op": "PUSH2",
      "value": "0x1261"
    },
    "4767": {
      "jump": "i",
      "op": "JUMP"
    },
    "4768": {
      "op": "JUMPDEST"
    },
    "4769": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4771": {
      "op": "MSTORE"
    },
    "4772": {
      "op": "SWAP2"
    },
    "4773": {
      "op": "SWAP1"
    },
    "4774": {
      "op": "POP"
    },
    "4775": {
      "jump": "o",
      "op": "JUMP"
    },
    "4776": {
      "op": "JUMPDEST"
    },
    "4777": {
      "op": "DUP1"
    },
    "4778": {
      "op": "CALLDATALOAD"
    },
    "4779": {
      "op": "DUP1"
    },
    "4780": {
      "op": "ISZERO"
    },
    "4781": {
      "op": "ISZERO"
    },
    "4782": {
      "op": "DUP2"
    },
    "4783": {
      "op": "EQ"
    },
    "4784": {
      "op": "PUSH2",
      "value": "0x112A"
    },
    "4787": {
      "op": "JUMPI"
    },
    "4788": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4790": {
      "op": "DUP1"
    },
    "4791": {
      "op": "REVERT"
    },
    "4792": {
      "op": "JUMPDEST"
    },
    "4793": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4795": {
      "op": "DUP3"
    },
    "4796": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4798": {
      "op": "DUP4"
    },
    "4799": {
      "op": "ADD"
    },
    "4800": {
      "op": "SLT"
    },
    "4801": {
      "op": "PUSH2",
      "value": "0x12C9"
    },
    "4804": {
      "op": "JUMPI"
    },
    "4805": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4807": {
      "op": "DUP1"
    },
    "4808": {
      "op": "REVERT"
    },
    "4809": {
      "op": "JUMPDEST"
    },
    "4810": {
      "op": "DUP2"
    },
    "4811": {
      "op": "CALLDATALOAD"
    },
    "4812": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4814": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4823": {
      "op": "DUP3"
    },
    "4824": {
      "op": "GT"
    },
    "4825": {
      "op": "ISZERO"
    },
    "4826": {
      "op": "PUSH2",
      "value": "0x12E5"
    },
    "4829": {
      "op": "JUMPI"
    },
    "4830": {
      "op": "PUSH2",
      "value": "0x12E5"
    },
    "4833": {
      "op": "PUSH2",
      "value": "0x1261"
    },
    "4836": {
      "jump": "i",
      "op": "JUMP"
    },
    "4837": {
      "op": "JUMPDEST"
    },
    "4838": {
      "op": "DUP2"
    },
    "4839": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "4841": {
      "op": "SHL"
    },
    "4842": {
      "op": "PUSH2",
      "value": "0x12F4"
    },
    "4845": {
      "op": "DUP3"
    },
    "4846": {
      "op": "DUP3"
    },
    "4847": {
      "op": "ADD"
    },
    "4848": {
      "op": "PUSH2",
      "value": "0x1277"
    },
    "4851": {
      "jump": "i",
      "op": "JUMP"
    },
    "4852": {
      "op": "JUMPDEST"
    },
    "4853": {
      "op": "SWAP3"
    },
    "4854": {
      "op": "DUP4"
    },
    "4855": {
      "op": "MSTORE"
    },
    "4856": {
      "op": "DUP5"
    },
    "4857": {
      "op": "DUP2"
    },
    "4858": {
      "op": "ADD"
    },
    "4859": {
      "op": "DUP3"
    },
    "4860": {
      "op": "ADD"
    },
    "4861": {
      "op": "SWAP3"
    },
    "4862": {
      "op": "DUP3"
    },
    "4863": {
      "op": "DUP2"
    },
    "4864": {
      "op": "ADD"
    },
    "4865": {
      "op": "SWAP1"
    },
    "4866": {
      "op": "DUP8"
    },
    "4867": {
      "op": "DUP6"
    },
    "4868": {
      "op": "GT"
    },
    "4869": {
      "op": "ISZERO"
    },
    "4870": {
      "op": "PUSH2",
      "value": "0x130E"
    },
    "4873": {
      "op": "JUMPI"
    },
    "4874": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4876": {
      "op": "DUP1"
    },
    "4877": {
      "op": "REVERT"
    },
    "4878": {
      "op": "JUMPDEST"
    },
    "4879": {
      "op": "DUP4"
    },
    "4880": {
      "op": "DUP8"
    },
    "4881": {
      "op": "ADD"
    },
    "4882": {
      "op": "SWAP3"
    },
    "4883": {
      "op": "POP"
    },
    "4884": {
      "op": "JUMPDEST"
    },
    "4885": {
      "op": "DUP5"
    },
    "4886": {
      "op": "DUP4"
    },
    "4887": {
      "op": "LT"
    },
    "4888": {
      "op": "ISZERO"
    },
    "4889": {
      "op": "PUSH2",
      "value": "0x132D"
    },
    "4892": {
      "op": "JUMPI"
    },
    "4893": {
      "op": "DUP3"
    },
    "4894": {
      "op": "CALLDATALOAD"
    },
    "4895": {
      "op": "DUP3"
    },
    "4896": {
      "op": "MSTORE"
    },
    "4897": {
      "op": "SWAP2"
    },
    "4898": {
      "op": "DUP4"
    },
    "4899": {
      "op": "ADD"
    },
    "4900": {
      "op": "SWAP2"
    },
    "4901": {
      "op": "SWAP1"
    },
    "4902": {
      "op": "DUP4"
    },
    "4903": {
      "op": "ADD"
    },
    "4904": {
      "op": "SWAP1"
    },
    "4905": {
      "op": "PUSH2",
      "value": "0x1314"
    },
    "4908": {
      "op": "JUMP"
    },
    "4909": {
      "op": "JUMPDEST"
    },
    "4910": {
      "op": "SWAP8"
    },
    "4911": {
      "op": "SWAP7"
    },
    "4912": {
      "op": "POP"
    },
    "4913": {
      "op": "POP"
    },
    "4914": {
      "op": "POP"
    },
    "4915": {
      "op": "POP"
    },
    "4916": {
      "op": "POP"
    },
    "4917": {
      "op": "POP"
    },
    "4918": {
      "op": "POP"
    },
    "4919": {
      "jump": "o",
      "op": "JUMP"
    },
    "4920": {
      "op": "JUMPDEST"
    },
    "4921": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4923": {
      "op": "DUP1"
    },
    "4924": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4926": {
      "op": "DUP1"
    },
    "4927": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4929": {
      "op": "DUP1"
    },
    "4930": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4932": {
      "op": "DUP1"
    },
    "4933": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "4936": {
      "op": "DUP10"
    },
    "4937": {
      "op": "DUP12"
    },
    "4938": {
      "op": "SUB"
    },
    "4939": {
      "op": "SLT"
    },
    "4940": {
      "op": "ISZERO"
    },
    "4941": {
      "op": "PUSH2",
      "value": "0x1355"
    },
    "4944": {
      "op": "JUMPI"
    },
    "4945": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4947": {
      "op": "DUP1"
    },
    "4948": {
      "op": "REVERT"
    },
    "4949": {
      "op": "JUMPDEST"
    },
    "4950": {
      "op": "DUP9"
    },
    "4951": {
      "op": "CALLDATALOAD"
    },
    "4952": {
      "op": "SWAP8"
    },
    "4953": {
      "op": "POP"
    },
    "4954": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4956": {
      "op": "DUP1"
    },
    "4957": {
      "op": "DUP11"
    },
    "4958": {
      "op": "ADD"
    },
    "4959": {
      "op": "CALLDATALOAD"
    },
    "4960": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4969": {
      "op": "DUP1"
    },
    "4970": {
      "op": "DUP3"
    },
    "4971": {
      "op": "GT"
    },
    "4972": {
      "op": "ISZERO"
    },
    "4973": {
      "op": "PUSH2",
      "value": "0x1375"
    },
    "4976": {
      "op": "JUMPI"
    },
    "4977": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4979": {
      "op": "DUP1"
    },
    "4980": {
      "op": "REVERT"
    },
    "4981": {
      "op": "JUMPDEST"
    },
    "4982": {
      "op": "DUP2"
    },
    "4983": {
      "op": "DUP13"
    },
    "4984": {
      "op": "ADD"
    },
    "4985": {
      "op": "SWAP2"
    },
    "4986": {
      "op": "POP"
    },
    "4987": {
      "op": "DUP13"
    },
    "4988": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4990": {
      "op": "DUP4"
    },
    "4991": {
      "op": "ADD"
    },
    "4992": {
      "op": "SLT"
    },
    "4993": {
      "op": "PUSH2",
      "value": "0x1389"
    },
    "4996": {
      "op": "JUMPI"
    },
    "4997": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4999": {
      "op": "DUP1"
    },
    "5000": {
      "op": "REVERT"
    },
    "5001": {
      "op": "JUMPDEST"
    },
    "5002": {
      "op": "DUP2"
    },
    "5003": {
      "op": "CALLDATALOAD"
    },
    "5004": {
      "op": "DUP2"
    },
    "5005": {
      "op": "DUP2"
    },
    "5006": {
      "op": "GT"
    },
    "5007": {
      "op": "ISZERO"
    },
    "5008": {
      "op": "PUSH2",
      "value": "0x139B"
    },
    "5011": {
      "op": "JUMPI"
    },
    "5012": {
      "op": "PUSH2",
      "value": "0x139B"
    },
    "5015": {
      "op": "PUSH2",
      "value": "0x1261"
    },
    "5018": {
      "jump": "i",
      "op": "JUMP"
    },
    "5019": {
      "op": "JUMPDEST"
    },
    "5020": {
      "op": "PUSH2",
      "value": "0x13AD"
    },
    "5023": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5025": {
      "op": "DUP3"
    },
    "5026": {
      "op": "ADD"
    },
    "5027": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5029": {
      "op": "NOT"
    },
    "5030": {
      "op": "AND"
    },
    "5031": {
      "op": "DUP6"
    },
    "5032": {
      "op": "ADD"
    },
    "5033": {
      "op": "PUSH2",
      "value": "0x1277"
    },
    "5036": {
      "jump": "i",
      "op": "JUMP"
    },
    "5037": {
      "op": "JUMPDEST"
    },
    "5038": {
      "op": "DUP2"
    },
    "5039": {
      "op": "DUP2"
    },
    "5040": {
      "op": "MSTORE"
    },
    "5041": {
      "op": "DUP15"
    },
    "5042": {
      "op": "DUP6"
    },
    "5043": {
      "op": "DUP4"
    },
    "5044": {
      "op": "DUP7"
    },
    "5045": {
      "op": "ADD"
    },
    "5046": {
      "op": "ADD"
    },
    "5047": {
      "op": "GT"
    },
    "5048": {
      "op": "ISZERO"
    },
    "5049": {
      "op": "PUSH2",
      "value": "0x13C1"
    },
    "5052": {
      "op": "JUMPI"
    },
    "5053": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5055": {
      "op": "DUP1"
    },
    "5056": {
      "op": "REVERT"
    },
    "5057": {
      "op": "JUMPDEST"
    },
    "5058": {
      "op": "DUP2"
    },
    "5059": {
      "op": "DUP6"
    },
    "5060": {
      "op": "DUP6"
    },
    "5061": {
      "op": "ADD"
    },
    "5062": {
      "op": "DUP7"
    },
    "5063": {
      "op": "DUP4"
    },
    "5064": {
      "op": "ADD"
    },
    "5065": {
      "op": "CALLDATACOPY"
    },
    "5066": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5068": {
      "op": "DUP6"
    },
    "5069": {
      "op": "DUP4"
    },
    "5070": {
      "op": "DUP4"
    },
    "5071": {
      "op": "ADD"
    },
    "5072": {
      "op": "ADD"
    },
    "5073": {
      "op": "MSTORE"
    },
    "5074": {
      "op": "DUP1"
    },
    "5075": {
      "op": "SWAP12"
    },
    "5076": {
      "op": "POP"
    },
    "5077": {
      "op": "POP"
    },
    "5078": {
      "op": "POP"
    },
    "5079": {
      "op": "PUSH2",
      "value": "0x13E2"
    },
    "5082": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5084": {
      "op": "DUP14"
    },
    "5085": {
      "op": "ADD"
    },
    "5086": {
      "op": "PUSH2",
      "value": "0x12A8"
    },
    "5089": {
      "jump": "i",
      "op": "JUMP"
    },
    "5090": {
      "op": "JUMPDEST"
    },
    "5091": {
      "op": "SWAP9"
    },
    "5092": {
      "op": "POP"
    },
    "5093": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5095": {
      "op": "DUP13"
    },
    "5096": {
      "op": "ADD"
    },
    "5097": {
      "op": "CALLDATALOAD"
    },
    "5098": {
      "op": "SWAP3"
    },
    "5099": {
      "op": "POP"
    },
    "5100": {
      "op": "DUP1"
    },
    "5101": {
      "op": "DUP4"
    },
    "5102": {
      "op": "GT"
    },
    "5103": {
      "op": "ISZERO"
    },
    "5104": {
      "op": "PUSH2",
      "value": "0x13F8"
    },
    "5107": {
      "op": "JUMPI"
    },
    "5108": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5110": {
      "op": "DUP1"
    },
    "5111": {
      "op": "REVERT"
    },
    "5112": {
      "op": "JUMPDEST"
    },
    "5113": {
      "op": "POP"
    },
    "5114": {
      "op": "POP"
    },
    "5115": {
      "op": "PUSH2",
      "value": "0x1406"
    },
    "5118": {
      "op": "DUP12"
    },
    "5119": {
      "op": "DUP3"
    },
    "5120": {
      "op": "DUP13"
    },
    "5121": {
      "op": "ADD"
    },
    "5122": {
      "op": "PUSH2",
      "value": "0x12B8"
    },
    "5125": {
      "jump": "i",
      "op": "JUMP"
    },
    "5126": {
      "op": "JUMPDEST"
    },
    "5127": {
      "op": "SWAP6"
    },
    "5128": {
      "op": "POP"
    },
    "5129": {
      "op": "POP"
    },
    "5130": {
      "op": "PUSH2",
      "value": "0x1415"
    },
    "5133": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5135": {
      "op": "DUP11"
    },
    "5136": {
      "op": "ADD"
    },
    "5137": {
      "op": "PUSH2",
      "value": "0x1116"
    },
    "5140": {
      "jump": "i",
      "op": "JUMP"
    },
    "5141": {
      "op": "JUMPDEST"
    },
    "5142": {
      "op": "SWAP4"
    },
    "5143": {
      "op": "POP"
    },
    "5144": {
      "op": "PUSH2",
      "value": "0x1423"
    },
    "5147": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5149": {
      "op": "DUP11"
    },
    "5150": {
      "op": "ADD"
    },
    "5151": {
      "op": "PUSH2",
      "value": "0x1116"
    },
    "5154": {
      "jump": "i",
      "op": "JUMP"
    },
    "5155": {
      "op": "JUMPDEST"
    },
    "5156": {
      "op": "SWAP3"
    },
    "5157": {
      "op": "POP"
    },
    "5158": {
      "op": "PUSH2",
      "value": "0x1431"
    },
    "5161": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5163": {
      "op": "DUP11"
    },
    "5164": {
      "op": "ADD"
    },
    "5165": {
      "op": "PUSH2",
      "value": "0x1116"
    },
    "5168": {
      "jump": "i",
      "op": "JUMP"
    },
    "5169": {
      "op": "JUMPDEST"
    },
    "5170": {
      "op": "SWAP2"
    },
    "5171": {
      "op": "POP"
    },
    "5172": {
      "op": "PUSH2",
      "value": "0x143F"
    },
    "5175": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5177": {
      "op": "DUP11"
    },
    "5178": {
      "op": "ADD"
    },
    "5179": {
      "op": "PUSH2",
      "value": "0x1116"
    },
    "5182": {
      "jump": "i",
      "op": "JUMP"
    },
    "5183": {
      "op": "JUMPDEST"
    },
    "5184": {
      "op": "SWAP1"
    },
    "5185": {
      "op": "POP"
    },
    "5186": {
      "op": "SWAP3"
    },
    "5187": {
      "op": "SWAP6"
    },
    "5188": {
      "op": "SWAP9"
    },
    "5189": {
      "op": "POP"
    },
    "5190": {
      "op": "SWAP3"
    },
    "5191": {
      "op": "SWAP6"
    },
    "5192": {
      "op": "SWAP9"
    },
    "5193": {
      "op": "SWAP1"
    },
    "5194": {
      "op": "SWAP4"
    },
    "5195": {
      "op": "SWAP7"
    },
    "5196": {
      "op": "POP"
    },
    "5197": {
      "jump": "o",
      "op": "JUMP"
    },
    "5198": {
      "op": "JUMPDEST"
    },
    "5199": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5201": {
      "op": "DUP1"
    },
    "5202": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5204": {
      "op": "DUP4"
    },
    "5205": {
      "op": "DUP6"
    },
    "5206": {
      "op": "SUB"
    },
    "5207": {
      "op": "SLT"
    },
    "5208": {
      "op": "ISZERO"
    },
    "5209": {
      "op": "PUSH2",
      "value": "0x1461"
    },
    "5212": {
      "op": "JUMPI"
    },
    "5213": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5215": {
      "op": "DUP1"
    },
    "5216": {
      "op": "REVERT"
    },
    "5217": {
      "op": "JUMPDEST"
    },
    "5218": {
      "op": "PUSH2",
      "value": "0x146A"
    },
    "5221": {
      "op": "DUP4"
    },
    "5222": {
      "op": "PUSH2",
      "value": "0x1116"
    },
    "5225": {
      "jump": "i",
      "op": "JUMP"
    },
    "5226": {
      "op": "JUMPDEST"
    },
    "5227": {
      "op": "SWAP2"
    },
    "5228": {
      "op": "POP"
    },
    "5229": {
      "op": "PUSH2",
      "value": "0x1478"
    },
    "5232": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5234": {
      "op": "DUP5"
    },
    "5235": {
      "op": "ADD"
    },
    "5236": {
      "op": "PUSH2",
      "value": "0x11B8"
    },
    "5239": {
      "jump": "i",
      "op": "JUMP"
    },
    "5240": {
      "op": "JUMPDEST"
    },
    "5241": {
      "op": "SWAP1"
    },
    "5242": {
      "op": "POP"
    },
    "5243": {
      "op": "SWAP3"
    },
    "5244": {
      "op": "POP"
    },
    "5245": {
      "op": "SWAP3"
    },
    "5246": {
      "op": "SWAP1"
    },
    "5247": {
      "op": "POP"
    },
    "5248": {
      "jump": "o",
      "op": "JUMP"
    },
    "5249": {
      "op": "JUMPDEST"
    },
    "5250": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5255": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5257": {
      "op": "SHL"
    },
    "5258": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5260": {
      "op": "MSTORE"
    },
    "5261": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "5263": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5265": {
      "op": "MSTORE"
    },
    "5266": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5268": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5270": {
      "op": "REVERT"
    },
    "5271": {
      "op": "JUMPDEST"
    },
    "5272": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5277": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5279": {
      "op": "SHL"
    },
    "5280": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5282": {
      "op": "MSTORE"
    },
    "5283": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "5285": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5287": {
      "op": "MSTORE"
    },
    "5288": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5290": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5292": {
      "op": "REVERT"
    },
    "5293": {
      "op": "JUMPDEST"
    },
    "5294": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5296": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5298": {
      "op": "DUP3"
    },
    "5299": {
      "op": "AND"
    },
    "5300": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5302": {
      "op": "DUP2"
    },
    "5303": {
      "op": "EQ"
    },
    "5304": {
      "op": "ISZERO"
    },
    "5305": {
      "op": "PUSH2",
      "value": "0x14C4"
    },
    "5308": {
      "op": "JUMPI"
    },
    "5309": {
      "op": "PUSH2",
      "value": "0x14C4"
    },
    "5312": {
      "op": "PUSH2",
      "value": "0x1497"
    },
    "5315": {
      "jump": "i",
      "op": "JUMP"
    },
    "5316": {
      "op": "JUMPDEST"
    },
    "5317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5319": {
      "op": "ADD"
    },
    "5320": {
      "op": "SWAP3"
    },
    "5321": {
      "op": "SWAP2"
    },
    "5322": {
      "op": "POP"
    },
    "5323": {
      "op": "POP"
    },
    "5324": {
      "jump": "o",
      "op": "JUMP"
    },
    "5325": {
      "op": "JUMPDEST"
    },
    "5326": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5328": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "5333": {
      "op": "DUP1"
    },
    "5334": {
      "op": "DUP4"
    },
    "5335": {
      "op": "AND"
    },
    "5336": {
      "op": "DUP2"
    },
    "5337": {
      "op": "DUP2"
    },
    "5338": {
      "op": "EQ"
    },
    "5339": {
      "op": "ISZERO"
    },
    "5340": {
      "op": "PUSH2",
      "value": "0x14E7"
    },
    "5343": {
      "op": "JUMPI"
    },
    "5344": {
      "op": "PUSH2",
      "value": "0x14E7"
    },
    "5347": {
      "op": "PUSH2",
      "value": "0x1497"
    },
    "5350": {
      "jump": "i",
      "op": "JUMP"
    },
    "5351": {
      "op": "JUMPDEST"
    },
    "5352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5354": {
      "op": "ADD"
    },
    "5355": {
      "op": "SWAP4"
    },
    "5356": {
      "op": "SWAP3"
    },
    "5357": {
      "op": "POP"
    },
    "5358": {
      "op": "POP"
    },
    "5359": {
      "op": "POP"
    },
    "5360": {
      "jump": "o",
      "op": "JUMP"
    },
    "5361": {
      "op": "JUMPDEST"
    },
    "5362": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5364": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5366": {
      "op": "DUP3"
    },
    "5367": {
      "op": "AND"
    },
    "5368": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5370": {
      "op": "DUP5"
    },
    "5371": {
      "op": "AND"
    },
    "5372": {
      "op": "DUP1"
    },
    "5373": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5375": {
      "op": "SUB"
    },
    "5376": {
      "op": "DUP3"
    },
    "5377": {
      "op": "GT"
    },
    "5378": {
      "op": "ISZERO"
    },
    "5379": {
      "op": "PUSH2",
      "value": "0x150E"
    },
    "5382": {
      "op": "JUMPI"
    },
    "5383": {
      "op": "PUSH2",
      "value": "0x150E"
    },
    "5386": {
      "op": "PUSH2",
      "value": "0x1497"
    },
    "5389": {
      "jump": "i",
      "op": "JUMP"
    },
    "5390": {
      "op": "JUMPDEST"
    },
    "5391": {
      "op": "ADD"
    },
    "5392": {
      "op": "SWAP4"
    },
    "5393": {
      "op": "SWAP3"
    },
    "5394": {
      "op": "POP"
    },
    "5395": {
      "op": "POP"
    },
    "5396": {
      "op": "POP"
    },
    "5397": {
      "jump": "o",
      "op": "JUMP"
    },
    "5398": {
      "op": "JUMPDEST"
    },
    "5399": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5401": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "5404": {
      "op": "DUP11"
    },
    "5405": {
      "op": "DUP4"
    },
    "5406": {
      "op": "MSTORE"
    },
    "5407": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5409": {
      "op": "DUP2"
    },
    "5410": {
      "op": "DUP2"
    },
    "5411": {
      "op": "DUP6"
    },
    "5412": {
      "op": "ADD"
    },
    "5413": {
      "op": "MSTORE"
    },
    "5414": {
      "op": "DUP11"
    },
    "5415": {
      "op": "MLOAD"
    },
    "5416": {
      "op": "DUP1"
    },
    "5417": {
      "op": "DUP4"
    },
    "5418": {
      "op": "DUP7"
    },
    "5419": {
      "op": "ADD"
    },
    "5420": {
      "op": "MSTORE"
    },
    "5421": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5423": {
      "op": "SWAP3"
    },
    "5424": {
      "op": "POP"
    },
    "5425": {
      "op": "JUMPDEST"
    },
    "5426": {
      "op": "DUP1"
    },
    "5427": {
      "op": "DUP4"
    },
    "5428": {
      "op": "LT"
    },
    "5429": {
      "op": "ISZERO"
    },
    "5430": {
      "op": "PUSH2",
      "value": "0x1550"
    },
    "5433": {
      "op": "JUMPI"
    },
    "5434": {
      "op": "DUP12"
    },
    "5435": {
      "op": "DUP4"
    },
    "5436": {
      "op": "ADD"
    },
    "5437": {
      "op": "DUP3"
    },
    "5438": {
      "op": "ADD"
    },
    "5439": {
      "op": "MLOAD"
    },
    "5440": {
      "op": "DUP6"
    },
    "5441": {
      "op": "DUP5"
    },
    "5442": {
      "op": "ADD"
    },
    "5443": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "5446": {
      "op": "ADD"
    },
    "5447": {
      "op": "MSTORE"
    },
    "5448": {
      "op": "SWAP2"
    },
    "5449": {
      "op": "DUP2"
    },
    "5450": {
      "op": "ADD"
    },
    "5451": {
      "op": "SWAP2"
    },
    "5452": {
      "op": "PUSH2",
      "value": "0x1531"
    },
    "5455": {
      "op": "JUMP"
    },
    "5456": {
      "op": "JUMPDEST"
    },
    "5457": {
      "op": "DUP1"
    },
    "5458": {
      "op": "DUP4"
    },
    "5459": {
      "op": "GT"
    },
    "5460": {
      "op": "ISZERO"
    },
    "5461": {
      "op": "PUSH2",
      "value": "0x1563"
    },
    "5464": {
      "op": "JUMPI"
    },
    "5465": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5467": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "5470": {
      "op": "DUP3"
    },
    "5471": {
      "op": "DUP8"
    },
    "5472": {
      "op": "ADD"
    },
    "5473": {
      "op": "ADD"
    },
    "5474": {
      "op": "MSTORE"
    },
    "5475": {
      "op": "JUMPDEST"
    },
    "5476": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5478": {
      "op": "ADD"
    },
    "5479": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5481": {
      "op": "NOT"
    },
    "5482": {
      "op": "AND"
    },
    "5483": {
      "op": "DUP5"
    },
    "5484": {
      "op": "ADD"
    },
    "5485": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "5488": {
      "op": "ADD"
    },
    "5489": {
      "op": "SWAP3"
    },
    "5490": {
      "op": "POP"
    },
    "5491": {
      "op": "PUSH2",
      "value": "0x1587"
    },
    "5494": {
      "op": "SWAP2"
    },
    "5495": {
      "op": "POP"
    },
    "5496": {
      "op": "POP"
    },
    "5497": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5499": {
      "op": "DUP4"
    },
    "5500": {
      "op": "ADD"
    },
    "5501": {
      "op": "DUP10"
    },
    "5502": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "5507": {
      "op": "AND"
    },
    "5508": {
      "op": "SWAP1"
    },
    "5509": {
      "op": "MSTORE"
    },
    "5510": {
      "op": "JUMP"
    },
    "5511": {
      "op": "JUMPDEST"
    },
    "5512": {
      "op": "SWAP6"
    },
    "5513": {
      "op": "ISZERO"
    },
    "5514": {
      "op": "ISZERO"
    },
    "5515": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5517": {
      "op": "DUP3"
    },
    "5518": {
      "op": "ADD"
    },
    "5519": {
      "op": "MSTORE"
    },
    "5520": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "5525": {
      "op": "SWAP5"
    },
    "5526": {
      "op": "DUP6"
    },
    "5527": {
      "op": "AND"
    },
    "5528": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5530": {
      "op": "DUP3"
    },
    "5531": {
      "op": "ADD"
    },
    "5532": {
      "op": "MSTORE"
    },
    "5533": {
      "op": "SWAP3"
    },
    "5534": {
      "op": "DUP5"
    },
    "5535": {
      "op": "AND"
    },
    "5536": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5538": {
      "op": "DUP5"
    },
    "5539": {
      "op": "ADD"
    },
    "5540": {
      "op": "MSTORE"
    },
    "5541": {
      "op": "SWAP1"
    },
    "5542": {
      "op": "DUP4"
    },
    "5543": {
      "op": "AND"
    },
    "5544": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5546": {
      "op": "DUP4"
    },
    "5547": {
      "op": "ADD"
    },
    "5548": {
      "op": "MSTORE"
    },
    "5549": {
      "op": "SWAP1"
    },
    "5550": {
      "op": "SWAP2"
    },
    "5551": {
      "op": "AND"
    },
    "5552": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5554": {
      "op": "SWAP1"
    },
    "5555": {
      "op": "SWAP2"
    },
    "5556": {
      "op": "ADD"
    },
    "5557": {
      "op": "MSTORE"
    },
    "5558": {
      "op": "SWAP4"
    },
    "5559": {
      "op": "SWAP3"
    },
    "5560": {
      "op": "POP"
    },
    "5561": {
      "op": "POP"
    },
    "5562": {
      "op": "POP"
    },
    "5563": {
      "jump": "o",
      "op": "JUMP"
    },
    "5564": {
      "op": "JUMPDEST"
    },
    "5565": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5567": {
      "op": "DUP3"
    },
    "5568": {
      "op": "NOT"
    },
    "5569": {
      "op": "DUP3"
    },
    "5570": {
      "op": "GT"
    },
    "5571": {
      "op": "ISZERO"
    },
    "5572": {
      "op": "PUSH2",
      "value": "0x15CF"
    },
    "5575": {
      "op": "JUMPI"
    },
    "5576": {
      "op": "PUSH2",
      "value": "0x15CF"
    },
    "5579": {
      "op": "PUSH2",
      "value": "0x1497"
    },
    "5582": {
      "jump": "i",
      "op": "JUMP"
    },
    "5583": {
      "op": "JUMPDEST"
    },
    "5584": {
      "op": "POP"
    },
    "5585": {
      "op": "ADD"
    },
    "5586": {
      "op": "SWAP1"
    },
    "5587": {
      "jump": "o",
      "op": "JUMP"
    },
    "5588": {
      "op": "JUMPDEST"
    },
    "5589": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5591": {
      "op": "DUP3"
    },
    "5592": {
      "op": "DUP3"
    },
    "5593": {
      "op": "LT"
    },
    "5594": {
      "op": "ISZERO"
    },
    "5595": {
      "op": "PUSH2",
      "value": "0x15E6"
    },
    "5598": {
      "op": "JUMPI"
    },
    "5599": {
      "op": "PUSH2",
      "value": "0x15E6"
    },
    "5602": {
      "op": "PUSH2",
      "value": "0x1497"
    },
    "5605": {
      "jump": "i",
      "op": "JUMP"
    },
    "5606": {
      "op": "JUMPDEST"
    },
    "5607": {
      "op": "POP"
    },
    "5608": {
      "op": "SUB"
    },
    "5609": {
      "op": "SWAP1"
    },
    "5610": {
      "jump": "o",
      "op": "JUMP"
    },
    "5611": {
      "op": "JUMPDEST"
    },
    "5612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5614": {
      "op": "DUP2"
    },
    "5615": {
      "op": "DUP2"
    },
    "5616": {
      "op": "SHR"
    },
    "5617": {
      "op": "SWAP1"
    },
    "5618": {
      "op": "DUP3"
    },
    "5619": {
      "op": "AND"
    },
    "5620": {
      "op": "DUP1"
    },
    "5621": {
      "op": "PUSH2",
      "value": "0x15FF"
    },
    "5624": {
      "op": "JUMPI"
    },
    "5625": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "5627": {
      "op": "DUP3"
    },
    "5628": {
      "op": "AND"
    },
    "5629": {
      "op": "SWAP2"
    },
    "5630": {
      "op": "POP"
    },
    "5631": {
      "op": "JUMPDEST"
    },
    "5632": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5634": {
      "op": "DUP3"
    },
    "5635": {
      "op": "LT"
    },
    "5636": {
      "op": "DUP2"
    },
    "5637": {
      "op": "EQ"
    },
    "5638": {
      "op": "ISZERO"
    },
    "5639": {
      "op": "PUSH2",
      "value": "0x71F"
    },
    "5642": {
      "op": "JUMPI"
    },
    "5643": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5648": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5650": {
      "op": "SHL"
    },
    "5651": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5653": {
      "op": "MSTORE"
    },
    "5654": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "5656": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5658": {
      "op": "MSTORE"
    },
    "5659": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5661": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5663": {
      "op": "REVERT"
    }
  },
  "sha1": "5f74a06c09356bd0c9dd18737ef12ee883e1da9f",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract SimpleElection {\n    //Structure of an election\n    struct Election {\n        bytes32 name;\n        string description;\n        uint32 id;\n        bool requireRegitration;\n        uint32 startElection;\n        uint32 endElection;\n        uint32 startRegistration;\n        uint32 endRegistration;\n    }\n\n    mapping(bytes32 => uint32) electionsIds; //list of current elections\n    uint32[] currentElections;\n\n    //Structure of candidate standing in an election\n    struct Candidate {\n        bytes32 name; //name of the proposal\n        uint256 voteCount; //votes received\n    }\n\n    //Structure of a voter\n    struct Voter {\n        uint256 weight; // weight is accumulated by delegation\n        bool voted; // if true, that person already voted\n    }\n\n    //Mapping of the elections\n    mapping(uint32 => Election) elections;\n\n    //Mappings of the proposals for every election\n    mapping(uint32 => mapping(uint8 => Candidate)) public candidates;\n\n    mapping(uint32 => mapping(bytes32 => uint8)) public candidatesIds;\n\n    //List of the proposal for every election\n    mapping(uint32 => uint8[]) public candidatesList;\n\n    //Mapping of the voters for every election\n    mapping(uint32 => mapping(address => Voter)) public voters;\n\n    uint32 electionNonce;\n    uint32 electionCount;\n\n    event ElectionCreated(\n        bytes32 name,\n        string description,\n        uint256 electionId,\n        bool requireRegitration,\n        uint32 startElection,\n        uint32 endElection,\n        uint32 startRegistration,\n        uint32 endRegistration\n    );\n    event Voted(\n        uint32 electionId,\n        address voter,\n        uint8 _candidateId,\n        uint256 _weight\n    );\n\n    constructor() {\n        electionNonce = 1;\n        electionCount = 1;\n    }\n\n    //A function that creates an election structure.\n    function createElection(\n        bytes32 _name, //name of the election\n        string memory _description, //a description\n        bool _requireRegitration, //true if is required a registration\n        bytes32[] memory _candidates, //the list of proposals\n        uint32 _startElection, //date of the begin of the election period\n        uint32 _endElection, //date of the end of the election period\n        uint32 _startRegistration, //date of the begin of the registration period\n        uint32 _endRegistration //date of the end of the registration period\n    ) public {\n        require(_candidates.length > 0, \"There should be atleast 1 candidate.\");\n\n        require(\n            !electionExists(_name),\n            \"This election already exists, please select other name\"\n        );\n        uint32 electionId = electionNonce;\n        elections[electionId] = Election(\n            _name,\n            _description,\n            electionId,\n            _requireRegitration,\n            _startElection,\n            _endElection,\n            _startRegistration,\n            _endRegistration\n        );\n        electionsIds[_name] = electionId;\n        currentElections.push(electionId);\n\n        for (uint8 i = 0; i < _candidates.length; i++) {\n            addCandidate(electionId, _candidates[i], i + 1);\n        }\n        emit ElectionCreated(\n            _name,\n            _description,\n            electionId,\n            _requireRegitration,\n            _startElection,\n            _endElection,\n            _startRegistration,\n            _endRegistration\n        );\n        electionNonce++;\n        electionCount++;\n    }\n\n    //Private function to add a candidate\n    function addCandidate(\n        uint32 _electionId,\n        bytes32 _candidateName,\n        uint8 _candidateId\n    ) private {\n        candidates[_electionId][_candidateId] = Candidate(_candidateName, 0);\n        candidatesIds[_electionId][_candidateName] = _candidateId;\n        candidatesList[_electionId].push(_candidateId);\n    }\n\n    //Private vote function for voting a candidate\n    function voterVote(\n        uint32 _electionId, //the election in which vote\n        address _voter, //the voter\n        uint8 _candidateId, //the proposal to vote\n        uint256 _weight //\"how many times\" vote\n    ) private {\n        require(electionExists(_electionId), \"The election doesn't exist\");\n        require(checkElectionOpen(_electionId), \"The election is closed\");\n        if (elections[_electionId].requireRegitration) {\n            require(\n                voterHasRegistred(_electionId, _voter),\n                \"Voter hasn't registered\"\n            );\n        } else {\n            registerVoter(_electionId, _voter);\n        }\n        require(\n            !voterHasVoted(_electionId, _voter),\n            \"Voter has already Voted!\"\n        );\n        require(\n            _weight <= voters[_electionId][_voter].weight,\n            \"Voter do not have so many votes\"\n        );\n        require(\n            candidateExists(_electionId, _candidateId),\n            \"Invalid candidate to Vote!\"\n        );\n\n        //update the vote count of the voted proposal\n        candidates[_electionId][_candidateId].voteCount =\n            candidates[_electionId][_candidateId].voteCount +\n            _weight;\n\n        //subtract the votes to the voter Structure\n        voters[_electionId][_voter].weight =\n            voters[_electionId][_voter].weight -\n            _weight;\n\n        //set the variable voted to true if the voter does not have other votes\n        if (voters[_electionId][_voter].weight == 0) {\n            voters[_electionId][_voter].voted = true;\n        }\n\n        emit Voted(_electionId, _voter, _candidateId, _weight);\n    }\n\n    //Public function to vote\n    function vote(\n        uint32 _electionId, //the election in which vote\n        uint8 _candidateId, //the proposal to vote\n        uint256 _weight //\"how many times\" vote\n    ) public {\n        voterVote(_electionId, msg.sender, _candidateId, _weight);\n    }\n\n    //get list of elections\n    function getCurrentElections() public view returns (bytes32[] memory) {\n        bytes32[] memory result = new bytes32[](currentElections.length);\n        for (uint32 i = 0; i < currentElections.length; i++) {\n            result[i] = elections[currentElections[i]].name;\n        }\n        return result;\n    }\n\n    //get list of proposal of an election\n    function getCandidatesForElection(uint32 _electionId)\n        public\n        view\n        returns (bytes32[] memory)\n    {\n        require(electionExists(_electionId), \"The election doesn't exist\");\n        bytes32[] memory result = new bytes32[](\n            candidatesList[_electionId].length\n        );\n        for (uint8 i = 0; i < candidatesList[_electionId].length; i++)\n            result[i] = candidates[_electionId][candidatesList[_electionId][i]]\n                .name;\n        return result;\n    }\n\n    //register for an election\n    function registerVoter(uint32 _electionId, address voter) private {\n        voters[_electionId][voter].weight = 1;\n    }\n\n    function register(uint32 _electionId) public {\n        require(checkRegistrationOpen(_electionId), \"Registration not open\");\n        registerVoter(_electionId, msg.sender);\n    }\n\n    function checkRegistrationOpen(uint32 _electionId)\n        public\n        view\n        returns (bool)\n    {\n        return ((elections[_electionId].startRegistration <= block.timestamp) &&\n            (elections[_electionId].endRegistration >= block.timestamp));\n    }\n\n    function checkElectionOpen(uint32 _electionId) public view returns (bool) {\n        return ((elections[_electionId].startElection <= block.timestamp) &&\n            (elections[_electionId].endElection >= block.timestamp));\n    }\n\n    function voterHasRegistred(uint32 _electionId, address voter)\n        public\n        view\n        returns (bool)\n    {\n        return ((voters[_electionId][voter].weight != 0) ||\n            (voters[_electionId][voter].voted == true));\n    }\n\n    function voterHasVoted(uint32 _electionId, address voter)\n        public\n        view\n        returns (bool)\n    {\n        return voters[_electionId][voter].voted;\n    }\n\n    function electionExists(bytes32 _electionName) public view returns (bool) {\n        return electionsIds[_electionName] != 0;\n    }\n\n    function electionExists(uint32 _electionId) public view returns (bool) {\n        return elections[_electionId].id != 0;\n    }\n\n    function candidateExists(uint32 _electionId, uint8 _candidateId)\n        public\n        view\n        returns (bool)\n    {\n        return (candidates[_electionId][_candidateId].name != 0);\n    }\n\n    function getCandidateId(uint32 _electionId, bytes32 _candidatename)\n        public\n        view\n        returns (uint8)\n    {\n        return candidatesIds[_electionId][_candidatename];\n    }\n}\n",
  "sourceMap": "57:8677:0:-:0;;;1754:75;;;;;;;;;-1:-1:-1;1778:13:0;:17;;-1:-1:-1;;;;;;1805:17:0;;;;;57:8677;;;-1:-1:-1;57:8677:0;;",
  "sourcePath": "contracts/SimpleElection.sol",
  "type": "contract"
}