{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "name",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "electionId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "requireRegitration",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "startElection",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "endElection",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "startRegistration",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "endRegistration",
          "type": "uint32"
        }
      ],
      "name": "ElectionCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "electionId",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "_candidateId",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_weight",
          "type": "uint256"
        }
      ],
      "name": "Voted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_electionId",
          "type": "uint32"
        },
        {
          "internalType": "uint8",
          "name": "_candidateId",
          "type": "uint8"
        }
      ],
      "name": "candidateExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "candidates",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "name",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "voteCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "candidatesIds",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "candidatesList",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_electionId",
          "type": "uint32"
        }
      ],
      "name": "checkElectionOpen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_electionId",
          "type": "uint32"
        }
      ],
      "name": "checkRegistrationOpen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_name",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "_requireRegitration",
          "type": "bool"
        },
        {
          "internalType": "bytes32[]",
          "name": "_candidates",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint32",
          "name": "_startElection",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "_endElection",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "_startRegistration",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "_endRegistration",
          "type": "uint32"
        }
      ],
      "name": "createElection",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_electionId",
          "type": "uint32"
        }
      ],
      "name": "electionExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_electionName",
          "type": "bytes32"
        }
      ],
      "name": "electionExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_electionId",
          "type": "uint32"
        }
      ],
      "name": "getCandidatesForElection",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentElections",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_electionId",
          "type": "uint32"
        }
      ],
      "name": "register",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_electionId",
          "type": "uint32"
        },
        {
          "internalType": "uint8",
          "name": "_candidateId",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "_weight",
          "type": "uint256"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_electionId",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "voter",
          "type": "address"
        }
      ],
      "name": "voterHasRegistred",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_electionId",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "voter",
          "type": "address"
        }
      ],
      "name": "voterHasVoted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "voters",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "weight",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "voted",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/SimpleElection.sol"
  },
  "ast": {
    "absolutePath": "contracts/SimpleElection.sol",
    "exportedSymbols": {
      "SimpleElection": [
        688
      ]
    },
    "id": 689,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SimpleElection",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 688,
        "linearizedBaseContracts": [
          688
        ],
        "name": "SimpleElection",
        "nameLocation": "66:14:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "SimpleElection.Election",
            "id": 18,
            "members": [
              {
                "constant": false,
                "id": 3,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "152:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "144:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 2,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "144:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 5,
                "mutability": "mutable",
                "name": "description",
                "nameLocation": "173:11:0",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "166:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 4,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "166:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "201:2:0",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "194:9:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 6,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "194:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9,
                "mutability": "mutable",
                "name": "requireRegitration",
                "nameLocation": "218:18:0",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "213:23:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 8,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "213:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11,
                "mutability": "mutable",
                "name": "startElection",
                "nameLocation": "253:13:0",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "246:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 10,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "246:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13,
                "mutability": "mutable",
                "name": "endElection",
                "nameLocation": "283:11:0",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "276:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 12,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "276:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15,
                "mutability": "mutable",
                "name": "startRegistration",
                "nameLocation": "311:17:0",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "304:24:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 14,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "304:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 17,
                "mutability": "mutable",
                "name": "endRegistration",
                "nameLocation": "345:15:0",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "338:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 16,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "338:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Election",
            "nameLocation": "125:8:0",
            "nodeType": "StructDefinition",
            "scope": 688,
            "src": "118:249:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 22,
            "mutability": "mutable",
            "name": "electionsIds",
            "nameLocation": "400:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 688,
            "src": "373:39:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint32_$",
              "typeString": "mapping(bytes32 => uint32)"
            },
            "typeName": {
              "id": 21,
              "keyType": {
                "id": 19,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "381:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "373:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint32_$",
                "typeString": "mapping(bytes32 => uint32)"
              },
              "valueType": {
                "id": 20,
                "name": "uint32",
                "nodeType": "ElementaryTypeName",
                "src": "392:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 25,
            "mutability": "mutable",
            "name": "currentElections",
            "nameLocation": "455:16:0",
            "nodeType": "VariableDeclaration",
            "scope": 688,
            "src": "446:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint32_$dyn_storage",
              "typeString": "uint32[]"
            },
            "typeName": {
              "baseType": {
                "id": 23,
                "name": "uint32",
                "nodeType": "ElementaryTypeName",
                "src": "446:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                }
              },
              "id": 24,
              "nodeType": "ArrayTypeName",
              "src": "446:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                "typeString": "uint32[]"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "SimpleElection.Candidate",
            "id": 30,
            "members": [
              {
                "constant": false,
                "id": 27,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "566:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 30,
                "src": "558:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 26,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "558:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 29,
                "mutability": "mutable",
                "name": "voteCount",
                "nameLocation": "611:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 30,
                "src": "603:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 28,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "603:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Candidate",
            "nameLocation": "538:9:0",
            "nodeType": "StructDefinition",
            "scope": 688,
            "src": "531:113:0",
            "visibility": "public"
          },
          {
            "canonicalName": "SimpleElection.Voter",
            "id": 35,
            "members": [
              {
                "constant": false,
                "id": 32,
                "mutability": "mutable",
                "name": "weight",
                "nameLocation": "708:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 35,
                "src": "700:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 31,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "700:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 34,
                "mutability": "mutable",
                "name": "voted",
                "nameLocation": "768:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 35,
                "src": "763:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 33,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "763:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Voter",
            "nameLocation": "684:5:0",
            "nodeType": "StructDefinition",
            "scope": 688,
            "src": "677:141:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 40,
            "mutability": "mutable",
            "name": "elections",
            "nameLocation": "883:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 688,
            "src": "855:37:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Election_$18_storage_$",
              "typeString": "mapping(uint32 => struct SimpleElection.Election)"
            },
            "typeName": {
              "id": 39,
              "keyType": {
                "id": 36,
                "name": "uint32",
                "nodeType": "ElementaryTypeName",
                "src": "863:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                }
              },
              "nodeType": "Mapping",
              "src": "855:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Election_$18_storage_$",
                "typeString": "mapping(uint32 => struct SimpleElection.Election)"
              },
              "valueType": {
                "id": 38,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 37,
                  "name": "Election",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18,
                  "src": "873:8:0"
                },
                "referencedDeclaration": 18,
                "src": "873:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Election_$18_storage_ptr",
                  "typeString": "struct SimpleElection.Election"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "901ab94d",
            "id": 47,
            "mutability": "mutable",
            "name": "candidates",
            "nameLocation": "1004:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 688,
            "src": "950:64:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_uint8_$_t_struct$_Candidate_$30_storage_$_$",
              "typeString": "mapping(uint32 => mapping(uint8 => struct SimpleElection.Candidate))"
            },
            "typeName": {
              "id": 46,
              "keyType": {
                "id": 41,
                "name": "uint32",
                "nodeType": "ElementaryTypeName",
                "src": "958:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                }
              },
              "nodeType": "Mapping",
              "src": "950:46:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_uint8_$_t_struct$_Candidate_$30_storage_$_$",
                "typeString": "mapping(uint32 => mapping(uint8 => struct SimpleElection.Candidate))"
              },
              "valueType": {
                "id": 45,
                "keyType": {
                  "id": 42,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "976:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "nodeType": "Mapping",
                "src": "968:27:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Candidate_$30_storage_$",
                  "typeString": "mapping(uint8 => struct SimpleElection.Candidate)"
                },
                "valueType": {
                  "id": 44,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 43,
                    "name": "Candidate",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 30,
                    "src": "985:9:0"
                  },
                  "referencedDeclaration": 30,
                  "src": "985:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Candidate_$30_storage_ptr",
                    "typeString": "struct SimpleElection.Candidate"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "028ff9f3",
            "id": 53,
            "mutability": "mutable",
            "name": "candidatesIds",
            "nameLocation": "1073:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 688,
            "src": "1021:65:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_bytes32_$_t_uint8_$_$",
              "typeString": "mapping(uint32 => mapping(bytes32 => uint8))"
            },
            "typeName": {
              "id": 52,
              "keyType": {
                "id": 48,
                "name": "uint32",
                "nodeType": "ElementaryTypeName",
                "src": "1029:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                }
              },
              "nodeType": "Mapping",
              "src": "1021:44:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_bytes32_$_t_uint8_$_$",
                "typeString": "mapping(uint32 => mapping(bytes32 => uint8))"
              },
              "valueType": {
                "id": 51,
                "keyType": {
                  "id": 49,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1047:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "nodeType": "Mapping",
                "src": "1039:25:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint8_$",
                  "typeString": "mapping(bytes32 => uint8)"
                },
                "valueType": {
                  "id": 50,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1058:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "89f67182",
            "id": 58,
            "mutability": "mutable",
            "name": "candidatesList",
            "nameLocation": "1173:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 688,
            "src": "1139:48:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint32_$_t_array$_t_uint8_$dyn_storage_$",
              "typeString": "mapping(uint32 => uint8[])"
            },
            "typeName": {
              "id": 57,
              "keyType": {
                "id": 54,
                "name": "uint32",
                "nodeType": "ElementaryTypeName",
                "src": "1147:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                }
              },
              "nodeType": "Mapping",
              "src": "1139:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint32_$_t_array$_t_uint8_$dyn_storage_$",
                "typeString": "mapping(uint32 => uint8[])"
              },
              "valueType": {
                "baseType": {
                  "id": 55,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1157:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "id": 56,
                "nodeType": "ArrayTypeName",
                "src": "1157:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                  "typeString": "uint8[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "edfbf9b0",
            "id": 65,
            "mutability": "mutable",
            "name": "voters",
            "nameLocation": "1293:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 688,
            "src": "1241:58:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_address_$_t_struct$_Voter_$35_storage_$_$",
              "typeString": "mapping(uint32 => mapping(address => struct SimpleElection.Voter))"
            },
            "typeName": {
              "id": 64,
              "keyType": {
                "id": 59,
                "name": "uint32",
                "nodeType": "ElementaryTypeName",
                "src": "1249:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                }
              },
              "nodeType": "Mapping",
              "src": "1241:44:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_address_$_t_struct$_Voter_$35_storage_$_$",
                "typeString": "mapping(uint32 => mapping(address => struct SimpleElection.Voter))"
              },
              "valueType": {
                "id": 63,
                "keyType": {
                  "id": 60,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1267:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1259:25:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$35_storage_$",
                  "typeString": "mapping(address => struct SimpleElection.Voter)"
                },
                "valueType": {
                  "id": 62,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 61,
                    "name": "Voter",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 35,
                    "src": "1278:5:0"
                  },
                  "referencedDeclaration": 35,
                  "src": "1278:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Voter_$35_storage_ptr",
                    "typeString": "struct SimpleElection.Voter"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 68,
            "mutability": "mutable",
            "name": "electionNonce",
            "nameLocation": "1361:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 688,
            "src": "1354:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 66,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "1354:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 67,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1377:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 71,
            "mutability": "mutable",
            "name": "electionCount",
            "nameLocation": "1391:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 688,
            "src": "1384:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 69,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "1384:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 70,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1407:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 89,
            "name": "ElectionCreated",
            "nameLocation": "1421:15:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "1454:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "1446:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1446:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "description",
                  "nameLocation": "1475:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "1468:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1468:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "electionId",
                  "nameLocation": "1504:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "1496:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1496:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "requireRegitration",
                  "nameLocation": "1529:18:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "1524:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1524:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "startElection",
                  "nameLocation": "1564:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "1557:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1557:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "endElection",
                  "nameLocation": "1594:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "1587:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1587:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "startRegistration",
                  "nameLocation": "1622:17:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "1615:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1615:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "endRegistration",
                  "nameLocation": "1656:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "1649:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1649:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1436:241:0"
            },
            "src": "1415:263:0"
          },
          {
            "anonymous": false,
            "id": 99,
            "name": "Voted",
            "nameLocation": "1689:5:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "electionId",
                  "nameLocation": "1711:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "1704:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1704:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 93,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "voter",
                  "nameLocation": "1739:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "1731:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1731:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 95,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_candidateId",
                  "nameLocation": "1760:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "1754:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1754:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_weight",
                  "nameLocation": "1790:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "1782:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1782:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1694:109:0"
            },
            "src": "1683:121:0"
          },
          {
            "body": {
              "id": 206,
              "nodeType": "Block",
              "src": "2435:1057:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 120,
                            "name": "_candidates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 108,
                            "src": "2453:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          "id": 121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2453:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2474:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2453:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686572652073686f756c642062652061746c6561737420312063616e6469646174652e",
                        "id": 124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2477:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4b6983c2a40280353c7f445fb1342f20c07767a980000101a8cc9613ac2f8e06",
                          "typeString": "literal_string \"There should be atleast 1 candidate.\""
                        },
                        "value": "There should be atleast 1 candidate."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4b6983c2a40280353c7f445fb1342f20c07767a980000101a8cc9613ac2f8e06",
                          "typeString": "literal_string \"There should be atleast 1 candidate.\""
                        }
                      ],
                      "id": 119,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2445:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2445:71:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "2445:71:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2548:22:0",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 129,
                              "name": "_name",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101,
                              "src": "2564:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 128,
                            "name": "electionExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              652,
                              667
                            ],
                            "referencedDeclaration": 652,
                            "src": "2549:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bool_$",
                              "typeString": "function (bytes32) view returns (bool)"
                            }
                          },
                          "id": 130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2549:21:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320656c656374696f6e20616c7265616479206578697374732c20706c656173652073656c656374206f74686572206e616d65",
                        "id": 132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2584:56:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e0af46e1ff22f0f678c3e63c2b5a97286c6601e48910911a6d0dd3d0eb0c8402",
                          "typeString": "literal_string \"This election already exists, please select other name\""
                        },
                        "value": "This election already exists, please select other name"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e0af46e1ff22f0f678c3e63c2b5a97286c6601e48910911a6d0dd3d0eb0c8402",
                          "typeString": "literal_string \"This election already exists, please select other name\""
                        }
                      ],
                      "id": 127,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2527:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2527:123:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 134,
                  "nodeType": "ExpressionStatement",
                  "src": "2527:123:0"
                },
                {
                  "assignments": [
                    136
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 136,
                      "mutability": "mutable",
                      "name": "electionId",
                      "nameLocation": "2667:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 206,
                      "src": "2660:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 135,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2660:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 138,
                  "initialValue": {
                    "id": 137,
                    "name": "electionNonce",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 68,
                    "src": "2680:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2660:33:0"
                },
                {
                  "expression": {
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 139,
                        "name": "elections",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "2703:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Election_$18_storage_$",
                          "typeString": "mapping(uint32 => struct SimpleElection.Election storage ref)"
                        }
                      },
                      "id": 141,
                      "indexExpression": {
                        "id": 140,
                        "name": "electionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 136,
                        "src": "2713:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2703:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Election_$18_storage",
                        "typeString": "struct SimpleElection.Election storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 143,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101,
                          "src": "2749:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 144,
                          "name": "_description",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 103,
                          "src": "2768:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 145,
                          "name": "electionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 136,
                          "src": "2794:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "id": 146,
                          "name": "_requireRegitration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105,
                          "src": "2818:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "id": 147,
                          "name": "_startElection",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 110,
                          "src": "2851:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "id": 148,
                          "name": "_endElection",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 112,
                          "src": "2879:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "id": 149,
                          "name": "_startRegistration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 114,
                          "src": "2905:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "id": 150,
                          "name": "_endRegistration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116,
                          "src": "2937:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "id": 142,
                        "name": "Election",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "2727:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Election_$18_storage_ptr_$",
                          "typeString": "type(struct SimpleElection.Election storage pointer)"
                        }
                      },
                      "id": 151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2727:236:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Election_$18_memory_ptr",
                        "typeString": "struct SimpleElection.Election memory"
                      }
                    },
                    "src": "2703:260:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Election_$18_storage",
                      "typeString": "struct SimpleElection.Election storage ref"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "2703:260:0"
                },
                {
                  "expression": {
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 154,
                        "name": "electionsIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "2973:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint32_$",
                          "typeString": "mapping(bytes32 => uint32)"
                        }
                      },
                      "id": 156,
                      "indexExpression": {
                        "id": 155,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101,
                        "src": "2986:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2973:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 157,
                      "name": "electionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 136,
                      "src": "2995:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "2973:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 159,
                  "nodeType": "ExpressionStatement",
                  "src": "2973:32:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 163,
                        "name": "electionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 136,
                        "src": "3037:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "id": 160,
                        "name": "currentElections",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "3015:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_storage",
                          "typeString": "uint32[] storage ref"
                        }
                      },
                      "id": 162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3015:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint32_$dyn_storage_ptr_$_t_uint32_$returns$__$bound_to$_t_array$_t_uint32_$dyn_storage_ptr_$",
                        "typeString": "function (uint32[] storage pointer,uint32)"
                      }
                    },
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3015:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 165,
                  "nodeType": "ExpressionStatement",
                  "src": "3015:33:0"
                },
                {
                  "body": {
                    "id": 187,
                    "nodeType": "Block",
                    "src": "3106:72:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 178,
                              "name": "electionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 136,
                              "src": "3133:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 179,
                                "name": "_candidates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 108,
                                "src": "3145:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                }
                              },
                              "id": 181,
                              "indexExpression": {
                                "id": 180,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 167,
                                "src": "3157:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3145:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "id": 184,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 182,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 167,
                                "src": "3161:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 183,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3165:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "3161:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "id": 177,
                            "name": "addCandidate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 243,
                            "src": "3120:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint32_$_t_bytes32_$_t_uint8_$returns$__$",
                              "typeString": "function (uint32,bytes32,uint8)"
                            }
                          },
                          "id": 185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3120:47:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 186,
                        "nodeType": "ExpressionStatement",
                        "src": "3120:47:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 170,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 167,
                      "src": "3077:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 171,
                        "name": "_candidates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 108,
                        "src": "3081:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "id": 172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3081:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3077:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 188,
                  "initializationExpression": {
                    "assignments": [
                      167
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 167,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3070:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 188,
                        "src": "3064:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 166,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3064:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 169,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3074:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3064:11:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3101:3:0",
                      "subExpression": {
                        "id": 174,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 167,
                        "src": "3101:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 176,
                    "nodeType": "ExpressionStatement",
                    "src": "3101:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "3059:119:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 190,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101,
                        "src": "3221:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 191,
                        "name": "_description",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103,
                        "src": "3240:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 192,
                        "name": "electionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 136,
                        "src": "3266:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 193,
                        "name": "_requireRegitration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105,
                        "src": "3290:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 194,
                        "name": "_startElection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110,
                        "src": "3323:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 195,
                        "name": "_endElection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 112,
                        "src": "3351:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 196,
                        "name": "_startRegistration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 114,
                        "src": "3377:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 197,
                        "name": "_endRegistration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116,
                        "src": "3409:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 189,
                      "name": "ElectionCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89,
                      "src": "3192:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_uint32_$_t_uint32_$_t_uint32_$_t_uint32_$returns$__$",
                        "typeString": "function (bytes32,string memory,uint256,bool,uint32,uint32,uint32,uint32)"
                      }
                    },
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3192:243:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 199,
                  "nodeType": "EmitStatement",
                  "src": "3187:248:0"
                },
                {
                  "expression": {
                    "id": 201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "3445:15:0",
                    "subExpression": {
                      "id": 200,
                      "name": "electionNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "3445:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 202,
                  "nodeType": "ExpressionStatement",
                  "src": "3445:15:0"
                },
                {
                  "expression": {
                    "id": 204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "3470:15:0",
                    "subExpression": {
                      "id": 203,
                      "name": "electionCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "3470:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 205,
                  "nodeType": "ExpressionStatement",
                  "src": "3470:15:0"
                }
              ]
            },
            "functionSelector": "8bc31c84",
            "id": 207,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createElection",
            "nameLocation": "1872:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1904:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 207,
                  "src": "1896:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1896:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 103,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "1956:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 207,
                  "src": "1942:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1942:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 105,
                  "mutability": "mutable",
                  "name": "_requireRegitration",
                  "nameLocation": "1999:19:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 207,
                  "src": "1994:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1994:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 108,
                  "mutability": "mutable",
                  "name": "_candidates",
                  "nameLocation": "2082:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 207,
                  "src": "2065:28:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 106,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2065:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 107,
                    "nodeType": "ArrayTypeName",
                    "src": "2065:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 110,
                  "mutability": "mutable",
                  "name": "_startElection",
                  "nameLocation": "2134:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 207,
                  "src": "2127:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 109,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2127:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 112,
                  "mutability": "mutable",
                  "name": "_endElection",
                  "nameLocation": "2208:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 207,
                  "src": "2201:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 111,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2201:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 114,
                  "mutability": "mutable",
                  "name": "_startRegistration",
                  "nameLocation": "2278:18:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 207,
                  "src": "2271:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 113,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2271:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 116,
                  "mutability": "mutable",
                  "name": "_endRegistration",
                  "nameLocation": "2360:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 207,
                  "src": "2353:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2353:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1886:541:0"
            },
            "returnParameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2435:0:0"
            },
            "scope": 688,
            "src": "1863:1629:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 242,
              "nodeType": "Block",
              "src": "3664:208:0",
              "statements": [
                {
                  "expression": {
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 216,
                          "name": "candidates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "3674:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_uint8_$_t_struct$_Candidate_$30_storage_$_$",
                            "typeString": "mapping(uint32 => mapping(uint8 => struct SimpleElection.Candidate storage ref))"
                          }
                        },
                        "id": 219,
                        "indexExpression": {
                          "id": 217,
                          "name": "_electionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 209,
                          "src": "3685:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3674:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Candidate_$30_storage_$",
                          "typeString": "mapping(uint8 => struct SimpleElection.Candidate storage ref)"
                        }
                      },
                      "id": 220,
                      "indexExpression": {
                        "id": 218,
                        "name": "_candidateId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 213,
                        "src": "3698:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3674:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Candidate_$30_storage",
                        "typeString": "struct SimpleElection.Candidate storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 222,
                          "name": "_candidateName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 211,
                          "src": "3724:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3740:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 221,
                        "name": "Candidate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "3714:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Candidate_$30_storage_ptr_$",
                          "typeString": "type(struct SimpleElection.Candidate storage pointer)"
                        }
                      },
                      "id": 224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3714:28:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Candidate_$30_memory_ptr",
                        "typeString": "struct SimpleElection.Candidate memory"
                      }
                    },
                    "src": "3674:68:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Candidate_$30_storage",
                      "typeString": "struct SimpleElection.Candidate storage ref"
                    }
                  },
                  "id": 226,
                  "nodeType": "ExpressionStatement",
                  "src": "3674:68:0"
                },
                {
                  "expression": {
                    "id": 233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 227,
                          "name": "candidatesIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53,
                          "src": "3752:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_bytes32_$_t_uint8_$_$",
                            "typeString": "mapping(uint32 => mapping(bytes32 => uint8))"
                          }
                        },
                        "id": 230,
                        "indexExpression": {
                          "id": 228,
                          "name": "_electionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 209,
                          "src": "3766:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3752:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint8_$",
                          "typeString": "mapping(bytes32 => uint8)"
                        }
                      },
                      "id": 231,
                      "indexExpression": {
                        "id": 229,
                        "name": "_candidateName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 211,
                        "src": "3779:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3752:42:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 232,
                      "name": "_candidateId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 213,
                      "src": "3797:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "3752:57:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 234,
                  "nodeType": "ExpressionStatement",
                  "src": "3752:57:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 239,
                        "name": "_candidateId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 213,
                        "src": "3852:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 235,
                          "name": "candidatesList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58,
                          "src": "3819:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_array$_t_uint8_$dyn_storage_$",
                            "typeString": "mapping(uint32 => uint8[] storage ref)"
                          }
                        },
                        "id": 237,
                        "indexExpression": {
                          "id": 236,
                          "name": "_electionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 209,
                          "src": "3834:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3819:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_storage",
                          "typeString": "uint8[] storage ref"
                        }
                      },
                      "id": 238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3819:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint8_$dyn_storage_ptr_$_t_uint8_$returns$__$bound_to$_t_array$_t_uint8_$dyn_storage_ptr_$",
                        "typeString": "function (uint8[] storage pointer,uint8)"
                      }
                    },
                    "id": 240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3819:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 241,
                  "nodeType": "ExpressionStatement",
                  "src": "3819:46:0"
                }
              ]
            },
            "id": 243,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addCandidate",
            "nameLocation": "3549:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 209,
                  "mutability": "mutable",
                  "name": "_electionId",
                  "nameLocation": "3578:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 243,
                  "src": "3571:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 208,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3571:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 211,
                  "mutability": "mutable",
                  "name": "_candidateName",
                  "nameLocation": "3607:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 243,
                  "src": "3599:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 210,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3599:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 213,
                  "mutability": "mutable",
                  "name": "_candidateId",
                  "nameLocation": "3637:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 243,
                  "src": "3631:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 212,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3631:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3561:94:0"
            },
            "returnParameters": {
              "id": 215,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3664:0:0"
            },
            "scope": 688,
            "src": "3540:332:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 375,
              "nodeType": "Block",
              "src": "4155:1427:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 256,
                            "name": "_electionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 245,
                            "src": "4188:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          ],
                          "id": 255,
                          "name": "electionExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            652,
                            667
                          ],
                          "referencedDeclaration": 667,
                          "src": "4173:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint32_$returns$_t_bool_$",
                            "typeString": "function (uint32) view returns (bool)"
                          }
                        },
                        "id": 257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4173:27:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520656c656374696f6e20646f65736e2774206578697374",
                        "id": 258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4202:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_034864c2a4d18a6906f69544dcf72229828b44176b7b5697c092924facb610e4",
                          "typeString": "literal_string \"The election doesn't exist\""
                        },
                        "value": "The election doesn't exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_034864c2a4d18a6906f69544dcf72229828b44176b7b5697c092924facb610e4",
                          "typeString": "literal_string \"The election doesn't exist\""
                        }
                      ],
                      "id": 254,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4165:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4165:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 260,
                  "nodeType": "ExpressionStatement",
                  "src": "4165:66:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 263,
                            "name": "_electionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 245,
                            "src": "4267:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          ],
                          "id": 262,
                          "name": "checkElectionOpen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 590,
                          "src": "4249:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint32_$returns$_t_bool_$",
                            "typeString": "function (uint32) view returns (bool)"
                          }
                        },
                        "id": 264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4249:30:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520656c656374696f6e20697320636c6f736564",
                        "id": 265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4281:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c778c928f6ac599abc58daacd0f0d3c4f9e6f8f31e3ed1804f028e8c18ba5c4d",
                          "typeString": "literal_string \"The election is closed\""
                        },
                        "value": "The election is closed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c778c928f6ac599abc58daacd0f0d3c4f9e6f8f31e3ed1804f028e8c18ba5c4d",
                          "typeString": "literal_string \"The election is closed\""
                        }
                      ],
                      "id": 261,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4241:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4241:65:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 267,
                  "nodeType": "ExpressionStatement",
                  "src": "4241:65:0"
                },
                {
                  "condition": {
                    "expression": {
                      "baseExpression": {
                        "id": 268,
                        "name": "elections",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "4320:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Election_$18_storage_$",
                          "typeString": "mapping(uint32 => struct SimpleElection.Election storage ref)"
                        }
                      },
                      "id": 270,
                      "indexExpression": {
                        "id": 269,
                        "name": "_electionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 245,
                        "src": "4330:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4320:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Election_$18_storage",
                        "typeString": "struct SimpleElection.Election storage ref"
                      }
                    },
                    "id": 271,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "requireRegitration",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 9,
                    "src": "4320:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 286,
                    "nodeType": "Block",
                    "src": "4514:59:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 282,
                              "name": "_electionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 245,
                              "src": "4542:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "id": 283,
                              "name": "_voter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 247,
                              "src": "4555:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 281,
                            "name": "registerVoter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 517,
                            "src": "4528:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint32_$_t_address_$returns$__$",
                              "typeString": "function (uint32,address)"
                            }
                          },
                          "id": 284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4528:34:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 285,
                        "nodeType": "ExpressionStatement",
                        "src": "4528:34:0"
                      }
                    ]
                  },
                  "id": 287,
                  "nodeType": "IfStatement",
                  "src": "4316:257:0",
                  "trueBody": {
                    "id": 280,
                    "nodeType": "Block",
                    "src": "4363:145:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 274,
                                  "name": "_electionId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 245,
                                  "src": "4420:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                {
                                  "id": 275,
                                  "name": "_voter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 247,
                                  "src": "4433:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 273,
                                "name": "voterHasRegistred",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 621,
                                "src": "4402:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint32_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (uint32,address) view returns (bool)"
                                }
                              },
                              "id": 276,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4402:38:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "566f746572206861736e27742072656769737465726564",
                              "id": 277,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4458:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1dc7424e5ca3061f214f0eb13fffa0ea58e7e1c701733232427e015e49e5f0fa",
                                "typeString": "literal_string \"Voter hasn't registered\""
                              },
                              "value": "Voter hasn't registered"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1dc7424e5ca3061f214f0eb13fffa0ea58e7e1c701733232427e015e49e5f0fa",
                                "typeString": "literal_string \"Voter hasn't registered\""
                              }
                            ],
                            "id": 272,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4377:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4377:120:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 279,
                        "nodeType": "ExpressionStatement",
                        "src": "4377:120:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4603:35:0",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 290,
                              "name": "_electionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 245,
                              "src": "4618:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "id": 291,
                              "name": "_voter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 247,
                              "src": "4631:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 289,
                            "name": "voterHasVoted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 638,
                            "src": "4604:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (uint32,address) view returns (bool)"
                            }
                          },
                          "id": 292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4604:34:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "566f7465722068617320616c726561647920566f74656421",
                        "id": 294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4652:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ccd73cde219917d9b9d1760b66dae1f5369051ed41ac40d279d9ca492f7f739d",
                          "typeString": "literal_string \"Voter has already Voted!\""
                        },
                        "value": "Voter has already Voted!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ccd73cde219917d9b9d1760b66dae1f5369051ed41ac40d279d9ca492f7f739d",
                          "typeString": "literal_string \"Voter has already Voted!\""
                        }
                      ],
                      "id": 288,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4582:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4582:106:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 296,
                  "nodeType": "ExpressionStatement",
                  "src": "4582:106:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 298,
                          "name": "_weight",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 251,
                          "src": "4719:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 299,
                                "name": "voters",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65,
                                "src": "4730:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_address_$_t_struct$_Voter_$35_storage_$_$",
                                  "typeString": "mapping(uint32 => mapping(address => struct SimpleElection.Voter storage ref))"
                                }
                              },
                              "id": 301,
                              "indexExpression": {
                                "id": 300,
                                "name": "_electionId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 245,
                                "src": "4737:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4730:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$35_storage_$",
                                "typeString": "mapping(address => struct SimpleElection.Voter storage ref)"
                              }
                            },
                            "id": 303,
                            "indexExpression": {
                              "id": 302,
                              "name": "_voter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 247,
                              "src": "4750:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4730:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Voter_$35_storage",
                              "typeString": "struct SimpleElection.Voter storage ref"
                            }
                          },
                          "id": 304,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "weight",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32,
                          "src": "4730:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4719:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "566f74657220646f206e6f74206861766520736f206d616e7920766f746573",
                        "id": 306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4778:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_545a7eafef7c30abf70f6de27f9beb20d8f64d8a983deb959bd5b78a3e6f3a38",
                          "typeString": "literal_string \"Voter do not have so many votes\""
                        },
                        "value": "Voter do not have so many votes"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_545a7eafef7c30abf70f6de27f9beb20d8f64d8a983deb959bd5b78a3e6f3a38",
                          "typeString": "literal_string \"Voter do not have so many votes\""
                        }
                      ],
                      "id": 297,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4698:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4698:123:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 308,
                  "nodeType": "ExpressionStatement",
                  "src": "4698:123:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 311,
                            "name": "_electionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 245,
                            "src": "4868:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "id": 312,
                            "name": "_candidateId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 249,
                            "src": "4881:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "id": 310,
                          "name": "candidateExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 687,
                          "src": "4852:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint32_$_t_uint8_$returns$_t_bool_$",
                            "typeString": "function (uint32,uint8) view returns (bool)"
                          }
                        },
                        "id": 313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4852:42:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642063616e64696461746520746f20566f746521",
                        "id": 314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4908:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a714742a815cefcbafea8497ded74fd5d7eb30d3ebe4061a5c39e19c226898df",
                          "typeString": "literal_string \"Invalid candidate to Vote!\""
                        },
                        "value": "Invalid candidate to Vote!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a714742a815cefcbafea8497ded74fd5d7eb30d3ebe4061a5c39e19c226898df",
                          "typeString": "literal_string \"Invalid candidate to Vote!\""
                        }
                      ],
                      "id": 309,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4831:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4831:115:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 316,
                  "nodeType": "ExpressionStatement",
                  "src": "4831:115:0"
                },
                {
                  "expression": {
                    "id": 331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 317,
                            "name": "candidates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47,
                            "src": "5011:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_uint8_$_t_struct$_Candidate_$30_storage_$_$",
                              "typeString": "mapping(uint32 => mapping(uint8 => struct SimpleElection.Candidate storage ref))"
                            }
                          },
                          "id": 320,
                          "indexExpression": {
                            "id": 318,
                            "name": "_electionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 245,
                            "src": "5022:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5011:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Candidate_$30_storage_$",
                            "typeString": "mapping(uint8 => struct SimpleElection.Candidate storage ref)"
                          }
                        },
                        "id": 321,
                        "indexExpression": {
                          "id": 319,
                          "name": "_candidateId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 249,
                          "src": "5035:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5011:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Candidate_$30_storage",
                          "typeString": "struct SimpleElection.Candidate storage ref"
                        }
                      },
                      "id": 322,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "voteCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29,
                      "src": "5011:47:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 330,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 323,
                              "name": "candidates",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47,
                              "src": "5073:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_uint8_$_t_struct$_Candidate_$30_storage_$_$",
                                "typeString": "mapping(uint32 => mapping(uint8 => struct SimpleElection.Candidate storage ref))"
                              }
                            },
                            "id": 325,
                            "indexExpression": {
                              "id": 324,
                              "name": "_electionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 245,
                              "src": "5084:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5073:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Candidate_$30_storage_$",
                              "typeString": "mapping(uint8 => struct SimpleElection.Candidate storage ref)"
                            }
                          },
                          "id": 327,
                          "indexExpression": {
                            "id": 326,
                            "name": "_candidateId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 249,
                            "src": "5097:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5073:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Candidate_$30_storage",
                            "typeString": "struct SimpleElection.Candidate storage ref"
                          }
                        },
                        "id": 328,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "voteCount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 29,
                        "src": "5073:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 329,
                        "name": "_weight",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 251,
                        "src": "5135:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5073:69:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5011:131:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 332,
                  "nodeType": "ExpressionStatement",
                  "src": "5011:131:0"
                },
                {
                  "expression": {
                    "id": 347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 333,
                            "name": "voters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65,
                            "src": "5205:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_address_$_t_struct$_Voter_$35_storage_$_$",
                              "typeString": "mapping(uint32 => mapping(address => struct SimpleElection.Voter storage ref))"
                            }
                          },
                          "id": 336,
                          "indexExpression": {
                            "id": 334,
                            "name": "_electionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 245,
                            "src": "5212:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5205:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$35_storage_$",
                            "typeString": "mapping(address => struct SimpleElection.Voter storage ref)"
                          }
                        },
                        "id": 337,
                        "indexExpression": {
                          "id": 335,
                          "name": "_voter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 247,
                          "src": "5225:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5205:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$35_storage",
                          "typeString": "struct SimpleElection.Voter storage ref"
                        }
                      },
                      "id": 338,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "weight",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32,
                      "src": "5205:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 346,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 339,
                              "name": "voters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65,
                              "src": "5254:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_address_$_t_struct$_Voter_$35_storage_$_$",
                                "typeString": "mapping(uint32 => mapping(address => struct SimpleElection.Voter storage ref))"
                              }
                            },
                            "id": 341,
                            "indexExpression": {
                              "id": 340,
                              "name": "_electionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 245,
                              "src": "5261:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5254:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$35_storage_$",
                              "typeString": "mapping(address => struct SimpleElection.Voter storage ref)"
                            }
                          },
                          "id": 343,
                          "indexExpression": {
                            "id": 342,
                            "name": "_voter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 247,
                            "src": "5274:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5254:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Voter_$35_storage",
                            "typeString": "struct SimpleElection.Voter storage ref"
                          }
                        },
                        "id": 344,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "weight",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32,
                        "src": "5254:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 345,
                        "name": "_weight",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 251,
                        "src": "5303:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5254:56:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5205:105:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 348,
                  "nodeType": "ExpressionStatement",
                  "src": "5205:105:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 349,
                            "name": "voters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65,
                            "src": "5405:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_address_$_t_struct$_Voter_$35_storage_$_$",
                              "typeString": "mapping(uint32 => mapping(address => struct SimpleElection.Voter storage ref))"
                            }
                          },
                          "id": 351,
                          "indexExpression": {
                            "id": 350,
                            "name": "_electionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 245,
                            "src": "5412:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5405:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$35_storage_$",
                            "typeString": "mapping(address => struct SimpleElection.Voter storage ref)"
                          }
                        },
                        "id": 353,
                        "indexExpression": {
                          "id": 352,
                          "name": "_voter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 247,
                          "src": "5425:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5405:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$35_storage",
                          "typeString": "struct SimpleElection.Voter storage ref"
                        }
                      },
                      "id": 354,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "weight",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32,
                      "src": "5405:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5443:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5405:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 367,
                  "nodeType": "IfStatement",
                  "src": "5401:110:0",
                  "trueBody": {
                    "id": 366,
                    "nodeType": "Block",
                    "src": "5446:65:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 357,
                                  "name": "voters",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 65,
                                  "src": "5460:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_address_$_t_struct$_Voter_$35_storage_$_$",
                                    "typeString": "mapping(uint32 => mapping(address => struct SimpleElection.Voter storage ref))"
                                  }
                                },
                                "id": 360,
                                "indexExpression": {
                                  "id": 358,
                                  "name": "_electionId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 245,
                                  "src": "5467:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5460:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$35_storage_$",
                                  "typeString": "mapping(address => struct SimpleElection.Voter storage ref)"
                                }
                              },
                              "id": 361,
                              "indexExpression": {
                                "id": 359,
                                "name": "_voter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 247,
                                "src": "5480:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5460:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Voter_$35_storage",
                                "typeString": "struct SimpleElection.Voter storage ref"
                              }
                            },
                            "id": 362,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "voted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34,
                            "src": "5460:33:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 363,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5496:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "5460:40:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 365,
                        "nodeType": "ExpressionStatement",
                        "src": "5460:40:0"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 369,
                        "name": "_electionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 245,
                        "src": "5532:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 370,
                        "name": "_voter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 247,
                        "src": "5545:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 371,
                        "name": "_candidateId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 249,
                        "src": "5553:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 372,
                        "name": "_weight",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 251,
                        "src": "5567:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 368,
                      "name": "Voted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99,
                      "src": "5526:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint32_$_t_address_$_t_uint8_$_t_uint256_$returns$__$",
                        "typeString": "function (uint32,address,uint8,uint256)"
                      }
                    },
                    "id": 373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5526:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 374,
                  "nodeType": "EmitStatement",
                  "src": "5521:54:0"
                }
              ]
            },
            "id": 376,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "voterVote",
            "nameLocation": "3938:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 245,
                  "mutability": "mutable",
                  "name": "_electionId",
                  "nameLocation": "3964:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 376,
                  "src": "3957:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 244,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3957:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 247,
                  "mutability": "mutable",
                  "name": "_voter",
                  "nameLocation": "4022:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 376,
                  "src": "4014:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 246,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4014:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 249,
                  "mutability": "mutable",
                  "name": "_candidateId",
                  "nameLocation": "4056:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 376,
                  "src": "4050:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 248,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4050:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 251,
                  "mutability": "mutable",
                  "name": "_weight",
                  "nameLocation": "4109:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 376,
                  "src": "4101:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 250,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4101:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3947:199:0"
            },
            "returnParameters": {
              "id": 253,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4155:0:0"
            },
            "scope": 688,
            "src": "3929:1653:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 393,
              "nodeType": "Block",
              "src": "5802:74:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 386,
                        "name": "_electionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 378,
                        "src": "5822:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "expression": {
                          "id": 387,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5835:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5835:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 389,
                        "name": "_candidateId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 380,
                        "src": "5847:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 390,
                        "name": "_weight",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 382,
                        "src": "5861:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 385,
                      "name": "voterVote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 376,
                      "src": "5812:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint32_$_t_address_$_t_uint8_$_t_uint256_$returns$__$",
                        "typeString": "function (uint32,address,uint8,uint256)"
                      }
                    },
                    "id": 391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5812:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 392,
                  "nodeType": "ExpressionStatement",
                  "src": "5812:57:0"
                }
              ]
            },
            "functionSelector": "5b4206c4",
            "id": 394,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vote",
            "nameLocation": "5627:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 383,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 378,
                  "mutability": "mutable",
                  "name": "_electionId",
                  "nameLocation": "5648:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 394,
                  "src": "5641:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 377,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5641:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 380,
                  "mutability": "mutable",
                  "name": "_candidateId",
                  "nameLocation": "5704:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 394,
                  "src": "5698:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 379,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5698:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 382,
                  "mutability": "mutable",
                  "name": "_weight",
                  "nameLocation": "5757:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 394,
                  "src": "5749:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 381,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5749:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5631:163:0"
            },
            "returnParameters": {
              "id": 384,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5802:0:0"
            },
            "scope": 688,
            "src": "5618:258:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 438,
              "nodeType": "Block",
              "src": "5980:238:0",
              "statements": [
                {
                  "assignments": [
                    404
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 404,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "6007:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 438,
                      "src": "5990:23:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 402,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5990:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 403,
                        "nodeType": "ArrayTypeName",
                        "src": "5990:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 411,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 408,
                          "name": "currentElections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "6030:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint32_$dyn_storage",
                            "typeString": "uint32[] storage ref"
                          }
                        },
                        "id": 409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "6030:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 407,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "6016:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes32[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 405,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6020:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 406,
                        "nodeType": "ArrayTypeName",
                        "src": "6020:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      }
                    },
                    "id": 410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6016:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5990:64:0"
                },
                {
                  "body": {
                    "id": 434,
                    "nodeType": "Block",
                    "src": "6117:72:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 423,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 404,
                              "src": "6131:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            "id": 425,
                            "indexExpression": {
                              "id": 424,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 413,
                              "src": "6138:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6131:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 426,
                                "name": "elections",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40,
                                "src": "6143:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Election_$18_storage_$",
                                  "typeString": "mapping(uint32 => struct SimpleElection.Election storage ref)"
                                }
                              },
                              "id": 430,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 427,
                                  "name": "currentElections",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25,
                                  "src": "6153:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint32_$dyn_storage",
                                    "typeString": "uint32[] storage ref"
                                  }
                                },
                                "id": 429,
                                "indexExpression": {
                                  "id": 428,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 413,
                                  "src": "6170:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6153:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6143:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Election_$18_storage",
                                "typeString": "struct SimpleElection.Election storage ref"
                              }
                            },
                            "id": 431,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "name",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3,
                            "src": "6143:35:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "6131:47:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 433,
                        "nodeType": "ExpressionStatement",
                        "src": "6131:47:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 416,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 413,
                      "src": "6083:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 417,
                        "name": "currentElections",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "6087:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_storage",
                          "typeString": "uint32[] storage ref"
                        }
                      },
                      "id": 418,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6087:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6083:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 435,
                  "initializationExpression": {
                    "assignments": [
                      413
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 413,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6076:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 435,
                        "src": "6069:8:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 412,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6069:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 415,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 414,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6080:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6069:12:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6112:3:0",
                      "subExpression": {
                        "id": 420,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 413,
                        "src": "6112:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "id": 422,
                    "nodeType": "ExpressionStatement",
                    "src": "6112:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "6064:125:0"
                },
                {
                  "expression": {
                    "id": 436,
                    "name": "result",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 404,
                    "src": "6205:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "functionReturnParameters": 399,
                  "id": 437,
                  "nodeType": "Return",
                  "src": "6198:13:0"
                }
              ]
            },
            "functionSelector": "7133a501",
            "id": 439,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentElections",
            "nameLocation": "5919:19:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5938:2:0"
            },
            "returnParameters": {
              "id": 399,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 398,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 439,
                  "src": "5962:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 396,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "5962:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 397,
                    "nodeType": "ArrayTypeName",
                    "src": "5962:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5961:18:0"
            },
            "scope": 688,
            "src": "5910:308:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 499,
              "nodeType": "Block",
              "src": "6387:387:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 449,
                            "name": "_electionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 441,
                            "src": "6420:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          ],
                          "id": 448,
                          "name": "electionExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            652,
                            667
                          ],
                          "referencedDeclaration": 667,
                          "src": "6405:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint32_$returns$_t_bool_$",
                            "typeString": "function (uint32) view returns (bool)"
                          }
                        },
                        "id": 450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6405:27:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520656c656374696f6e20646f65736e2774206578697374",
                        "id": 451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6434:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_034864c2a4d18a6906f69544dcf72229828b44176b7b5697c092924facb610e4",
                          "typeString": "literal_string \"The election doesn't exist\""
                        },
                        "value": "The election doesn't exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_034864c2a4d18a6906f69544dcf72229828b44176b7b5697c092924facb610e4",
                          "typeString": "literal_string \"The election doesn't exist\""
                        }
                      ],
                      "id": 447,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6397:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6397:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 453,
                  "nodeType": "ExpressionStatement",
                  "src": "6397:66:0"
                },
                {
                  "assignments": [
                    458
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 458,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "6490:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 499,
                      "src": "6473:23:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 456,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6473:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 457,
                        "nodeType": "ArrayTypeName",
                        "src": "6473:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 467,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 462,
                            "name": "candidatesList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "6526:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint32_$_t_array$_t_uint8_$dyn_storage_$",
                              "typeString": "mapping(uint32 => uint8[] storage ref)"
                            }
                          },
                          "id": 464,
                          "indexExpression": {
                            "id": 463,
                            "name": "_electionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 441,
                            "src": "6541:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6526:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_storage",
                            "typeString": "uint8[] storage ref"
                          }
                        },
                        "id": 465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "6526:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 461,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "6499:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes32[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 459,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6503:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 460,
                        "nodeType": "ArrayTypeName",
                        "src": "6503:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      }
                    },
                    "id": 466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6499:71:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6473:97:0"
                },
                {
                  "body": {
                    "expression": {
                      "id": 494,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "baseExpression": {
                          "id": 481,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 458,
                          "src": "6655:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "id": 483,
                        "indexExpression": {
                          "id": 482,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 469,
                          "src": "6662:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "6655:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 484,
                              "name": "candidates",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47,
                              "src": "6667:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_uint8_$_t_struct$_Candidate_$30_storage_$_$",
                                "typeString": "mapping(uint32 => mapping(uint8 => struct SimpleElection.Candidate storage ref))"
                              }
                            },
                            "id": 486,
                            "indexExpression": {
                              "id": 485,
                              "name": "_electionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 441,
                              "src": "6678:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6667:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Candidate_$30_storage_$",
                              "typeString": "mapping(uint8 => struct SimpleElection.Candidate storage ref)"
                            }
                          },
                          "id": 492,
                          "indexExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 487,
                                "name": "candidatesList",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 58,
                                "src": "6691:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint32_$_t_array$_t_uint8_$dyn_storage_$",
                                  "typeString": "mapping(uint32 => uint8[] storage ref)"
                                }
                              },
                              "id": 489,
                              "indexExpression": {
                                "id": 488,
                                "name": "_electionId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 441,
                                "src": "6706:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6691:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint8_$dyn_storage",
                                "typeString": "uint8[] storage ref"
                              }
                            },
                            "id": 491,
                            "indexExpression": {
                              "id": 490,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 469,
                              "src": "6719:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6691:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6667:55:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Candidate_$30_storage",
                            "typeString": "struct SimpleElection.Candidate storage ref"
                          }
                        },
                        "id": 493,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "name",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 27,
                        "src": "6667:77:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "src": "6655:89:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 495,
                    "nodeType": "ExpressionStatement",
                    "src": "6655:89:0"
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 472,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 469,
                      "src": "6598:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 473,
                          "name": "candidatesList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58,
                          "src": "6602:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_array$_t_uint8_$dyn_storage_$",
                            "typeString": "mapping(uint32 => uint8[] storage ref)"
                          }
                        },
                        "id": 475,
                        "indexExpression": {
                          "id": 474,
                          "name": "_electionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 441,
                          "src": "6617:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6602:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_storage",
                          "typeString": "uint8[] storage ref"
                        }
                      },
                      "id": 476,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6602:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6598:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 496,
                  "initializationExpression": {
                    "assignments": [
                      469
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 469,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6591:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 496,
                        "src": "6585:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 468,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "6585:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 471,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 470,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6595:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6585:11:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 479,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6638:3:0",
                      "subExpression": {
                        "id": 478,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 469,
                        "src": "6638:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 480,
                    "nodeType": "ExpressionStatement",
                    "src": "6638:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "6580:164:0"
                },
                {
                  "expression": {
                    "id": 497,
                    "name": "result",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 458,
                    "src": "6761:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "functionReturnParameters": 446,
                  "id": 498,
                  "nodeType": "Return",
                  "src": "6754:13:0"
                }
              ]
            },
            "functionSelector": "3ec4f362",
            "id": 500,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCandidatesForElection",
            "nameLocation": "6275:24:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 442,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 441,
                  "mutability": "mutable",
                  "name": "_electionId",
                  "nameLocation": "6307:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 500,
                  "src": "6300:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 440,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6300:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6299:20:0"
            },
            "returnParameters": {
              "id": 446,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 445,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 500,
                  "src": "6365:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 443,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "6365:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 444,
                    "nodeType": "ArrayTypeName",
                    "src": "6365:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6364:18:0"
            },
            "scope": 688,
            "src": "6266:508:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 516,
              "nodeType": "Block",
              "src": "6877:54:0",
              "statements": [
                {
                  "expression": {
                    "id": 514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 507,
                            "name": "voters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65,
                            "src": "6887:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_address_$_t_struct$_Voter_$35_storage_$_$",
                              "typeString": "mapping(uint32 => mapping(address => struct SimpleElection.Voter storage ref))"
                            }
                          },
                          "id": 510,
                          "indexExpression": {
                            "id": 508,
                            "name": "_electionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 502,
                            "src": "6894:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6887:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$35_storage_$",
                            "typeString": "mapping(address => struct SimpleElection.Voter storage ref)"
                          }
                        },
                        "id": 511,
                        "indexExpression": {
                          "id": 509,
                          "name": "voter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 504,
                          "src": "6907:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6887:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$35_storage",
                          "typeString": "struct SimpleElection.Voter storage ref"
                        }
                      },
                      "id": 512,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "weight",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32,
                      "src": "6887:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6923:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "6887:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 515,
                  "nodeType": "ExpressionStatement",
                  "src": "6887:37:0"
                }
              ]
            },
            "id": 517,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerVoter",
            "nameLocation": "6820:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 505,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 502,
                  "mutability": "mutable",
                  "name": "_electionId",
                  "nameLocation": "6841:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 517,
                  "src": "6834:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 501,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6834:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 504,
                  "mutability": "mutable",
                  "name": "voter",
                  "nameLocation": "6862:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 517,
                  "src": "6854:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 503,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6854:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6833:35:0"
            },
            "returnParameters": {
              "id": 506,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6877:0:0"
            },
            "scope": 688,
            "src": "6811:120:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 535,
              "nodeType": "Block",
              "src": "6982:133:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 524,
                            "name": "_electionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 519,
                            "src": "7022:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          ],
                          "id": 523,
                          "name": "checkRegistrationOpen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 563,
                          "src": "7000:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint32_$returns$_t_bool_$",
                            "typeString": "function (uint32) view returns (bool)"
                          }
                        },
                        "id": 525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7000:34:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526567697374726174696f6e206e6f74206f70656e",
                        "id": 526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7036:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f76acb686b0feba5b6ccafe482da3e307d9765249a057db04db781c983566574",
                          "typeString": "literal_string \"Registration not open\""
                        },
                        "value": "Registration not open"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f76acb686b0feba5b6ccafe482da3e307d9765249a057db04db781c983566574",
                          "typeString": "literal_string \"Registration not open\""
                        }
                      ],
                      "id": 522,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6992:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6992:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 528,
                  "nodeType": "ExpressionStatement",
                  "src": "6992:68:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 530,
                        "name": "_electionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 519,
                        "src": "7084:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "expression": {
                          "id": 531,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7097:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7097:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 529,
                      "name": "registerVoter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 517,
                      "src": "7070:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint32_$_t_address_$returns$__$",
                        "typeString": "function (uint32,address)"
                      }
                    },
                    "id": 533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7070:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 534,
                  "nodeType": "ExpressionStatement",
                  "src": "7070:38:0"
                }
              ]
            },
            "functionSelector": "130d7906",
            "id": 536,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "register",
            "nameLocation": "6946:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 520,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 519,
                  "mutability": "mutable",
                  "name": "_electionId",
                  "nameLocation": "6962:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 536,
                  "src": "6955:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 518,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6955:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6954:20:0"
            },
            "returnParameters": {
              "id": 521,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6982:0:0"
            },
            "scope": 688,
            "src": "6937:178:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 562,
              "nodeType": "Block",
              "src": "7227:162:0",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 549,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 543,
                                    "name": "elections",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 40,
                                    "src": "7246:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Election_$18_storage_$",
                                      "typeString": "mapping(uint32 => struct SimpleElection.Election storage ref)"
                                    }
                                  },
                                  "id": 545,
                                  "indexExpression": {
                                    "id": 544,
                                    "name": "_electionId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 538,
                                    "src": "7256:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7246:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Election_$18_storage",
                                    "typeString": "struct SimpleElection.Election storage ref"
                                  }
                                },
                                "id": 546,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "startRegistration",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 15,
                                "src": "7246:40:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "id": 547,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "7290:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 548,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "7290:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7246:59:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 550,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7245:61:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 557,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 551,
                                    "name": "elections",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 40,
                                    "src": "7323:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Election_$18_storage_$",
                                      "typeString": "mapping(uint32 => struct SimpleElection.Election storage ref)"
                                    }
                                  },
                                  "id": 553,
                                  "indexExpression": {
                                    "id": 552,
                                    "name": "_electionId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 538,
                                    "src": "7333:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7323:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Election_$18_storage",
                                    "typeString": "struct SimpleElection.Election storage ref"
                                  }
                                },
                                "id": 554,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "endRegistration",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 17,
                                "src": "7323:38:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "expression": {
                                  "id": 555,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "7365:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 556,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "7365:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7323:57:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 558,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7322:59:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7245:136:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 560,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7244:138:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 542,
                  "id": 561,
                  "nodeType": "Return",
                  "src": "7237:145:0"
                }
              ]
            },
            "functionSelector": "e0d7c7cc",
            "id": 563,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkRegistrationOpen",
            "nameLocation": "7130:21:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 539,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 538,
                  "mutability": "mutable",
                  "name": "_electionId",
                  "nameLocation": "7159:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 563,
                  "src": "7152:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 537,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7152:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7151:20:0"
            },
            "returnParameters": {
              "id": 542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 541,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 563,
                  "src": "7217:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 540,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7217:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7216:6:0"
            },
            "scope": 688,
            "src": "7121:268:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 589,
              "nodeType": "Block",
              "src": "7469:154:0",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 576,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 570,
                                    "name": "elections",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 40,
                                    "src": "7488:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Election_$18_storage_$",
                                      "typeString": "mapping(uint32 => struct SimpleElection.Election storage ref)"
                                    }
                                  },
                                  "id": 572,
                                  "indexExpression": {
                                    "id": 571,
                                    "name": "_electionId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 565,
                                    "src": "7498:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7488:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Election_$18_storage",
                                    "typeString": "struct SimpleElection.Election storage ref"
                                  }
                                },
                                "id": 573,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "startElection",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11,
                                "src": "7488:36:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "id": 574,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "7528:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 575,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "7528:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7488:55:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 577,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7487:57:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 584,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 578,
                                    "name": "elections",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 40,
                                    "src": "7561:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Election_$18_storage_$",
                                      "typeString": "mapping(uint32 => struct SimpleElection.Election storage ref)"
                                    }
                                  },
                                  "id": 580,
                                  "indexExpression": {
                                    "id": 579,
                                    "name": "_electionId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 565,
                                    "src": "7571:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7561:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Election_$18_storage",
                                    "typeString": "struct SimpleElection.Election storage ref"
                                  }
                                },
                                "id": 581,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "endElection",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 13,
                                "src": "7561:34:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "expression": {
                                  "id": 582,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "7599:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 583,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "7599:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7561:53:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 585,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7560:55:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7487:128:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 587,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7486:130:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 569,
                  "id": 588,
                  "nodeType": "Return",
                  "src": "7479:137:0"
                }
              ]
            },
            "functionSelector": "3f8c13f0",
            "id": 590,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkElectionOpen",
            "nameLocation": "7404:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 565,
                  "mutability": "mutable",
                  "name": "_electionId",
                  "nameLocation": "7429:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 590,
                  "src": "7422:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 564,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7422:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7421:20:0"
            },
            "returnParameters": {
              "id": 569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 568,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 590,
                  "src": "7463:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 567,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7463:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7462:6:0"
            },
            "scope": 688,
            "src": "7395:228:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 620,
              "nodeType": "Block",
              "src": "7746:124:0",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 606,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 599,
                                      "name": "voters",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 65,
                                      "src": "7765:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_address_$_t_struct$_Voter_$35_storage_$_$",
                                        "typeString": "mapping(uint32 => mapping(address => struct SimpleElection.Voter storage ref))"
                                      }
                                    },
                                    "id": 601,
                                    "indexExpression": {
                                      "id": 600,
                                      "name": "_electionId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 592,
                                      "src": "7772:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7765:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$35_storage_$",
                                      "typeString": "mapping(address => struct SimpleElection.Voter storage ref)"
                                    }
                                  },
                                  "id": 603,
                                  "indexExpression": {
                                    "id": 602,
                                    "name": "voter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 594,
                                    "src": "7785:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7765:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Voter_$35_storage",
                                    "typeString": "struct SimpleElection.Voter storage ref"
                                  }
                                },
                                "id": 604,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "weight",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 32,
                                "src": "7765:33:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 605,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7802:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "7765:38:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 607,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7764:40:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 615,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 608,
                                      "name": "voters",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 65,
                                      "src": "7821:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_address_$_t_struct$_Voter_$35_storage_$_$",
                                        "typeString": "mapping(uint32 => mapping(address => struct SimpleElection.Voter storage ref))"
                                      }
                                    },
                                    "id": 610,
                                    "indexExpression": {
                                      "id": 609,
                                      "name": "_electionId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 592,
                                      "src": "7828:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7821:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$35_storage_$",
                                      "typeString": "mapping(address => struct SimpleElection.Voter storage ref)"
                                    }
                                  },
                                  "id": 612,
                                  "indexExpression": {
                                    "id": 611,
                                    "name": "voter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 594,
                                    "src": "7841:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7821:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Voter_$35_storage",
                                    "typeString": "struct SimpleElection.Voter storage ref"
                                  }
                                },
                                "id": 613,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "voted",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 34,
                                "src": "7821:32:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "74727565",
                                "id": 614,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7857:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "7821:40:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 616,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7820:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7764:98:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 618,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7763:100:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 598,
                  "id": 619,
                  "nodeType": "Return",
                  "src": "7756:107:0"
                }
              ]
            },
            "functionSelector": "8553e12d",
            "id": 621,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "voterHasRegistred",
            "nameLocation": "7638:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 595,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 592,
                  "mutability": "mutable",
                  "name": "_electionId",
                  "nameLocation": "7663:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 621,
                  "src": "7656:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 591,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7656:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 594,
                  "mutability": "mutable",
                  "name": "voter",
                  "nameLocation": "7684:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 621,
                  "src": "7676:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 593,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7676:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7655:35:0"
            },
            "returnParameters": {
              "id": 598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 597,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 621,
                  "src": "7736:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 596,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7736:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7735:6:0"
            },
            "scope": 688,
            "src": "7629:241:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 637,
              "nodeType": "Block",
              "src": "7989:56:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 630,
                          "name": "voters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "8006:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_address_$_t_struct$_Voter_$35_storage_$_$",
                            "typeString": "mapping(uint32 => mapping(address => struct SimpleElection.Voter storage ref))"
                          }
                        },
                        "id": 632,
                        "indexExpression": {
                          "id": 631,
                          "name": "_electionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 623,
                          "src": "8013:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8006:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$35_storage_$",
                          "typeString": "mapping(address => struct SimpleElection.Voter storage ref)"
                        }
                      },
                      "id": 634,
                      "indexExpression": {
                        "id": 633,
                        "name": "voter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 625,
                        "src": "8026:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8006:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Voter_$35_storage",
                        "typeString": "struct SimpleElection.Voter storage ref"
                      }
                    },
                    "id": 635,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "voted",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 34,
                    "src": "8006:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 629,
                  "id": 636,
                  "nodeType": "Return",
                  "src": "7999:39:0"
                }
              ]
            },
            "functionSelector": "d66e33ca",
            "id": 638,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "voterHasVoted",
            "nameLocation": "7885:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 623,
                  "mutability": "mutable",
                  "name": "_electionId",
                  "nameLocation": "7906:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 638,
                  "src": "7899:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 622,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7899:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 625,
                  "mutability": "mutable",
                  "name": "voter",
                  "nameLocation": "7927:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 638,
                  "src": "7919:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 624,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7919:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7898:35:0"
            },
            "returnParameters": {
              "id": 629,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 628,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 638,
                  "src": "7979:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 627,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7979:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7978:6:0"
            },
            "scope": 688,
            "src": "7876:169:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 651,
              "nodeType": "Block",
              "src": "8125:56:0",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 645,
                        "name": "electionsIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "8142:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint32_$",
                          "typeString": "mapping(bytes32 => uint32)"
                        }
                      },
                      "id": 647,
                      "indexExpression": {
                        "id": 646,
                        "name": "_electionName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 640,
                        "src": "8155:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8142:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 648,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8173:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8142:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 644,
                  "id": 650,
                  "nodeType": "Return",
                  "src": "8135:39:0"
                }
              ]
            },
            "functionSelector": "7349746b",
            "id": 652,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "electionExists",
            "nameLocation": "8060:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 641,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 640,
                  "mutability": "mutable",
                  "name": "_electionName",
                  "nameLocation": "8083:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 652,
                  "src": "8075:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 639,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8075:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8074:23:0"
            },
            "returnParameters": {
              "id": 644,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 643,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 652,
                  "src": "8119:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 642,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8119:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8118:6:0"
            },
            "scope": 688,
            "src": "8051:130:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 666,
              "nodeType": "Block",
              "src": "8258:54:0",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 659,
                          "name": "elections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40,
                          "src": "8275:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Election_$18_storage_$",
                            "typeString": "mapping(uint32 => struct SimpleElection.Election storage ref)"
                          }
                        },
                        "id": 661,
                        "indexExpression": {
                          "id": 660,
                          "name": "_electionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 654,
                          "src": "8285:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8275:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Election_$18_storage",
                          "typeString": "struct SimpleElection.Election storage ref"
                        }
                      },
                      "id": 662,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7,
                      "src": "8275:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 663,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8304:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8275:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 658,
                  "id": 665,
                  "nodeType": "Return",
                  "src": "8268:37:0"
                }
              ]
            },
            "functionSelector": "320d0573",
            "id": 667,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "electionExists",
            "nameLocation": "8196:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 655,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 654,
                  "mutability": "mutable",
                  "name": "_electionId",
                  "nameLocation": "8218:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 667,
                  "src": "8211:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 653,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8211:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8210:20:0"
            },
            "returnParameters": {
              "id": 658,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 657,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 667,
                  "src": "8252:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 656,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8252:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8251:6:0"
            },
            "scope": 688,
            "src": "8187:125:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 686,
              "nodeType": "Block",
              "src": "8438:73:0",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 676,
                                "name": "candidates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47,
                                "src": "8456:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint32_$_t_mapping$_t_uint8_$_t_struct$_Candidate_$30_storage_$_$",
                                  "typeString": "mapping(uint32 => mapping(uint8 => struct SimpleElection.Candidate storage ref))"
                                }
                              },
                              "id": 678,
                              "indexExpression": {
                                "id": 677,
                                "name": "_electionId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 669,
                                "src": "8467:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8456:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Candidate_$30_storage_$",
                                "typeString": "mapping(uint8 => struct SimpleElection.Candidate storage ref)"
                              }
                            },
                            "id": 680,
                            "indexExpression": {
                              "id": 679,
                              "name": "_candidateId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 671,
                              "src": "8480:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8456:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Candidate_$30_storage",
                              "typeString": "struct SimpleElection.Candidate storage ref"
                            }
                          },
                          "id": 681,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27,
                          "src": "8456:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8502:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8456:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 684,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "8455:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 675,
                  "id": 685,
                  "nodeType": "Return",
                  "src": "8448:56:0"
                }
              ]
            },
            "functionSelector": "b957e109",
            "id": 687,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "candidateExists",
            "nameLocation": "8327:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 672,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 669,
                  "mutability": "mutable",
                  "name": "_electionId",
                  "nameLocation": "8350:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 687,
                  "src": "8343:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 668,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8343:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 671,
                  "mutability": "mutable",
                  "name": "_candidateId",
                  "nameLocation": "8369:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 687,
                  "src": "8363:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 670,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "8363:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8342:40:0"
            },
            "returnParameters": {
              "id": 675,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 674,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 687,
                  "src": "8428:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 673,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8428:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8427:6:0"
            },
            "scope": 688,
            "src": "8318:193:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 689,
        "src": "57:8456:0",
        "usedErrors": []
      }
    ],
    "src": "32:8482:0"
  },
  "bytecode": "6080604052600780546001600160401b03191664010000000117905534801561002757600080fd5b50611615806100376000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80638553e12d11610097578063b957e10911610066578063b957e10914610294578063d66e33ca146102ce578063e0d7c7cc14610312578063edfbf9b01461032557600080fd5b80638553e12d1461021457806389f67182146102275780638bc31c841461023a578063901ab94d1461024d57600080fd5b80633f8c13f0116100d35780633f8c13f0146101be5780635b4206c4146101d15780637133a501146101e45780637349746b146101ec57600080fd5b8063028ff9f314610105578063130d79061461014a578063320d05731461015f5780633ec4f3621461019e575b600080fd5b6101336101133660046110ee565b600460209081526000928352604080842090915290825290205460ff1681565b60405160ff90911681526020015b60405180910390f35b61015d610158366004611118565b61036f565b005b61018e61016d366004611118565b63ffffffff9081166000908152600260208190526040909120015416151590565b6040519015158152602001610141565b6101b16101ac366004611118565b6103e6565b6040516101419190611133565b61018e6101cc366004611118565b610576565b61015d6101df366004611188565b6105d7565b6101b16105e8565b61018e6101fa3660046111c4565b60009081526020819052604090205463ffffffff16151590565b61018e6102223660046111dd565b6106e4565b6101336102353660046110ee565b610753565b61015d6102483660046112f7565b610796565b61027f61025b36600461140d565b60036020908152600092835260408084209091529082529020805460019091015482565b60408051928352602083019190915201610141565b61018e6102a236600461140d565b63ffffffff8216600090815260036020908152604080832060ff85168452909152902054151592915050565b61018e6102dc3660046111dd565b63ffffffff821660009081526006602090815260408083206001600160a01b038516845290915290206001015460ff1692915050565b61018e610320366004611118565b610bc8565b61035a6103333660046111dd565b60066020908152600092835260408084209091529082529020805460019091015460ff1682565b60408051928352901515602083015201610141565b61037881610bc8565b6103c15760405162461bcd60e51b81526020600482015260156024820152742932b3b4b9ba3930ba34b7b7103737ba1037b832b760591b60448201526064015b60405180910390fd5b63ffffffff166000908152600660209081526040808320338452909152902060019055565b63ffffffff80821660009081526002602081905260409091200154606091166104515760405162461bcd60e51b815260206004820152601a60248201527f54686520656c656374696f6e20646f65736e277420657869737400000000000060448201526064016103b8565b63ffffffff821660009081526005602052604081205467ffffffffffffffff81111561047f5761047f611220565b6040519080825280602002602001820160405280156104a8578160200160208202803683370190505b50905060005b63ffffffff841660009081526005602052604090205460ff8216101561056f5763ffffffff8416600090815260036020908152604080832060059092528220805491929160ff851690811061050557610505611440565b90600052602060002090602091828204019190069054906101000a900460ff1660ff1660ff16815260200190815260200160002060000154828260ff168151811061055257610552611440565b6020908102919091010152806105678161146c565b9150506104ae565b5092915050565b63ffffffff8082166000908152600260208190526040822001549091426501000000000090920416118015906105d1575063ffffffff8083166000908152600260208190526040909120015442600160481b90910490911610155b92915050565b6105e383338484610c24565b505050565b60015460609060009067ffffffffffffffff81111561060957610609611220565b604051908082528060200260200182016040528015610632578160200160208202803683370190505b50905060005b60015463ffffffff821610156106de576002600060018363ffffffff168154811061066557610665611440565b90600052602060002090600891828204019190066004029054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060000154828263ffffffff16815181106106c1576106c1611440565b6020908102919091010152806106d68161148c565b915050610638565b50919050565b63ffffffff821660009081526006602090815260408083206001600160a01b038516845290915281205415158061074c575063ffffffff831660009081526006602090815260408083206001600160a01b0386168452909152902060019081015460ff161515145b9392505050565b6005602052816000526040600020818154811061076f57600080fd5b9060005260206000209060209182820401919006915091509054906101000a900460ff1681565b60008551116107f35760405162461bcd60e51b8152602060048201526024808201527f54686572652073686f756c642062652061746c6561737420312063616e64696460448201526330ba329760e11b60648201526084016103b8565b60008881526020819052604090205463ffffffff16156108745760405162461bcd60e51b815260206004820152603660248201527f5468697320656c656374696f6e20616c7265616479206578697374732c20706c604482015275656173652073656c656374206f74686572206e616d6560501b60648201526084016103b8565b60075460408051610100810182528a815260208082018b815263ffffffff9485168385018190528b15156060850152898616608085015288861660a085015287861660c085015294861660e08401526000858152600283529390932082518155925180519293926108eb926001850192019061103c565b50604082810151600290920180546060850151608086015160a087015160c088015160e09098015163ffffffff908116600160881b0263ffffffff60881b19998216600160681b029990991667ffffffffffffffff60681b19928216600160481b026cffffffff000000000000000000199483166501000000000002949094166cffffffffffffffff0000000000199515156401000000000264ffffffffff19909716998316999099179590951793909316969096171794909416179390931790925560008b81526020819052918220805484831663ffffffff19919091168117909155600180548082018255908452600881047fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf601805460079092166004026101000a9283029290930219161790555b86518160ff161015610b0157610aef82888360ff1681518110610a4157610a41611440565b6020026020010151836001610a5691906114b0565b6040805180820182528381526000602080830182815263ffffffff979097168083526003825284832060ff96871680855290835285842094518555975160019485015580835260048252848320968352958152838220805460ff19168817905594815260058552918220805491820181558252908390209281049092018054601f9093166101000a918202199092169202919091179055565b80610af98161146c565b915050610a1c565b507f8c22f42e1642c0f410bc4e3debf771a1355ec556bdaf3ce7428e555196569c968989838a89898989604051610b3f9897969594939291906114d5565b60405180910390a16007805463ffffffff16906000610b5d8361148c565b91906101000a81548163ffffffff021916908363ffffffff160217905550506007600481819054906101000a900463ffffffff1680929190610b9e9061148c565b91906101000a81548163ffffffff021916908363ffffffff16021790555050505050505050505050565b63ffffffff808216600090815260026020819052604082200154909142600160681b90920416118015906105d157505063ffffffff9081166000908152600260208190526040909120015442600160881b909104909116101590565b63ffffffff8085166000908152600260208190526040909120015416610c8c5760405162461bcd60e51b815260206004820152601a60248201527f54686520656c656374696f6e20646f65736e277420657869737400000000000060448201526064016103b8565b610c9584610576565b610cda5760405162461bcd60e51b8152602060048201526016602482015275151a1948195b1958dd1a5bdb881a5cc818db1bdcd95960521b60448201526064016103b8565b63ffffffff841660009081526002602081905260409091200154640100000000900460ff1615610d5f57610d0e84846106e4565b610d5a5760405162461bcd60e51b815260206004820152601760248201527f566f746572206861736e2774207265676973746572656400000000000000000060448201526064016103b8565b610d8d565b63ffffffff841660009081526006602090815260408083206001600160a01b03871684529091529020600190555b63ffffffff841660009081526006602090815260408083206001600160a01b038716845290915290206001015460ff1615610e0a5760405162461bcd60e51b815260206004820152601860248201527f566f7465722068617320616c726561647920566f74656421000000000000000060448201526064016103b8565b63ffffffff841660009081526006602090815260408083206001600160a01b0387168452909152902054811115610e835760405162461bcd60e51b815260206004820152601f60248201527f566f74657220646f206e6f74206861766520736f206d616e7920766f7465730060448201526064016103b8565b63ffffffff8416600090815260036020908152604080832060ff86168452909152902054610ef35760405162461bcd60e51b815260206004820152601a60248201527f496e76616c69642063616e64696461746520746f20566f74652100000000000060448201526064016103b8565b63ffffffff8416600090815260036020908152604080832060ff86168452909152902060010154610f2590829061157b565b63ffffffff8516600081815260036020908152604080832060ff88168452825280832060010194909455918152600682528281206001600160a01b03871682529091522054610f75908290611593565b63ffffffff851660009081526006602090815260408083206001600160a01b03881684529091529020819055610fdf5763ffffffff841660009081526006602090815260408083206001600160a01b038716845290915290206001908101805460ff191690911790555b6040805163ffffffff861681526001600160a01b038516602082015260ff8416818301526060810183905290517f66eb9354084da3c9417bfaeb0f63de26c8976282f67e1687af5b90e8d3fbd3879181900360800190a150505050565b828054611048906115aa565b90600052602060002090601f01602090048101928261106a57600085556110b0565b82601f1061108357805160ff19168380011785556110b0565b828001600101855582156110b0579182015b828111156110b0578251825591602001919060010190611095565b506110bc9291506110c0565b5090565b5b808211156110bc57600081556001016110c1565b803563ffffffff811681146110e957600080fd5b919050565b6000806040838503121561110157600080fd5b61110a836110d5565b946020939093013593505050565b60006020828403121561112a57600080fd5b61074c826110d5565b6020808252825182820181905260009190848201906040850190845b8181101561116b5783518352928401929184019160010161114f565b50909695505050505050565b803560ff811681146110e957600080fd5b60008060006060848603121561119d57600080fd5b6111a6846110d5565b92506111b460208501611177565b9150604084013590509250925092565b6000602082840312156111d657600080fd5b5035919050565b600080604083850312156111f057600080fd5b6111f9836110d5565b915060208301356001600160a01b038116811461121557600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561125f5761125f611220565b604052919050565b803580151581146110e957600080fd5b600082601f83011261128857600080fd5b8135602067ffffffffffffffff8211156112a4576112a4611220565b8160051b6112b3828201611236565b92835284810182019282810190878511156112cd57600080fd5b83870192505b848310156112ec578235825291830191908301906112d3565b979650505050505050565b600080600080600080600080610100898b03121561131457600080fd5b883597506020808a013567ffffffffffffffff8082111561133457600080fd5b818c0191508c601f83011261134857600080fd5b81358181111561135a5761135a611220565b61136c601f8201601f19168501611236565b8181528e8583860101111561138057600080fd5b81858501868301376000858383010152809b5050506113a160408d01611267565b985060608c01359250808311156113b757600080fd5b50506113c58b828c01611277565b9550506113d460808a016110d5565b93506113e260a08a016110d5565b92506113f060c08a016110d5565b91506113fe60e08a016110d5565b90509295985092959890939650565b6000806040838503121561142057600080fd5b611429836110d5565b915061143760208401611177565b90509250929050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff81141561148357611483611456565b60010192915050565b600063ffffffff808316818114156114a6576114a6611456565b6001019392505050565b600060ff821660ff84168060ff038211156114cd576114cd611456565b019392505050565b60006101008a8352602081818501528a518083860152600092505b8083101561150f578b83018201518584016101200152918101916114f0565b8083111561152257600061012082870101525b601f01601f19168401610120019250611546915050604083018963ffffffff169052565b951515606082015263ffffffff948516608082015292841660a084015290831660c083015290911660e0909101529392505050565b6000821982111561158e5761158e611456565b500190565b6000828210156115a5576115a5611456565b500390565b600181811c908216806115be57607f821691505b602082108114156106de57634e487b7160e01b600052602260045260246000fdfea2646970667358221220209d30f6c7212c78b23908d72283e9edb01da4f37ca81558b9f076781272845264736f6c634300080c0033",
  "bytecodeSha1": "a175f7c0d62fb94d8d1465e0b51f825f4c5057e6",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "SimpleElection",
  "coverageMap": {
    "branches": {
      "0": {
        "SimpleElection.createElection": {
          "43": [
            2453,
            2475,
            true
          ]
        },
        "SimpleElection.register": {
          "42": [
            7000,
            7034,
            true
          ]
        },
        "SimpleElection.voterVote": {
          "44": [
            4249,
            4279,
            true
          ],
          "45": [
            4320,
            4361,
            false
          ],
          "46": [
            4402,
            4440,
            true
          ],
          "47": [
            4603,
            4638,
            true
          ],
          "48": [
            4719,
            4764,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "SimpleElection.addCandidate": {
          "23": [
            3674,
            3742
          ],
          "24": [
            3752,
            3809
          ],
          "25": [
            3819,
            3865
          ]
        },
        "SimpleElection.candidateExists": {
          "2": [
            8448,
            8504
          ]
        },
        "SimpleElection.checkElectionOpen": {
          "11": [
            7479,
            7616
          ]
        },
        "SimpleElection.checkRegistrationOpen": {
          "30": [
            7237,
            7382
          ]
        },
        "SimpleElection.createElection": {
          "17": [
            2445,
            2516
          ],
          "18": [
            2527,
            2650
          ],
          "19": [
            2703,
            2963
          ],
          "20": [
            2973,
            3005
          ],
          "21": [
            3015,
            3048
          ],
          "22": [
            3120,
            3167
          ],
          "26": [
            3101,
            3104
          ],
          "27": [
            3187,
            3435
          ],
          "28": [
            3445,
            3460
          ],
          "29": [
            3470,
            3485
          ]
        },
        "SimpleElection.electionExists": {
          "0": [
            8268,
            8305
          ],
          "1": [
            8135,
            8174
          ]
        },
        "SimpleElection.getCandidatesForElection": {
          "7": [
            6397,
            6463
          ],
          "8": [
            6655,
            6744
          ],
          "9": [
            6638,
            6641
          ],
          "10": [
            6754,
            6767
          ]
        },
        "SimpleElection.getCurrentElections": {
          "13": [
            6131,
            6178
          ],
          "14": [
            6112,
            6115
          ],
          "15": [
            6198,
            6211
          ]
        },
        "SimpleElection.register": {
          "4": [
            6992,
            7060
          ],
          "6": [
            7070,
            7108
          ]
        },
        "SimpleElection.registerVoter": {
          "5": [
            6887,
            6924
          ]
        },
        "SimpleElection.vote": {
          "12": [
            5812,
            5869
          ]
        },
        "SimpleElection.voterHasRegistred": {
          "16": [
            7756,
            7863
          ]
        },
        "SimpleElection.voterHasVoted": {
          "3": [
            7999,
            8038
          ]
        },
        "SimpleElection.voterVote": {
          "31": [
            4165,
            4231
          ],
          "32": [
            4241,
            4306
          ],
          "33": [
            4377,
            4497
          ],
          "34": [
            4528,
            4562
          ],
          "35": [
            4582,
            4688
          ],
          "36": [
            4698,
            4821
          ],
          "37": [
            4831,
            4946
          ],
          "38": [
            5011,
            5142
          ],
          "39": [
            5205,
            5310
          ],
          "40": [
            5460,
            5500
          ],
          "41": [
            5521,
            5575
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101005760003560e01c80638553e12d11610097578063b957e10911610066578063b957e10914610294578063d66e33ca146102ce578063e0d7c7cc14610312578063edfbf9b01461032557600080fd5b80638553e12d1461021457806389f67182146102275780638bc31c841461023a578063901ab94d1461024d57600080fd5b80633f8c13f0116100d35780633f8c13f0146101be5780635b4206c4146101d15780637133a501146101e45780637349746b146101ec57600080fd5b8063028ff9f314610105578063130d79061461014a578063320d05731461015f5780633ec4f3621461019e575b600080fd5b6101336101133660046110ee565b600460209081526000928352604080842090915290825290205460ff1681565b60405160ff90911681526020015b60405180910390f35b61015d610158366004611118565b61036f565b005b61018e61016d366004611118565b63ffffffff9081166000908152600260208190526040909120015416151590565b6040519015158152602001610141565b6101b16101ac366004611118565b6103e6565b6040516101419190611133565b61018e6101cc366004611118565b610576565b61015d6101df366004611188565b6105d7565b6101b16105e8565b61018e6101fa3660046111c4565b60009081526020819052604090205463ffffffff16151590565b61018e6102223660046111dd565b6106e4565b6101336102353660046110ee565b610753565b61015d6102483660046112f7565b610796565b61027f61025b36600461140d565b60036020908152600092835260408084209091529082529020805460019091015482565b60408051928352602083019190915201610141565b61018e6102a236600461140d565b63ffffffff8216600090815260036020908152604080832060ff85168452909152902054151592915050565b61018e6102dc3660046111dd565b63ffffffff821660009081526006602090815260408083206001600160a01b038516845290915290206001015460ff1692915050565b61018e610320366004611118565b610bc8565b61035a6103333660046111dd565b60066020908152600092835260408084209091529082529020805460019091015460ff1682565b60408051928352901515602083015201610141565b61037881610bc8565b6103c15760405162461bcd60e51b81526020600482015260156024820152742932b3b4b9ba3930ba34b7b7103737ba1037b832b760591b60448201526064015b60405180910390fd5b63ffffffff166000908152600660209081526040808320338452909152902060019055565b63ffffffff80821660009081526002602081905260409091200154606091166104515760405162461bcd60e51b815260206004820152601a60248201527f54686520656c656374696f6e20646f65736e277420657869737400000000000060448201526064016103b8565b63ffffffff821660009081526005602052604081205467ffffffffffffffff81111561047f5761047f611220565b6040519080825280602002602001820160405280156104a8578160200160208202803683370190505b50905060005b63ffffffff841660009081526005602052604090205460ff8216101561056f5763ffffffff8416600090815260036020908152604080832060059092528220805491929160ff851690811061050557610505611440565b90600052602060002090602091828204019190069054906101000a900460ff1660ff1660ff16815260200190815260200160002060000154828260ff168151811061055257610552611440565b6020908102919091010152806105678161146c565b9150506104ae565b5092915050565b63ffffffff8082166000908152600260208190526040822001549091426501000000000090920416118015906105d1575063ffffffff8083166000908152600260208190526040909120015442600160481b90910490911610155b92915050565b6105e383338484610c24565b505050565b60015460609060009067ffffffffffffffff81111561060957610609611220565b604051908082528060200260200182016040528015610632578160200160208202803683370190505b50905060005b60015463ffffffff821610156106de576002600060018363ffffffff168154811061066557610665611440565b90600052602060002090600891828204019190066004029054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060000154828263ffffffff16815181106106c1576106c1611440565b6020908102919091010152806106d68161148c565b915050610638565b50919050565b63ffffffff821660009081526006602090815260408083206001600160a01b038516845290915281205415158061074c575063ffffffff831660009081526006602090815260408083206001600160a01b0386168452909152902060019081015460ff161515145b9392505050565b6005602052816000526040600020818154811061076f57600080fd5b9060005260206000209060209182820401919006915091509054906101000a900460ff1681565b60008551116107f35760405162461bcd60e51b8152602060048201526024808201527f54686572652073686f756c642062652061746c6561737420312063616e64696460448201526330ba329760e11b60648201526084016103b8565b60008881526020819052604090205463ffffffff16156108745760405162461bcd60e51b815260206004820152603660248201527f5468697320656c656374696f6e20616c7265616479206578697374732c20706c604482015275656173652073656c656374206f74686572206e616d6560501b60648201526084016103b8565b60075460408051610100810182528a815260208082018b815263ffffffff9485168385018190528b15156060850152898616608085015288861660a085015287861660c085015294861660e08401526000858152600283529390932082518155925180519293926108eb926001850192019061103c565b50604082810151600290920180546060850151608086015160a087015160c088015160e09098015163ffffffff908116600160881b0263ffffffff60881b19998216600160681b029990991667ffffffffffffffff60681b19928216600160481b026cffffffff000000000000000000199483166501000000000002949094166cffffffffffffffff0000000000199515156401000000000264ffffffffff19909716998316999099179590951793909316969096171794909416179390931790925560008b81526020819052918220805484831663ffffffff19919091168117909155600180548082018255908452600881047fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf601805460079092166004026101000a9283029290930219161790555b86518160ff161015610b0157610aef82888360ff1681518110610a4157610a41611440565b6020026020010151836001610a5691906114b0565b6040805180820182528381526000602080830182815263ffffffff979097168083526003825284832060ff96871680855290835285842094518555975160019485015580835260048252848320968352958152838220805460ff19168817905594815260058552918220805491820181558252908390209281049092018054601f9093166101000a918202199092169202919091179055565b80610af98161146c565b915050610a1c565b507f8c22f42e1642c0f410bc4e3debf771a1355ec556bdaf3ce7428e555196569c968989838a89898989604051610b3f9897969594939291906114d5565b60405180910390a16007805463ffffffff16906000610b5d8361148c565b91906101000a81548163ffffffff021916908363ffffffff160217905550506007600481819054906101000a900463ffffffff1680929190610b9e9061148c565b91906101000a81548163ffffffff021916908363ffffffff16021790555050505050505050505050565b63ffffffff808216600090815260026020819052604082200154909142600160681b90920416118015906105d157505063ffffffff9081166000908152600260208190526040909120015442600160881b909104909116101590565b63ffffffff8085166000908152600260208190526040909120015416610c8c5760405162461bcd60e51b815260206004820152601a60248201527f54686520656c656374696f6e20646f65736e277420657869737400000000000060448201526064016103b8565b610c9584610576565b610cda5760405162461bcd60e51b8152602060048201526016602482015275151a1948195b1958dd1a5bdb881a5cc818db1bdcd95960521b60448201526064016103b8565b63ffffffff841660009081526002602081905260409091200154640100000000900460ff1615610d5f57610d0e84846106e4565b610d5a5760405162461bcd60e51b815260206004820152601760248201527f566f746572206861736e2774207265676973746572656400000000000000000060448201526064016103b8565b610d8d565b63ffffffff841660009081526006602090815260408083206001600160a01b03871684529091529020600190555b63ffffffff841660009081526006602090815260408083206001600160a01b038716845290915290206001015460ff1615610e0a5760405162461bcd60e51b815260206004820152601860248201527f566f7465722068617320616c726561647920566f74656421000000000000000060448201526064016103b8565b63ffffffff841660009081526006602090815260408083206001600160a01b0387168452909152902054811115610e835760405162461bcd60e51b815260206004820152601f60248201527f566f74657220646f206e6f74206861766520736f206d616e7920766f7465730060448201526064016103b8565b63ffffffff8416600090815260036020908152604080832060ff86168452909152902054610ef35760405162461bcd60e51b815260206004820152601a60248201527f496e76616c69642063616e64696461746520746f20566f74652100000000000060448201526064016103b8565b63ffffffff8416600090815260036020908152604080832060ff86168452909152902060010154610f2590829061157b565b63ffffffff8516600081815260036020908152604080832060ff88168452825280832060010194909455918152600682528281206001600160a01b03871682529091522054610f75908290611593565b63ffffffff851660009081526006602090815260408083206001600160a01b03881684529091529020819055610fdf5763ffffffff841660009081526006602090815260408083206001600160a01b038716845290915290206001908101805460ff191690911790555b6040805163ffffffff861681526001600160a01b038516602082015260ff8416818301526060810183905290517f66eb9354084da3c9417bfaeb0f63de26c8976282f67e1687af5b90e8d3fbd3879181900360800190a150505050565b828054611048906115aa565b90600052602060002090601f01602090048101928261106a57600085556110b0565b82601f1061108357805160ff19168380011785556110b0565b828001600101855582156110b0579182015b828111156110b0578251825591602001919060010190611095565b506110bc9291506110c0565b5090565b5b808211156110bc57600081556001016110c1565b803563ffffffff811681146110e957600080fd5b919050565b6000806040838503121561110157600080fd5b61110a836110d5565b946020939093013593505050565b60006020828403121561112a57600080fd5b61074c826110d5565b6020808252825182820181905260009190848201906040850190845b8181101561116b5783518352928401929184019160010161114f565b50909695505050505050565b803560ff811681146110e957600080fd5b60008060006060848603121561119d57600080fd5b6111a6846110d5565b92506111b460208501611177565b9150604084013590509250925092565b6000602082840312156111d657600080fd5b5035919050565b600080604083850312156111f057600080fd5b6111f9836110d5565b915060208301356001600160a01b038116811461121557600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561125f5761125f611220565b604052919050565b803580151581146110e957600080fd5b600082601f83011261128857600080fd5b8135602067ffffffffffffffff8211156112a4576112a4611220565b8160051b6112b3828201611236565b92835284810182019282810190878511156112cd57600080fd5b83870192505b848310156112ec578235825291830191908301906112d3565b979650505050505050565b600080600080600080600080610100898b03121561131457600080fd5b883597506020808a013567ffffffffffffffff8082111561133457600080fd5b818c0191508c601f83011261134857600080fd5b81358181111561135a5761135a611220565b61136c601f8201601f19168501611236565b8181528e8583860101111561138057600080fd5b81858501868301376000858383010152809b5050506113a160408d01611267565b985060608c01359250808311156113b757600080fd5b50506113c58b828c01611277565b9550506113d460808a016110d5565b93506113e260a08a016110d5565b92506113f060c08a016110d5565b91506113fe60e08a016110d5565b90509295985092959890939650565b6000806040838503121561142057600080fd5b611429836110d5565b915061143760208401611177565b90509250929050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff81141561148357611483611456565b60010192915050565b600063ffffffff808316818114156114a6576114a6611456565b6001019392505050565b600060ff821660ff84168060ff038211156114cd576114cd611456565b019392505050565b60006101008a8352602081818501528a518083860152600092505b8083101561150f578b83018201518584016101200152918101916114f0565b8083111561152257600061012082870101525b601f01601f19168401610120019250611546915050604083018963ffffffff169052565b951515606082015263ffffffff948516608082015292841660a084015290831660c083015290911660e0909101529392505050565b6000821982111561158e5761158e611456565b500190565b6000828210156115a5576115a5611456565b500390565b600181811c908216806115be57607f821691505b602082108114156106de57634e487b7160e01b600052602260045260246000fdfea2646970667358221220209d30f6c7212c78b23908d72283e9edb01da4f37ca81558b9f076781272845264736f6c634300080c0033",
  "deployedSourceMap": "57:8456:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1021:65;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;611:4:1;599:17;;;581:36;;569:2;554:18;1021:65:0;;;;;;;;6937:178;;;;;;:::i;:::-;;:::i;:::-;;8187:125;;;;;;:::i;:::-;8275:22;;;;8252:4;8275:22;;;:9;:22;;;;;;;;:25;;;:30;;;8187:125;;;;1078:14:1;;1071:22;1053:41;;1041:2;1026:18;8187:125:0;913:187:1;6266:508:0;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;7395:228::-;;;;;;:::i;:::-;;:::i;5618:258::-;;;;;;:::i;:::-;;:::i;5910:308::-;;;:::i;8051:130::-;;;;;;:::i;:::-;8119:4;8142:27;;;;;;;;;;;;;:32;;;8051:130;7629:241;;;;;;:::i;:::-;;:::i;1139:48::-;;;;;;:::i;:::-;;:::i;1863:1629::-;;;;;;:::i;:::-;;:::i;950:64::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6186:25:1;;;6242:2;6227:18;;6220:34;;;;6159:18;950:64:0;6012:248:1;8318:193:0;;;;;;:::i;:::-;8456:23;;;8428:4;8456:23;;;:10;:23;;;;;;;;:37;;;;;;;;;;:42;:47;;8318:193;;;;;7876:169;;;;;;:::i;:::-;8006:19;;;7979:4;8006:19;;;:6;:19;;;;;;;;-1:-1:-1;;;;;8006:26:0;;;;;;;;;:32;;;;;7876:169;;;;;7121:268;;;;;;:::i;:::-;;:::i;1241:58::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6433:25:1;;;6501:14;;6494:22;6489:2;6474:18;;6467:50;6406:18;1241:58:0;6265:258:1;6937:178:0;7000:34;7022:11;7000:21;:34::i;:::-;6992:68;;;;-1:-1:-1;;;6992:68:0;;6730:2:1;6992:68:0;;;6712:21:1;6769:2;6749:18;;;6742:30;-1:-1:-1;;;6788:18:1;;;6781:51;6849:18;;6992:68:0;;;;;;;;;6887:19;;;;;;:6;:19;;;;;;;;7097:10;6887:26;;;;;;;6923:1;6887:37;;6937:178::o;6266:508::-;8275:22;;;;8252:4;8275:22;;;:9;:22;;;;;;;;:25;;6365:16;;8275:25;6397:66;;;;-1:-1:-1;;;6397:66:0;;7080:2:1;6397:66:0;;;7062:21:1;7119:2;7099:18;;;7092:30;7158:28;7138:18;;;7131:56;7204:18;;6397:66:0;6878:350:1;6397:66:0;6526:27;;;6473:23;6526:27;;;:14;:27;;;;;:34;6499:71;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6499:71:0;;6473:97;;6585:7;6580:164;6602:27;;;;;;;:14;:27;;;;;:34;6598:38;;;;6580:164;;;6667:23;;;;;;;:10;:23;;;;;;;;6691:14;:27;;;;;:30;;6667:23;;;6691:30;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;6667:55;;;;;;;;;;;;;;;:77;;;6655:6;6662:1;6655:9;;;;;;;;;;:::i;:::-;;;;;;;;;;:89;6638:3;;;;:::i;:::-;;;;6580:164;;;-1:-1:-1;6761:6:0;6266:508;-1:-1:-1;;6266:508:0:o;7395:228::-;7488:22;;;;7463:4;7488:22;;;:9;:22;;;;;;;:36;;7463:4;;7528:15;7488:36;;;;;:55;;;;7487:128;;-1:-1:-1;7561:22:0;;;;;;;;:9;:22;;;;;;;;:34;;7599:15;-1:-1:-1;;;7561:34:0;;;;;;:53;;7487:128;7479:137;7395:228;-1:-1:-1;;7395:228:0:o;5618:258::-;5812:57;5822:11;5835:10;5847:12;5861:7;5812:9;:57::i;:::-;5618:258;;;:::o;5910:308::-;6030:16;:23;5962:16;;5990:23;;6016:38;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6016:38:0;;5990:64;;6069:8;6064:125;6087:16;:23;6083:27;;;;6064:125;;;6143:9;:30;6153:16;6170:1;6153:19;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;6143:30;;;;;;;;;;;;;;;:35;;;6131:6;6138:1;6131:9;;;;;;;;;;:::i;:::-;;;;;;;;;;:47;6112:3;;;;:::i;:::-;;;;6064:125;;;-1:-1:-1;6205:6:0;5910:308;-1:-1:-1;5910:308:0:o;7629:241::-;7765:19;;;7736:4;7765:19;;;:6;:19;;;;;;;;-1:-1:-1;;;;;7765:26:0;;;;;;;;;:33;:38;;;7764:98;;-1:-1:-1;7821:19:0;;;;;;;:6;:19;;;;;;;;-1:-1:-1;;;;;7821:26:0;;;;;;;;;:32;;;;;;;:40;;;7764:98;7756:107;7629:241;-1:-1:-1;;;7629:241:0:o;1139:48::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1863:1629::-;2474:1;2453:11;:18;:22;2445:71;;;;-1:-1:-1;;;2445:71:0;;8085:2:1;2445:71:0;;;8067:21:1;8124:2;8104:18;;;8097:30;8163:34;8143:18;;;8136:62;-1:-1:-1;;;8214:18:1;;;8207:34;8258:19;;2445:71:0;7883:400:1;2445:71:0;8119:4;8142:27;;;;;;;;;;;;;:32;2527:123;;;;-1:-1:-1;;;2527:123:0;;8490:2:1;2527:123:0;;;8472:21:1;8529:2;8509:18;;;8502:30;8568:34;8548:18;;;8541:62;-1:-1:-1;;;8619:18:1;;;8612:52;8681:19;;2527:123:0;8288:418:1;2527:123:0;2680:13;;2727:236;;;2680:13;2727:236;;;;;;;;;;;;;;2680:13;;;;2727:236;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2660:17;2703:21;;;:9;:21;;;;;;:260;;;;;;;;2727:236;;2703:21;:260;;2680:13;2703:260;;;;;;:::i;:::-;-1:-1:-1;2703:260:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2703:260:0;-1:-1:-1;;;;2703:260:0;;;-1:-1:-1;;;2703:260:0;;;;;-1:-1:-1;;;;2703:260:0;;;-1:-1:-1;;;2703:260:0;-1:-1:-1;;2703:260:0;;;;;;;;;-1:-1:-1;;2703:260:0;;;;;-1:-1:-1;;2703:260:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2973:19;;;;;;;;;;:32;;;;;-1:-1:-1;;2973:32:0;;;;;;;;;2703:260;3015:33;;;;;;;;;;;;;;;;;;;;;2703:260;3015:33;2703:260;3015:33;;;;;;;;;;;;;3059:119;3081:11;:18;3077:1;:22;;;3059:119;;;3120:47;3133:10;3145:11;3157:1;3145:14;;;;;;;;;;:::i;:::-;;;;;;;3161:1;3165;3161:5;;;;:::i;:::-;3714:28;;;;;;;;;;;-1:-1:-1;3714:28:0;;;;;;;3674:23;;;;;;;;:10;:23;;;;;:37;;;;;;;;;;;;;:68;;;;;;;;;;;3752:26;;;:13;:26;;;;;:42;;;;;;;;;:57;;-1:-1:-1;;3752:57:0;;;;;3819:27;;;:14;:27;;;;;:46;;;;;;;;;;;;;;;;;;;;;;;;;3752:57;3819:46;;;;;;;;;;;;;;;;3540:332;3120:47;3101:3;;;;:::i;:::-;;;;3059:119;;;;3192:243;3221:5;3240:12;3266:10;3290:19;3323:14;3351:12;3377:18;3409:16;3192:243;;;;;;;;;;;;;:::i;:::-;;;;;;;;3445:13;:15;;;;;:13;:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;3470:13;;:15;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;2435:1057;1863:1629;;;;;;;;:::o;7121:268::-;7246:22;;;;7217:4;7246:22;;;:9;:22;;;;;;;:40;;7217:4;;7290:15;-1:-1:-1;;;7246:40:0;;;;:59;;;;7245:136;;-1:-1:-1;;7323:22:0;;;;;;;;:9;:22;;;;;;;;:38;;7365:15;-1:-1:-1;;;7323:38:0;;;;;;:57;;;7121:268::o;3929:1653::-;8275:22;;;;8252:4;8275:22;;;:9;:22;;;;;;;;:25;;;4165:66;;;;-1:-1:-1;;;4165:66:0;;7080:2:1;4165:66:0;;;7062:21:1;7119:2;7099:18;;;7092:30;7158:28;7138:18;;;7131:56;7204:18;;4165:66:0;6878:350:1;4165:66:0;4249:30;4267:11;4249:17;:30::i;:::-;4241:65;;;;-1:-1:-1;;;4241:65:0;;10398:2:1;4241:65:0;;;10380:21:1;10437:2;10417:18;;;10410:30;-1:-1:-1;;;10456:18:1;;;10449:52;10518:18;;4241:65:0;10196:346:1;4241:65:0;4320:22;;;;;;;:9;:22;;;;;;;;:41;;;;;;;4316:257;;;4402:38;4420:11;4433:6;4402:17;:38::i;:::-;4377:120;;;;-1:-1:-1;;;4377:120:0;;10749:2:1;4377:120:0;;;10731:21:1;10788:2;10768:18;;;10761:30;10827:25;10807:18;;;10800:53;10870:18;;4377:120:0;10547:347:1;4377:120:0;4316:257;;;6887:19;;;;;;;:6;:19;;;;;;;;-1:-1:-1;;;;;6887:26:0;;;;;;;;;6923:1;6887:37;;4528:34;8006:19;;;7979:4;8006:19;;;:6;:19;;;;;;;;-1:-1:-1;;;;;8006:26:0;;;;;;;;;:32;;;;;4603:35;4582:106;;;;-1:-1:-1;;;4582:106:0;;11101:2:1;4582:106:0;;;11083:21:1;11140:2;11120:18;;;11113:30;11179:26;11159:18;;;11152:54;11223:18;;4582:106:0;10899:348:1;4582:106:0;4730:19;;;;;;;:6;:19;;;;;;;;-1:-1:-1;;;;;4730:27:0;;;;;;;;;:34;4719:45;;;4698:123;;;;-1:-1:-1;;;4698:123:0;;11454:2:1;4698:123:0;;;11436:21:1;11493:2;11473:18;;;11466:30;11532:33;11512:18;;;11505:61;11583:18;;4698:123:0;11252:355:1;4698:123:0;8456:23;;;8428:4;8456:23;;;:10;:23;;;;;;;;:37;;;;;;;;;;:42;4831:115;;;;-1:-1:-1;;;4831:115:0;;11814:2:1;4831:115:0;;;11796:21:1;11853:2;11833:18;;;11826:30;11892:28;11872:18;;;11865:56;11938:18;;4831:115:0;11612:350:1;4831:115:0;5073:23;;;;;;;:10;:23;;;;;;;;:37;;;;;;;;;;:47;;;:69;;5135:7;;5073:69;:::i;:::-;5011:23;;;;;;;:10;:23;;;;;;;;:37;;;;;;;;;;:47;;:131;;;;5254:19;;;:6;:19;;;;;-1:-1:-1;;;;;5254:27:0;;;;;;;;:34;:56;;5303:7;;5254:56;:::i;:::-;5205:19;;;;;;;:6;:19;;;;;;;;-1:-1:-1;;;;;5205:27:0;;;;;;;;;:105;;;5401:110;;5460:19;;;;;;;:6;:19;;;;;;;;-1:-1:-1;;;;;5460:27:0;;;;;;;;;5496:4;5460:33;;;:40;;-1:-1:-1;;5460:40:0;;;;;;5401:110;5526:49;;;12485:10:1;12473:23;;12455:42;;-1:-1:-1;;;;;12533:32:1;;12528:2;12513:18;;12506:60;12614:4;12602:17;;12582:18;;;12575:45;12651:2;12636:18;;12629:34;;;5526:49:0;;;;;;;12442:3:1;5526:49:0;;;3929:1653;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:163:1;81:20;;141:10;130:22;;120:33;;110:61;;167:1;164;157:12;110:61;14:163;;;:::o;182:252::-;249:6;257;310:2;298:9;289:7;285:23;281:32;278:52;;;326:1;323;316:12;278:52;349:28;367:9;349:28;:::i;:::-;339:38;424:2;409:18;;;;396:32;;-1:-1:-1;;;182:252:1:o;628:184::-;686:6;739:2;727:9;718:7;714:23;710:32;707:52;;;755:1;752;745:12;707:52;778:28;796:9;778:28;:::i;1105:632::-;1276:2;1328:21;;;1398:13;;1301:18;;;1420:22;;;1247:4;;1276:2;1499:15;;;;1473:2;1458:18;;;1247:4;1542:169;1556:6;1553:1;1550:13;1542:169;;;1617:13;;1605:26;;1686:15;;;;1651:12;;;;1578:1;1571:9;1542:169;;;-1:-1:-1;1728:3:1;;1105:632;-1:-1:-1;;;;;;1105:632:1:o;1742:156::-;1808:20;;1868:4;1857:16;;1847:27;;1837:55;;1888:1;1885;1878:12;1903:322;1977:6;1985;1993;2046:2;2034:9;2025:7;2021:23;2017:32;2014:52;;;2062:1;2059;2052:12;2014:52;2085:28;2103:9;2085:28;:::i;:::-;2075:38;;2132:36;2164:2;2153:9;2149:18;2132:36;:::i;:::-;2122:46;;2215:2;2204:9;2200:18;2187:32;2177:42;;1903:322;;;;;:::o;2230:180::-;2289:6;2342:2;2330:9;2321:7;2317:23;2313:32;2310:52;;;2358:1;2355;2348:12;2310:52;-1:-1:-1;2381:23:1;;2230:180;-1:-1:-1;2230:180:1:o;2415:358::-;2482:6;2490;2543:2;2531:9;2522:7;2518:23;2514:32;2511:52;;;2559:1;2556;2549:12;2511:52;2582:28;2600:9;2582:28;:::i;:::-;2572:38;-1:-1:-1;2660:2:1;2645:18;;2632:32;-1:-1:-1;;;;;2693:31:1;;2683:42;;2673:70;;2739:1;2736;2729:12;2673:70;2762:5;2752:15;;;2415:358;;;;;:::o;3035:127::-;3096:10;3091:3;3087:20;3084:1;3077:31;3127:4;3124:1;3117:15;3151:4;3148:1;3141:15;3167:275;3238:2;3232:9;3303:2;3284:13;;-1:-1:-1;;3280:27:1;3268:40;;3338:18;3323:34;;3359:22;;;3320:62;3317:88;;;3385:18;;:::i;:::-;3421:2;3414:22;3167:275;;-1:-1:-1;3167:275:1:o;3447:160::-;3512:20;;3568:13;;3561:21;3551:32;;3541:60;;3597:1;3594;3587:12;3612:712;3666:5;3719:3;3712:4;3704:6;3700:17;3696:27;3686:55;;3737:1;3734;3727:12;3686:55;3773:6;3760:20;3799:4;3822:18;3818:2;3815:26;3812:52;;;3844:18;;:::i;:::-;3890:2;3887:1;3883:10;3913:28;3937:2;3933;3929:11;3913:28;:::i;:::-;3975:15;;;4045;;;4041:24;;;4006:12;;;;4077:15;;;4074:35;;;4105:1;4102;4095:12;4074:35;4141:2;4133:6;4129:15;4118:26;;4153:142;4169:6;4164:3;4161:15;4153:142;;;4235:17;;4223:30;;4186:12;;;;4273;;;;4153:142;;;4313:5;3612:712;-1:-1:-1;;;;;;;3612:712:1:o;4329:1419::-;4479:6;4487;4495;4503;4511;4519;4527;4535;4588:3;4576:9;4567:7;4563:23;4559:33;4556:53;;;4605:1;4602;4595:12;4556:53;4641:9;4628:23;4618:33;;4670:2;4723;4712:9;4708:18;4695:32;4746:18;4787:2;4779:6;4776:14;4773:34;;;4803:1;4800;4793:12;4773:34;4841:6;4830:9;4826:22;4816:32;;4886:7;4879:4;4875:2;4871:13;4867:27;4857:55;;4908:1;4905;4898:12;4857:55;4944:2;4931:16;4966:2;4962;4959:10;4956:36;;;4972:18;;:::i;:::-;5014:53;5057:2;5038:13;;-1:-1:-1;;5034:27:1;5030:36;;5014:53;:::i;:::-;5090:2;5083:5;5076:17;5130:7;5125:2;5120;5116;5112:11;5108:20;5105:33;5102:53;;;5151:1;5148;5141:12;5102:53;5206:2;5201;5197;5193:11;5188:2;5181:5;5177:14;5164:45;5250:1;5245:2;5240;5233:5;5229:14;5225:23;5218:34;5271:5;5261:15;;;;5295:35;5326:2;5315:9;5311:18;5295:35;:::i;:::-;5285:45;;5383:2;5372:9;5368:18;5355:32;5339:48;;5412:2;5402:8;5399:16;5396:36;;;5428:1;5425;5418:12;5396:36;;;5451:63;5506:7;5495:8;5484:9;5480:24;5451:63;:::i;:::-;5441:73;;;5533:38;5566:3;5555:9;5551:19;5533:38;:::i;:::-;5523:48;;5590:38;5623:3;5612:9;5608:19;5590:38;:::i;:::-;5580:48;;5647:38;5680:3;5669:9;5665:19;5647:38;:::i;:::-;5637:48;;5704:38;5737:3;5726:9;5722:19;5704:38;:::i;:::-;5694:48;;4329:1419;;;;;;;;;;;:::o;5753:254::-;5818:6;5826;5879:2;5867:9;5858:7;5854:23;5850:32;5847:52;;;5895:1;5892;5885:12;5847:52;5918:28;5936:9;5918:28;:::i;:::-;5908:38;;5965:36;5997:2;5986:9;5982:18;5965:36;:::i;:::-;5955:46;;5753:254;;;;;:::o;7233:127::-;7294:10;7289:3;7285:20;7282:1;7275:31;7325:4;7322:1;7315:15;7349:4;7346:1;7339:15;7365:127;7426:10;7421:3;7417:20;7414:1;7407:31;7457:4;7454:1;7447:15;7481:4;7478:1;7471:15;7497:175;7534:3;7578:4;7571:5;7567:16;7607:4;7598:7;7595:17;7592:43;;;7615:18;;:::i;:::-;7664:1;7651:15;;7497:175;-1:-1:-1;;7497:175:1:o;7677:201::-;7715:3;7743:10;7788:2;7781:5;7777:14;7815:2;7806:7;7803:15;7800:41;;;7821:18;;:::i;:::-;7870:1;7857:15;;7677:201;-1:-1:-1;;;7677:201:1:o;8711:204::-;8749:3;8785:4;8782:1;8778:12;8817:4;8814:1;8810:12;8852:3;8846:4;8842:14;8837:3;8834:23;8831:49;;;8860:18;;:::i;:::-;8896:13;;8711:204;-1:-1:-1;;;8711:204:1:o;9019:1172::-;9312:4;9341:3;9371:6;9360:9;9353:25;9397:2;9435;9430;9419:9;9415:18;9408:30;9467:6;9461:13;9510:6;9505:2;9494:9;9490:18;9483:34;9535:1;9526:10;;9545:141;9559:6;9556:1;9553:13;9545:141;;;9655:14;;;9651:23;;9645:30;9620:17;;;9639:3;9616:27;9609:67;9574:10;;;;9545:141;;;9704:6;9701:1;9698:13;9695:92;;;9775:1;9769:3;9760:6;9749:9;9745:22;9741:32;9734:43;9695:92;9848:2;9827:15;-1:-1:-1;;9823:29:1;9808:45;;9855:3;9804:55;;-1:-1:-1;9868:45:1;;-1:-1:-1;;9909:2:1;9894:18;;9886:6;8996:10;8985:22;8973:35;;8920:94;9868:45;887:13;;880:21;9961:2;9946:18;;868:34;8996:10;8985:22;;;10015:3;10000:19;;8973:35;8985:22;;;10070:3;10055:19;;8973:35;8985:22;;;10125:3;10110:19;;8973:35;8985:22;;;10180:3;10165:19;;;8973:35;9019:1172;;-1:-1:-1;;;9019:1172:1:o;11967:128::-;12007:3;12038:1;12034:6;12031:1;12028:13;12025:39;;;12044:18;;:::i;:::-;-1:-1:-1;12080:9:1;;11967:128::o;12100:125::-;12140:4;12168:1;12165;12162:8;12159:34;;;12173:18;;:::i;:::-;-1:-1:-1;12210:9:1;;12100:125::o;12674:380::-;12753:1;12749:12;;;;12796;;;12817:61;;12871:4;12863:6;12859:17;12849:27;;12817:61;12924:2;12916:6;12913:14;12893:18;12890:38;12887:161;;;12970:10;12965:3;12961:20;12958:1;12951:31;13005:4;13002:1;12995:15;13033:4;13030:1;13023:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    57,
    8513
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8553E12D GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xB957E109 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB957E109 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0xD66E33CA EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0xE0D7C7CC EQ PUSH2 0x312 JUMPI DUP1 PUSH4 0xEDFBF9B0 EQ PUSH2 0x325 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8553E12D EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x89F67182 EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0x8BC31C84 EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x901AB94D EQ PUSH2 0x24D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F8C13F0 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x3F8C13F0 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x5B4206C4 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x7133A501 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x7349746B EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x28FF9F3 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x130D7906 EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0x320D0573 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0x3EC4F362 EQ PUSH2 0x19E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x133 PUSH2 0x113 CALLDATASIZE PUSH1 0x4 PUSH2 0x10EE JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15D PUSH2 0x158 CALLDATASIZE PUSH1 0x4 PUSH2 0x1118 JUMP JUMPDEST PUSH2 0x36F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18E PUSH2 0x16D CALLDATASIZE PUSH1 0x4 PUSH2 0x1118 JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x141 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x1AC CALLDATASIZE PUSH1 0x4 PUSH2 0x1118 JUMP JUMPDEST PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x1133 JUMP JUMPDEST PUSH2 0x18E PUSH2 0x1CC CALLDATASIZE PUSH1 0x4 PUSH2 0x1118 JUMP JUMPDEST PUSH2 0x576 JUMP JUMPDEST PUSH2 0x15D PUSH2 0x1DF CALLDATASIZE PUSH1 0x4 PUSH2 0x1188 JUMP JUMPDEST PUSH2 0x5D7 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x5E8 JUMP JUMPDEST PUSH2 0x18E PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0x11C4 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x18E PUSH2 0x222 CALLDATASIZE PUSH1 0x4 PUSH2 0x11DD JUMP JUMPDEST PUSH2 0x6E4 JUMP JUMPDEST PUSH2 0x133 PUSH2 0x235 CALLDATASIZE PUSH1 0x4 PUSH2 0x10EE JUMP JUMPDEST PUSH2 0x753 JUMP JUMPDEST PUSH2 0x15D PUSH2 0x248 CALLDATASIZE PUSH1 0x4 PUSH2 0x12F7 JUMP JUMPDEST PUSH2 0x796 JUMP JUMPDEST PUSH2 0x27F PUSH2 0x25B CALLDATASIZE PUSH1 0x4 PUSH2 0x140D JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x141 JUMP JUMPDEST PUSH2 0x18E PUSH2 0x2A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x140D JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0xFF DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18E PUSH2 0x2DC CALLDATASIZE PUSH1 0x4 PUSH2 0x11DD JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18E PUSH2 0x320 CALLDATASIZE PUSH1 0x4 PUSH2 0x1118 JUMP JUMPDEST PUSH2 0xBC8 JUMP JUMPDEST PUSH2 0x35A PUSH2 0x333 CALLDATASIZE PUSH1 0x4 PUSH2 0x11DD JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x141 JUMP JUMPDEST PUSH2 0x378 DUP2 PUSH2 0xBC8 JUMP JUMPDEST PUSH2 0x3C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x2932B3B4B9BA3930BA34B7B7103737BA1037B832B7 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 SWAP1 SSTORE JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x60 SWAP2 AND PUSH2 0x451 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520656C656374696F6E20646F65736E2774206578697374000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B8 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x47F JUMPI PUSH2 0x47F PUSH2 0x1220 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4A8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH4 0xFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF DUP3 AND LT ISZERO PUSH2 0x56F JUMPI PUSH4 0xFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x5 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP2 PUSH1 0xFF DUP6 AND SWAP1 DUP2 LT PUSH2 0x505 JUMPI PUSH2 0x505 PUSH2 0x1440 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP3 DUP3 PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0x552 JUMPI PUSH2 0x552 PUSH2 0x1440 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x567 DUP2 PUSH2 0x146C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4AE JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD SWAP1 SWAP2 TIMESTAMP PUSH6 0x10000000000 SWAP1 SWAP3 DIV AND GT DUP1 ISZERO SWAP1 PUSH2 0x5D1 JUMPI POP PUSH4 0xFFFFFFFF DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD TIMESTAMP PUSH1 0x1 PUSH1 0x48 SHL SWAP1 SWAP2 DIV SWAP1 SWAP2 AND LT ISZERO JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5E3 DUP4 CALLER DUP5 DUP5 PUSH2 0xC24 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x609 JUMPI PUSH2 0x609 PUSH2 0x1220 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x632 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x1 SLOAD PUSH4 0xFFFFFFFF DUP3 AND LT ISZERO PUSH2 0x6DE JUMPI PUSH1 0x2 PUSH1 0x0 PUSH1 0x1 DUP4 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x665 JUMPI PUSH2 0x665 PUSH2 0x1440 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x4 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP3 DUP3 PUSH4 0xFFFFFFFF AND DUP2 MLOAD DUP2 LT PUSH2 0x6C1 JUMPI PUSH2 0x6C1 PUSH2 0x1440 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x6D6 DUP2 PUSH2 0x148C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x638 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD ISZERO ISZERO DUP1 PUSH2 0x74C JUMPI POP PUSH4 0xFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x76F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP6 MLOAD GT PUSH2 0x7F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x54686572652073686F756C642062652061746C6561737420312063616E646964 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x30BA3297 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B8 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND ISZERO PUSH2 0x874 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468697320656C656374696F6E20616C7265616479206578697374732C20706C PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x656173652073656C656374206F74686572206E616D65 PUSH1 0x50 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B8 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE DUP11 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP12 DUP2 MSTORE PUSH4 0xFFFFFFFF SWAP5 DUP6 AND DUP4 DUP6 ADD DUP2 SWAP1 MSTORE DUP12 ISZERO ISZERO PUSH1 0x60 DUP6 ADD MSTORE DUP10 DUP7 AND PUSH1 0x80 DUP6 ADD MSTORE DUP9 DUP7 AND PUSH1 0xA0 DUP6 ADD MSTORE DUP8 DUP7 AND PUSH1 0xC0 DUP6 ADD MSTORE SWAP5 DUP7 AND PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 DUP4 MSTORE SWAP4 SWAP1 SWAP4 KECCAK256 DUP3 MLOAD DUP2 SSTORE SWAP3 MLOAD DUP1 MLOAD SWAP3 SWAP4 SWAP3 PUSH2 0x8EB SWAP3 PUSH1 0x1 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x103C JUMP JUMPDEST POP PUSH1 0x40 DUP3 DUP2 ADD MLOAD PUSH1 0x2 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x80 DUP7 ADD MLOAD PUSH1 0xA0 DUP8 ADD MLOAD PUSH1 0xC0 DUP9 ADD MLOAD PUSH1 0xE0 SWAP1 SWAP9 ADD MLOAD PUSH4 0xFFFFFFFF SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x88 SHL MUL PUSH4 0xFFFFFFFF PUSH1 0x88 SHL NOT SWAP10 DUP3 AND PUSH1 0x1 PUSH1 0x68 SHL MUL SWAP10 SWAP1 SWAP10 AND PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x68 SHL NOT SWAP3 DUP3 AND PUSH1 0x1 PUSH1 0x48 SHL MUL PUSH13 0xFFFFFFFF000000000000000000 NOT SWAP5 DUP4 AND PUSH6 0x10000000000 MUL SWAP5 SWAP1 SWAP5 AND PUSH13 0xFFFFFFFFFFFFFFFF0000000000 NOT SWAP6 ISZERO ISZERO PUSH5 0x100000000 MUL PUSH5 0xFFFFFFFFFF NOT SWAP1 SWAP8 AND SWAP10 DUP4 AND SWAP10 SWAP1 SWAP10 OR SWAP6 SWAP1 SWAP6 OR SWAP4 SWAP1 SWAP4 AND SWAP7 SWAP1 SWAP7 OR OR SWAP5 SWAP1 SWAP5 AND OR SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP2 DUP3 KECCAK256 DUP1 SLOAD DUP5 DUP4 AND PUSH4 0xFFFFFFFF NOT SWAP2 SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SLOAD DUP1 DUP3 ADD DUP3 SSTORE SWAP1 DUP5 MSTORE PUSH1 0x8 DUP2 DIV PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD DUP1 SLOAD PUSH1 0x7 SWAP1 SWAP3 AND PUSH1 0x4 MUL PUSH2 0x100 EXP SWAP3 DUP4 MUL SWAP3 SWAP1 SWAP4 MUL NOT AND OR SWAP1 SSTORE JUMPDEST DUP7 MLOAD DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0xB01 JUMPI PUSH2 0xAEF DUP3 DUP9 DUP4 PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0xA41 JUMPI PUSH2 0xA41 PUSH2 0x1440 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH1 0x1 PUSH2 0xA56 SWAP2 SWAP1 PUSH2 0x14B0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE DUP4 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP3 DUP2 MSTORE PUSH4 0xFFFFFFFF SWAP8 SWAP1 SWAP8 AND DUP1 DUP4 MSTORE PUSH1 0x3 DUP3 MSTORE DUP5 DUP4 KECCAK256 PUSH1 0xFF SWAP7 DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP6 DUP5 KECCAK256 SWAP5 MLOAD DUP6 SSTORE SWAP8 MLOAD PUSH1 0x1 SWAP5 DUP6 ADD SSTORE DUP1 DUP4 MSTORE PUSH1 0x4 DUP3 MSTORE DUP5 DUP4 KECCAK256 SWAP7 DUP4 MSTORE SWAP6 DUP2 MSTORE DUP4 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP9 OR SWAP1 SSTORE SWAP5 DUP2 MSTORE PUSH1 0x5 DUP6 MSTORE SWAP2 DUP3 KECCAK256 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 SWAP3 DUP2 DIV SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1F SWAP1 SWAP4 AND PUSH2 0x100 EXP SWAP2 DUP3 MUL NOT SWAP1 SWAP3 AND SWAP3 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH2 0xAF9 DUP2 PUSH2 0x146C JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA1C JUMP JUMPDEST POP PUSH32 0x8C22F42E1642C0F410BC4E3DEBF771A1355EC556BDAF3CE7428E555196569C96 DUP10 DUP10 DUP4 DUP11 DUP10 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH2 0xB3F SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x7 DUP1 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x0 PUSH2 0xB5D DUP4 PUSH2 0x148C JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH1 0x7 PUSH1 0x4 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xB9E SWAP1 PUSH2 0x148C JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD SWAP1 SWAP2 TIMESTAMP PUSH1 0x1 PUSH1 0x68 SHL SWAP1 SWAP3 DIV AND GT DUP1 ISZERO SWAP1 PUSH2 0x5D1 JUMPI POP POP PUSH4 0xFFFFFFFF SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD TIMESTAMP PUSH1 0x1 PUSH1 0x88 SHL SWAP1 SWAP2 DIV SWAP1 SWAP2 AND LT ISZERO SWAP1 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD AND PUSH2 0xC8C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520656C656374696F6E20646F65736E2774206578697374000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B8 JUMP JUMPDEST PUSH2 0xC95 DUP5 PUSH2 0x576 JUMP JUMPDEST PUSH2 0xCDA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x151A1948195B1958DD1A5BDB881A5CC818DB1BDCD959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B8 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD5F JUMPI PUSH2 0xD0E DUP5 DUP5 PUSH2 0x6E4 JUMP JUMPDEST PUSH2 0xD5A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F746572206861736E27742072656769737465726564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B8 JUMP JUMPDEST PUSH2 0xD8D JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 SWAP1 SSTORE JUMPDEST PUSH4 0xFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE0A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F7465722068617320616C726561647920566F746564210000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B8 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0xE83 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F74657220646F206E6F74206861766520736F206D616E7920766F74657300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B8 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0xFF DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0xEF3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642063616E64696461746520746F20566F746521000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B8 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0xFF DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xF25 SWAP1 DUP3 SWAP1 PUSH2 0x157B JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0xFF DUP9 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 PUSH1 0x1 ADD SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP2 MSTORE PUSH1 0x6 DUP3 MSTORE DUP3 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP3 MSTORE SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH2 0xF75 SWAP1 DUP3 SWAP1 PUSH2 0x1593 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE PUSH2 0xFDF JUMPI PUSH4 0xFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF DUP7 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xFF DUP5 AND DUP2 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD PUSH32 0x66EB9354084DA3C9417BFAEB0F63DE26C8976282F67E1687AF5B90E8D3FBD387 SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1048 SWAP1 PUSH2 0x15AA JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x106A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x10B0 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1083 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x10B0 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x10B0 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x10B0 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1095 JUMP JUMPDEST POP PUSH2 0x10BC SWAP3 SWAP2 POP PUSH2 0x10C0 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x10BC JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x10C1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x10E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1101 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x110A DUP4 PUSH2 0x10D5 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x112A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74C DUP3 PUSH2 0x10D5 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x116B JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x114F JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x10E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x119D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11A6 DUP5 PUSH2 0x10D5 JUMP JUMPDEST SWAP3 POP PUSH2 0x11B4 PUSH1 0x20 DUP6 ADD PUSH2 0x1177 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F9 DUP4 PUSH2 0x10D5 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x125F JUMPI PUSH2 0x125F PUSH2 0x1220 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x10E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x12A4 JUMPI PUSH2 0x12A4 PUSH2 0x1220 JUMP JUMPDEST DUP2 PUSH1 0x5 SHL PUSH2 0x12B3 DUP3 DUP3 ADD PUSH2 0x1236 JUMP JUMPDEST SWAP3 DUP4 MSTORE DUP5 DUP2 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP1 DUP8 DUP6 GT ISZERO PUSH2 0x12CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD SWAP3 POP JUMPDEST DUP5 DUP4 LT ISZERO PUSH2 0x12EC JUMPI DUP3 CALLDATALOAD DUP3 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH2 0x12D3 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x1314 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD SWAP8 POP PUSH1 0x20 DUP1 DUP11 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP13 ADD SWAP2 POP DUP13 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1348 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x135A JUMPI PUSH2 0x135A PUSH2 0x1220 JUMP JUMPDEST PUSH2 0x136C PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP6 ADD PUSH2 0x1236 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP15 DUP6 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 DUP6 ADD DUP7 DUP4 ADD CALLDATACOPY PUSH1 0x0 DUP6 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP12 POP POP POP PUSH2 0x13A1 PUSH1 0x40 DUP14 ADD PUSH2 0x1267 JUMP JUMPDEST SWAP9 POP PUSH1 0x60 DUP13 ADD CALLDATALOAD SWAP3 POP DUP1 DUP4 GT ISZERO PUSH2 0x13B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH2 0x13C5 DUP12 DUP3 DUP13 ADD PUSH2 0x1277 JUMP JUMPDEST SWAP6 POP POP PUSH2 0x13D4 PUSH1 0x80 DUP11 ADD PUSH2 0x10D5 JUMP JUMPDEST SWAP4 POP PUSH2 0x13E2 PUSH1 0xA0 DUP11 ADD PUSH2 0x10D5 JUMP JUMPDEST SWAP3 POP PUSH2 0x13F0 PUSH1 0xC0 DUP11 ADD PUSH2 0x10D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x13FE PUSH1 0xE0 DUP11 ADD PUSH2 0x10D5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1420 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1429 DUP4 PUSH2 0x10D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1437 PUSH1 0x20 DUP5 ADD PUSH2 0x1177 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x1483 JUMPI PUSH2 0x1483 PUSH2 0x1456 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 DUP4 AND DUP2 DUP2 EQ ISZERO PUSH2 0x14A6 JUMPI PUSH2 0x14A6 PUSH2 0x1456 JUMP JUMPDEST PUSH1 0x1 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP5 AND DUP1 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH2 0x14CD JUMPI PUSH2 0x14CD PUSH2 0x1456 JUMP JUMPDEST ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP11 DUP4 MSTORE PUSH1 0x20 DUP2 DUP2 DUP6 ADD MSTORE DUP11 MLOAD DUP1 DUP4 DUP7 ADD MSTORE PUSH1 0x0 SWAP3 POP JUMPDEST DUP1 DUP4 LT ISZERO PUSH2 0x150F JUMPI DUP12 DUP4 ADD DUP3 ADD MLOAD DUP6 DUP5 ADD PUSH2 0x120 ADD MSTORE SWAP2 DUP2 ADD SWAP2 PUSH2 0x14F0 JUMP JUMPDEST DUP1 DUP4 GT ISZERO PUSH2 0x1522 JUMPI PUSH1 0x0 PUSH2 0x120 DUP3 DUP8 ADD ADD MSTORE JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP5 ADD PUSH2 0x120 ADD SWAP3 POP PUSH2 0x1546 SWAP2 POP POP PUSH1 0x40 DUP4 ADD DUP10 PUSH4 0xFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST SWAP6 ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH4 0xFFFFFFFF SWAP5 DUP6 AND PUSH1 0x80 DUP3 ADD MSTORE SWAP3 DUP5 AND PUSH1 0xA0 DUP5 ADD MSTORE SWAP1 DUP4 AND PUSH1 0xC0 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0xE0 SWAP1 SWAP2 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x158E JUMPI PUSH2 0x158E PUSH2 0x1456 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x15A5 JUMPI PUSH2 0x15A5 PUSH2 0x1456 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x15BE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x6DE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 SWAP14 ADDRESS 0xF6 0xC7 0x21 0x2C PUSH25 0xB23908D72283E9EDB01DA4F37CA81558B9F076781272845264 PUSH20 0x6F6C634300080C00330000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        57,
        8513
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "25": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8553E12D"
    },
    "38": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x97"
    },
    "42": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB957E109"
    },
    "49": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "GT",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB957E109"
    },
    "60": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x294"
    },
    "64": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD66E33CA"
    },
    "71": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CE"
    },
    "75": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE0D7C7CC"
    },
    "82": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x312"
    },
    "86": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xEDFBF9B0"
    },
    "93": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "EQ",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x325"
    },
    "97": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "DUP1",
      "path": "0"
    },
    "101": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "REVERT",
      "path": "0"
    },
    "102": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "103": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "DUP1",
      "path": "0"
    },
    "104": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8553E12D"
    },
    "109": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "EQ",
      "path": "0"
    },
    "110": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x214"
    },
    "113": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "DUP1",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x89F67182"
    },
    "120": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "EQ",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x227"
    },
    "124": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8BC31C84"
    },
    "131": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "EQ",
      "path": "0"
    },
    "132": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23A"
    },
    "135": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "DUP1",
      "path": "0"
    },
    "137": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x901AB94D"
    },
    "142": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "EQ",
      "path": "0"
    },
    "143": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24D"
    },
    "146": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "147": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "149": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "DUP1",
      "path": "0"
    },
    "150": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "REVERT",
      "path": "0"
    },
    "151": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "152": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "DUP1",
      "path": "0"
    },
    "153": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3F8C13F0"
    },
    "158": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "GT",
      "path": "0"
    },
    "159": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD3"
    },
    "162": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "163": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "DUP1",
      "path": "0"
    },
    "164": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3F8C13F0"
    },
    "169": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "EQ",
      "path": "0"
    },
    "170": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BE"
    },
    "173": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "174": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "DUP1",
      "path": "0"
    },
    "175": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5B4206C4"
    },
    "180": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "EQ",
      "path": "0"
    },
    "181": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D1"
    },
    "184": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "185": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "DUP1",
      "path": "0"
    },
    "186": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7133A501"
    },
    "191": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "EQ",
      "path": "0"
    },
    "192": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E4"
    },
    "195": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "196": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "DUP1",
      "path": "0"
    },
    "197": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7349746B"
    },
    "202": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "EQ",
      "path": "0"
    },
    "203": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EC"
    },
    "206": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "207": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "209": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "DUP1",
      "path": "0"
    },
    "210": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "REVERT",
      "path": "0"
    },
    "211": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "212": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "DUP1",
      "path": "0"
    },
    "213": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x28FF9F3"
    },
    "218": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "EQ",
      "path": "0"
    },
    "219": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x105"
    },
    "222": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "223": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "DUP1",
      "path": "0"
    },
    "224": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x130D7906"
    },
    "229": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "EQ",
      "path": "0"
    },
    "230": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14A"
    },
    "233": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "234": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "DUP1",
      "path": "0"
    },
    "235": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x320D0573"
    },
    "240": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "EQ",
      "path": "0"
    },
    "241": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15F"
    },
    "244": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "245": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "DUP1",
      "path": "0"
    },
    "246": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3EC4F362"
    },
    "251": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "EQ",
      "path": "0"
    },
    "252": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19E"
    },
    "255": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "256": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "257": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "259": {
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "DUP1",
      "path": "0"
    },
    "260": {
      "first_revert": true,
      "fn": null,
      "offset": [
        57,
        8513
      ],
      "op": "REVERT",
      "path": "0"
    },
    "261": {
      "offset": [
        1021,
        1086
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "262": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x133"
    },
    "265": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x113"
    },
    "268": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "269": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "271": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10EE"
    },
    "274": {
      "fn": null,
      "jump": "i",
      "offset": [
        1021,
        1086
      ],
      "op": "JUMP",
      "path": "0"
    },
    "275": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "276": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "278": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "280": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "281": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "DUP2",
      "path": "0"
    },
    "282": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "283": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "285": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "286": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "DUP4",
      "path": "0"
    },
    "287": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "288": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "290": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "DUP1",
      "path": "0"
    },
    "291": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "DUP5",
      "path": "0"
    },
    "292": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "293": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "294": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "295": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "296": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "297": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "DUP3",
      "path": "0"
    },
    "298": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "299": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "300": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "301": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "302": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "304": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "AND",
      "path": "0"
    },
    "305": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "DUP2",
      "path": "0"
    },
    "306": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "JUMP",
      "path": "0"
    },
    "307": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "308": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "310": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "311": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "313": {
      "op": "SWAP1"
    },
    "314": {
      "op": "SWAP2"
    },
    "315": {
      "op": "AND"
    },
    "316": {
      "op": "DUP2"
    },
    "317": {
      "op": "MSTORE"
    },
    "318": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "320": {
      "op": "ADD"
    },
    "321": {
      "offset": [
        1021,
        1086
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "322": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "324": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "325": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "DUP1",
      "path": "0"
    },
    "326": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "327": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "SUB",
      "path": "0"
    },
    "328": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "329": {
      "fn": null,
      "offset": [
        1021,
        1086
      ],
      "op": "RETURN",
      "path": "0"
    },
    "330": {
      "fn": "SimpleElection.register",
      "offset": [
        6937,
        7115
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "331": {
      "fn": "SimpleElection.register",
      "offset": [
        6937,
        7115
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15D"
    },
    "334": {
      "fn": "SimpleElection.register",
      "offset": [
        6937,
        7115
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x158"
    },
    "337": {
      "fn": "SimpleElection.register",
      "offset": [
        6937,
        7115
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "338": {
      "fn": "SimpleElection.register",
      "offset": [
        6937,
        7115
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "340": {
      "fn": "SimpleElection.register",
      "offset": [
        6937,
        7115
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1118"
    },
    "343": {
      "fn": "SimpleElection.register",
      "jump": "i",
      "offset": [
        6937,
        7115
      ],
      "op": "JUMP",
      "path": "0"
    },
    "344": {
      "fn": "SimpleElection.register",
      "offset": [
        6937,
        7115
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "345": {
      "fn": "SimpleElection.register",
      "offset": [
        6937,
        7115
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36F"
    },
    "348": {
      "fn": "SimpleElection.register",
      "jump": "i",
      "offset": [
        6937,
        7115
      ],
      "op": "JUMP",
      "path": "0"
    },
    "349": {
      "fn": "SimpleElection.register",
      "offset": [
        6937,
        7115
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "350": {
      "fn": "SimpleElection.register",
      "offset": [
        6937,
        7115
      ],
      "op": "STOP",
      "path": "0"
    },
    "351": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8187,
        8312
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "352": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8187,
        8312
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18E"
    },
    "355": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8187,
        8312
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16D"
    },
    "358": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8187,
        8312
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "359": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8187,
        8312
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "361": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8187,
        8312
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1118"
    },
    "364": {
      "fn": "SimpleElection.electionExists",
      "jump": "i",
      "offset": [
        8187,
        8312
      ],
      "op": "JUMP",
      "path": "0"
    },
    "365": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8187,
        8312
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "366": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8297
      ],
      "op": "PUSH4",
      "path": "0",
      "statement": 0,
      "value": "0xFFFFFFFF"
    },
    "371": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8297
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "372": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8297
      ],
      "op": "DUP2",
      "path": "0"
    },
    "373": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8297
      ],
      "op": "AND",
      "path": "0"
    },
    "374": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8252,
        8256
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "376": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8297
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "377": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8297
      ],
      "op": "DUP2",
      "path": "0"
    },
    "378": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8297
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "379": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8284
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "381": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8297
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "383": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8297
      ],
      "op": "DUP2",
      "path": "0"
    },
    "384": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8297
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "385": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8297
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "386": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8297
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "388": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8297
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "389": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8297
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "390": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8297
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "391": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8300
      ],
      "op": "ADD",
      "path": "0"
    },
    "392": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8300
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "393": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8300
      ],
      "op": "AND",
      "path": "0"
    },
    "394": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8305
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "395": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8305
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "396": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8305
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "397": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8187,
        8312
      ],
      "op": "JUMP",
      "path": "0"
    },
    "398": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8187,
        8312
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "399": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8187,
        8312
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "401": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8187,
        8312
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "402": {
      "op": "SWAP1"
    },
    "403": {
      "op": "ISZERO"
    },
    "404": {
      "op": "ISZERO"
    },
    "405": {
      "op": "DUP2"
    },
    "406": {
      "op": "MSTORE"
    },
    "407": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "409": {
      "op": "ADD"
    },
    "410": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8187,
        8312
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x141"
    },
    "413": {
      "op": "JUMP"
    },
    "414": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6266,
        6774
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "415": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6266,
        6774
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B1"
    },
    "418": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6266,
        6774
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AC"
    },
    "421": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6266,
        6774
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "422": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6266,
        6774
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "424": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6266,
        6774
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1118"
    },
    "427": {
      "fn": "SimpleElection.getCandidatesForElection",
      "jump": "i",
      "offset": [
        6266,
        6774
      ],
      "op": "JUMP",
      "path": "0"
    },
    "428": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6266,
        6774
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "429": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6266,
        6774
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E6"
    },
    "432": {
      "fn": "SimpleElection.getCandidatesForElection",
      "jump": "i",
      "offset": [
        6266,
        6774
      ],
      "op": "JUMP",
      "path": "0"
    },
    "433": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6266,
        6774
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "434": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6266,
        6774
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "436": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6266,
        6774
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "437": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6266,
        6774
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x141"
    },
    "440": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6266,
        6774
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "441": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6266,
        6774
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "442": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6266,
        6774
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1133"
    },
    "445": {
      "fn": "SimpleElection.getCandidatesForElection",
      "jump": "i",
      "offset": [
        6266,
        6774
      ],
      "op": "JUMP",
      "path": "0"
    },
    "446": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7395,
        7623
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "447": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7395,
        7623
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18E"
    },
    "450": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7395,
        7623
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CC"
    },
    "453": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7395,
        7623
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "454": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7395,
        7623
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "456": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7395,
        7623
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1118"
    },
    "459": {
      "fn": "SimpleElection.checkElectionOpen",
      "jump": "i",
      "offset": [
        7395,
        7623
      ],
      "op": "JUMP",
      "path": "0"
    },
    "460": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7395,
        7623
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "461": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7395,
        7623
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x576"
    },
    "464": {
      "fn": "SimpleElection.checkElectionOpen",
      "jump": "i",
      "offset": [
        7395,
        7623
      ],
      "op": "JUMP",
      "path": "0"
    },
    "465": {
      "fn": "SimpleElection.vote",
      "offset": [
        5618,
        5876
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "466": {
      "fn": "SimpleElection.vote",
      "offset": [
        5618,
        5876
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15D"
    },
    "469": {
      "fn": "SimpleElection.vote",
      "offset": [
        5618,
        5876
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DF"
    },
    "472": {
      "fn": "SimpleElection.vote",
      "offset": [
        5618,
        5876
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "473": {
      "fn": "SimpleElection.vote",
      "offset": [
        5618,
        5876
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "475": {
      "fn": "SimpleElection.vote",
      "offset": [
        5618,
        5876
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1188"
    },
    "478": {
      "fn": "SimpleElection.vote",
      "jump": "i",
      "offset": [
        5618,
        5876
      ],
      "op": "JUMP",
      "path": "0"
    },
    "479": {
      "fn": "SimpleElection.vote",
      "offset": [
        5618,
        5876
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "480": {
      "fn": "SimpleElection.vote",
      "offset": [
        5618,
        5876
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5D7"
    },
    "483": {
      "fn": "SimpleElection.vote",
      "jump": "i",
      "offset": [
        5618,
        5876
      ],
      "op": "JUMP",
      "path": "0"
    },
    "484": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        5910,
        6218
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "485": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        5910,
        6218
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B1"
    },
    "488": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        5910,
        6218
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5E8"
    },
    "491": {
      "fn": "SimpleElection.getCurrentElections",
      "jump": "i",
      "offset": [
        5910,
        6218
      ],
      "op": "JUMP",
      "path": "0"
    },
    "492": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8051,
        8181
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "493": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8051,
        8181
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18E"
    },
    "496": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8051,
        8181
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FA"
    },
    "499": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8051,
        8181
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "500": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8051,
        8181
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "502": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8051,
        8181
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11C4"
    },
    "505": {
      "fn": "SimpleElection.electionExists",
      "jump": "i",
      "offset": [
        8051,
        8181
      ],
      "op": "JUMP",
      "path": "0"
    },
    "506": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8051,
        8181
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "507": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8119,
        8123
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "509": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8142,
        8169
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 1
    },
    "510": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8142,
        8169
      ],
      "op": "DUP2",
      "path": "0"
    },
    "511": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8142,
        8169
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "512": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8142,
        8169
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "514": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8142,
        8169
      ],
      "op": "DUP2",
      "path": "0"
    },
    "515": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8142,
        8169
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "516": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8142,
        8169
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "517": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8142,
        8169
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "519": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8142,
        8169
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "520": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8142,
        8169
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "521": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8142,
        8169
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "522": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8142,
        8169
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "527": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8142,
        8169
      ],
      "op": "AND",
      "path": "0"
    },
    "528": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8142,
        8174
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "529": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8142,
        8174
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "530": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8142,
        8174
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "531": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8051,
        8181
      ],
      "op": "JUMP",
      "path": "0"
    },
    "532": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7629,
        7870
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "533": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7629,
        7870
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18E"
    },
    "536": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7629,
        7870
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x222"
    },
    "539": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7629,
        7870
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "540": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7629,
        7870
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "542": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7629,
        7870
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11DD"
    },
    "545": {
      "fn": "SimpleElection.voterHasRegistred",
      "jump": "i",
      "offset": [
        7629,
        7870
      ],
      "op": "JUMP",
      "path": "0"
    },
    "546": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7629,
        7870
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "547": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7629,
        7870
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6E4"
    },
    "550": {
      "fn": "SimpleElection.voterHasRegistred",
      "jump": "i",
      "offset": [
        7629,
        7870
      ],
      "op": "JUMP",
      "path": "0"
    },
    "551": {
      "offset": [
        1139,
        1187
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "552": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x133"
    },
    "555": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x235"
    },
    "558": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "559": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "561": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10EE"
    },
    "564": {
      "fn": "SimpleElection.voterHasRegistred",
      "jump": "i",
      "offset": [
        1139,
        1187
      ],
      "op": "JUMP",
      "path": "0"
    },
    "565": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "566": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x753"
    },
    "569": {
      "fn": "SimpleElection.voterHasRegistred",
      "jump": "i",
      "offset": [
        1139,
        1187
      ],
      "op": "JUMP",
      "path": "0"
    },
    "570": {
      "fn": "SimpleElection.createElection",
      "offset": [
        1863,
        3492
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "571": {
      "fn": "SimpleElection.createElection",
      "offset": [
        1863,
        3492
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15D"
    },
    "574": {
      "fn": "SimpleElection.createElection",
      "offset": [
        1863,
        3492
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x248"
    },
    "577": {
      "fn": "SimpleElection.createElection",
      "offset": [
        1863,
        3492
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "578": {
      "fn": "SimpleElection.createElection",
      "offset": [
        1863,
        3492
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "580": {
      "fn": "SimpleElection.createElection",
      "offset": [
        1863,
        3492
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12F7"
    },
    "583": {
      "fn": "SimpleElection.createElection",
      "jump": "i",
      "offset": [
        1863,
        3492
      ],
      "op": "JUMP",
      "path": "0"
    },
    "584": {
      "fn": "SimpleElection.createElection",
      "offset": [
        1863,
        3492
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "585": {
      "fn": "SimpleElection.createElection",
      "offset": [
        1863,
        3492
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x796"
    },
    "588": {
      "fn": "SimpleElection.createElection",
      "jump": "i",
      "offset": [
        1863,
        3492
      ],
      "op": "JUMP",
      "path": "0"
    },
    "589": {
      "offset": [
        950,
        1014
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "590": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27F"
    },
    "593": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25B"
    },
    "596": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "597": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "599": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140D"
    },
    "602": {
      "fn": "SimpleElection.createElection",
      "jump": "i",
      "offset": [
        950,
        1014
      ],
      "op": "JUMP",
      "path": "0"
    },
    "603": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "604": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "606": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "608": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "609": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "DUP2",
      "path": "0"
    },
    "610": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "611": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "613": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "614": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "DUP4",
      "path": "0"
    },
    "615": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "616": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "618": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "DUP1",
      "path": "0"
    },
    "619": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "DUP5",
      "path": "0"
    },
    "620": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "621": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "622": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "623": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "624": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "625": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "DUP3",
      "path": "0"
    },
    "626": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "627": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "628": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "629": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "DUP1",
      "path": "0"
    },
    "630": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "631": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "633": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "634": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "635": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "ADD",
      "path": "0"
    },
    "636": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "637": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "DUP3",
      "path": "0"
    },
    "638": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "JUMP",
      "path": "0"
    },
    "639": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "640": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "642": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "DUP1",
      "path": "0"
    },
    "643": {
      "fn": "SimpleElection.createElection",
      "offset": [
        950,
        1014
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "644": {
      "op": "SWAP3"
    },
    "645": {
      "op": "DUP4"
    },
    "646": {
      "op": "MSTORE"
    },
    "647": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "649": {
      "op": "DUP4"
    },
    "650": {
      "op": "ADD"
    },
    "651": {
      "op": "SWAP2"
    },
    "652": {
      "op": "SWAP1"
    },
    "653": {
      "op": "SWAP2"
    },
    "654": {
      "op": "MSTORE"
    },
    "655": {
      "op": "ADD"
    },
    "656": {
      "offset": [
        950,
        1014
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x141"
    },
    "659": {
      "op": "JUMP"
    },
    "660": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8318,
        8511
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "661": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8318,
        8511
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18E"
    },
    "664": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8318,
        8511
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A2"
    },
    "667": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8318,
        8511
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "668": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8318,
        8511
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "670": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8318,
        8511
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140D"
    },
    "673": {
      "fn": "SimpleElection.candidateExists",
      "jump": "i",
      "offset": [
        8318,
        8511
      ],
      "op": "JUMP",
      "path": "0"
    },
    "674": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8318,
        8511
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "675": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8479
      ],
      "op": "PUSH4",
      "path": "0",
      "statement": 2,
      "value": "0xFFFFFFFF"
    },
    "680": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8479
      ],
      "op": "DUP3",
      "path": "0"
    },
    "681": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8479
      ],
      "op": "AND",
      "path": "0"
    },
    "682": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8428,
        8432
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "684": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8479
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "685": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8479
      ],
      "op": "DUP2",
      "path": "0"
    },
    "686": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8479
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "687": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8466
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "689": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8479
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "691": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8479
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "692": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8479
      ],
      "op": "DUP2",
      "path": "0"
    },
    "693": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8479
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "694": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8479
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "696": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8479
      ],
      "op": "DUP1",
      "path": "0"
    },
    "697": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8479
      ],
      "op": "DUP4",
      "path": "0"
    },
    "698": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8479
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "699": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8493
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "701": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8493
      ],
      "op": "DUP6",
      "path": "0"
    },
    "702": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8493
      ],
      "op": "AND",
      "path": "0"
    },
    "703": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8493
      ],
      "op": "DUP5",
      "path": "0"
    },
    "704": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8493
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "705": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8493
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "706": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8493
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "707": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8493
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "708": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8493
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "709": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8493
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "710": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8498
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "711": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8503
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "712": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8503
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "713": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8318,
        8511
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "714": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8318,
        8511
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "715": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8318,
        8511
      ],
      "op": "POP",
      "path": "0"
    },
    "716": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8318,
        8511
      ],
      "op": "POP",
      "path": "0"
    },
    "717": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8318,
        8511
      ],
      "op": "JUMP",
      "path": "0"
    },
    "718": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        7876,
        8045
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "719": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        7876,
        8045
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18E"
    },
    "722": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        7876,
        8045
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DC"
    },
    "725": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        7876,
        8045
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "726": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        7876,
        8045
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "728": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        7876,
        8045
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11DD"
    },
    "731": {
      "fn": "SimpleElection.voterHasVoted",
      "jump": "i",
      "offset": [
        7876,
        8045
      ],
      "op": "JUMP",
      "path": "0"
    },
    "732": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        7876,
        8045
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "733": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8025
      ],
      "op": "PUSH4",
      "path": "0",
      "statement": 3,
      "value": "0xFFFFFFFF"
    },
    "738": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8025
      ],
      "op": "DUP3",
      "path": "0"
    },
    "739": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8025
      ],
      "op": "AND",
      "path": "0"
    },
    "740": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        7979,
        7983
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "742": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8025
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "743": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8025
      ],
      "op": "DUP2",
      "path": "0"
    },
    "744": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8025
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "745": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8012
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "747": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8025
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "749": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8025
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "750": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8025
      ],
      "op": "DUP2",
      "path": "0"
    },
    "751": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8025
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "752": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8025
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "754": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8025
      ],
      "op": "DUP1",
      "path": "0"
    },
    "755": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8025
      ],
      "op": "DUP4",
      "path": "0"
    },
    "756": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8025
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "761": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "763": {
      "op": "SHL"
    },
    "764": {
      "op": "SUB"
    },
    "765": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8032
      ],
      "op": "DUP6",
      "path": "0"
    },
    "766": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8032
      ],
      "op": "AND",
      "path": "0"
    },
    "767": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8032
      ],
      "op": "DUP5",
      "path": "0"
    },
    "768": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8032
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "769": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8032
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "770": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8032
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "771": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8032
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "772": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8032
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "773": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8032
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "774": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8038
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "776": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8038
      ],
      "op": "ADD",
      "path": "0"
    },
    "777": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8038
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "778": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8038
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "780": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8038
      ],
      "op": "AND",
      "path": "0"
    },
    "781": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        7876,
        8045
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "782": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        7876,
        8045
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "783": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        7876,
        8045
      ],
      "op": "POP",
      "path": "0"
    },
    "784": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        7876,
        8045
      ],
      "op": "POP",
      "path": "0"
    },
    "785": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        7876,
        8045
      ],
      "op": "JUMP",
      "path": "0"
    },
    "786": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7121,
        7389
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "787": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7121,
        7389
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18E"
    },
    "790": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7121,
        7389
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x320"
    },
    "793": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7121,
        7389
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "794": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7121,
        7389
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "796": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7121,
        7389
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1118"
    },
    "799": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "jump": "i",
      "offset": [
        7121,
        7389
      ],
      "op": "JUMP",
      "path": "0"
    },
    "800": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7121,
        7389
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "801": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7121,
        7389
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBC8"
    },
    "804": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "jump": "i",
      "offset": [
        7121,
        7389
      ],
      "op": "JUMP",
      "path": "0"
    },
    "805": {
      "offset": [
        1241,
        1299
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "806": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x35A"
    },
    "809": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x333"
    },
    "812": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "813": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "815": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11DD"
    },
    "818": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "jump": "i",
      "offset": [
        1241,
        1299
      ],
      "op": "JUMP",
      "path": "0"
    },
    "819": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "820": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "822": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "824": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "825": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "DUP2",
      "path": "0"
    },
    "826": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "827": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "829": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "830": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "DUP4",
      "path": "0"
    },
    "831": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "832": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "834": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "DUP1",
      "path": "0"
    },
    "835": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "DUP5",
      "path": "0"
    },
    "836": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "837": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "838": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "839": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "840": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "841": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "DUP3",
      "path": "0"
    },
    "842": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "843": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "844": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "845": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "DUP1",
      "path": "0"
    },
    "846": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "847": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "849": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "850": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "851": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "ADD",
      "path": "0"
    },
    "852": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "853": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "855": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "AND",
      "path": "0"
    },
    "856": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "DUP3",
      "path": "0"
    },
    "857": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "JUMP",
      "path": "0"
    },
    "858": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "859": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "861": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "DUP1",
      "path": "0"
    },
    "862": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        1241,
        1299
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "863": {
      "op": "SWAP3"
    },
    "864": {
      "op": "DUP4"
    },
    "865": {
      "op": "MSTORE"
    },
    "866": {
      "op": "SWAP1"
    },
    "867": {
      "op": "ISZERO"
    },
    "868": {
      "op": "ISZERO"
    },
    "869": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "871": {
      "op": "DUP4"
    },
    "872": {
      "op": "ADD"
    },
    "873": {
      "op": "MSTORE"
    },
    "874": {
      "op": "ADD"
    },
    "875": {
      "offset": [
        1241,
        1299
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x141"
    },
    "878": {
      "op": "JUMP"
    },
    "879": {
      "fn": "SimpleElection.register",
      "offset": [
        6937,
        7115
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "880": {
      "fn": "SimpleElection.register",
      "offset": [
        7000,
        7034
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 4,
      "value": "0x378"
    },
    "883": {
      "fn": "SimpleElection.register",
      "offset": [
        7022,
        7033
      ],
      "op": "DUP2",
      "path": "0"
    },
    "884": {
      "fn": "SimpleElection.register",
      "offset": [
        7000,
        7021
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBC8"
    },
    "887": {
      "fn": "SimpleElection.register",
      "jump": "i",
      "offset": [
        7000,
        7034
      ],
      "op": "JUMP",
      "path": "0"
    },
    "888": {
      "branch": 42,
      "fn": "SimpleElection.register",
      "offset": [
        7000,
        7034
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "889": {
      "fn": "SimpleElection.register",
      "offset": [
        6992,
        7060
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C1"
    },
    "892": {
      "branch": 42,
      "fn": "SimpleElection.register",
      "offset": [
        6992,
        7060
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "893": {
      "fn": "SimpleElection.register",
      "offset": [
        6992,
        7060
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "895": {
      "fn": "SimpleElection.register",
      "offset": [
        6992,
        7060
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "896": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "900": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "902": {
      "op": "SHL"
    },
    "903": {
      "fn": "SimpleElection.register",
      "offset": [
        6992,
        7060
      ],
      "op": "DUP2",
      "path": "0"
    },
    "904": {
      "fn": "SimpleElection.register",
      "offset": [
        6992,
        7060
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "905": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "907": {
      "fn": "SimpleElection.register",
      "offset": [
        6992,
        7060
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "909": {
      "fn": "SimpleElection.register",
      "offset": [
        6992,
        7060
      ],
      "op": "DUP3",
      "path": "0"
    },
    "910": {
      "fn": "SimpleElection.register",
      "offset": [
        6992,
        7060
      ],
      "op": "ADD",
      "path": "0"
    },
    "911": {
      "op": "MSTORE"
    },
    "912": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "914": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "916": {
      "op": "DUP3"
    },
    "917": {
      "op": "ADD"
    },
    "918": {
      "op": "MSTORE"
    },
    "919": {
      "op": "PUSH21",
      "value": "0x2932B3B4B9BA3930BA34B7B7103737BA1037B832B7"
    },
    "941": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "943": {
      "op": "SHL"
    },
    "944": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "946": {
      "op": "DUP3"
    },
    "947": {
      "op": "ADD"
    },
    "948": {
      "op": "MSTORE"
    },
    "949": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "951": {
      "op": "ADD"
    },
    "952": {
      "fn": "SimpleElection.register",
      "offset": [
        6992,
        7060
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "953": {
      "fn": "SimpleElection.register",
      "offset": [
        6992,
        7060
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "955": {
      "fn": "SimpleElection.register",
      "offset": [
        6992,
        7060
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "956": {
      "fn": "SimpleElection.register",
      "offset": [
        6992,
        7060
      ],
      "op": "DUP1",
      "path": "0"
    },
    "957": {
      "fn": "SimpleElection.register",
      "offset": [
        6992,
        7060
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "958": {
      "fn": "SimpleElection.register",
      "offset": [
        6992,
        7060
      ],
      "op": "SUB",
      "path": "0"
    },
    "959": {
      "fn": "SimpleElection.register",
      "offset": [
        6992,
        7060
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "960": {
      "fn": "SimpleElection.register",
      "offset": [
        6992,
        7060
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "961": {
      "fn": "SimpleElection.register",
      "offset": [
        6992,
        7060
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "962": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6887,
        6906
      ],
      "op": "PUSH4",
      "path": "0",
      "statement": 5,
      "value": "0xFFFFFFFF"
    },
    "967": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6887,
        6906
      ],
      "op": "AND",
      "path": "0"
    },
    "968": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6887,
        6906
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "970": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6887,
        6906
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "971": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6887,
        6906
      ],
      "op": "DUP2",
      "path": "0"
    },
    "972": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6887,
        6906
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "973": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6887,
        6893
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "975": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6887,
        6906
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "977": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6887,
        6906
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "978": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6887,
        6906
      ],
      "op": "DUP2",
      "path": "0"
    },
    "979": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6887,
        6906
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "980": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6887,
        6906
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "982": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6887,
        6906
      ],
      "op": "DUP1",
      "path": "0"
    },
    "983": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6887,
        6906
      ],
      "op": "DUP4",
      "path": "0"
    },
    "984": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6887,
        6906
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "985": {
      "fn": "SimpleElection.register",
      "offset": [
        7097,
        7107
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 6
    },
    "986": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6887,
        6913
      ],
      "op": "DUP5",
      "path": "0"
    },
    "987": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6887,
        6913
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "988": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6887,
        6913
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "989": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6887,
        6913
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "990": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6887,
        6913
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "991": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6887,
        6913
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "992": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6887,
        6913
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "993": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6923,
        6924
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "995": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6887,
        6924
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "996": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6887,
        6924
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "997": {
      "fn": "SimpleElection.register",
      "jump": "o",
      "offset": [
        6937,
        7115
      ],
      "op": "JUMP",
      "path": "0"
    },
    "998": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6266,
        6774
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "999": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8297
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1004": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8297
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1005": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8297
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1006": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8297
      ],
      "op": "AND",
      "path": "0"
    },
    "1007": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8252,
        8256
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1009": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8297
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1010": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8297
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1011": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8297
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1012": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8284
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1014": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8297
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1016": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8297
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1017": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8297
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1018": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8297
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1019": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8297
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1021": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8297
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1022": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8297
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1023": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8297
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1024": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8300
      ],
      "op": "ADD",
      "path": "0"
    },
    "1025": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8300
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1026": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6365,
        6381
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1028": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6365,
        6381
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1029": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8300
      ],
      "op": "AND",
      "path": "0"
    },
    "1030": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6397,
        6463
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 7,
      "value": "0x451"
    },
    "1033": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6397,
        6463
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1034": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6397,
        6463
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1036": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6397,
        6463
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1037": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1041": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1043": {
      "op": "SHL"
    },
    "1044": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6397,
        6463
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1045": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6397,
        6463
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1046": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1048": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6397,
        6463
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1050": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6397,
        6463
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1051": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6397,
        6463
      ],
      "op": "ADD",
      "path": "0"
    },
    "1052": {
      "op": "MSTORE"
    },
    "1053": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "1055": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1057": {
      "op": "DUP3"
    },
    "1058": {
      "op": "ADD"
    },
    "1059": {
      "op": "MSTORE"
    },
    "1060": {
      "op": "PUSH32",
      "value": "0x54686520656C656374696F6E20646F65736E2774206578697374000000000000"
    },
    "1093": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1095": {
      "op": "DUP3"
    },
    "1096": {
      "op": "ADD"
    },
    "1097": {
      "op": "MSTORE"
    },
    "1098": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1100": {
      "op": "ADD"
    },
    "1101": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6397,
        6463
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B8"
    },
    "1104": {
      "op": "JUMP"
    },
    "1105": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6397,
        6463
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1106": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6526,
        6553
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1111": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6526,
        6553
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1112": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6526,
        6553
      ],
      "op": "AND",
      "path": "0"
    },
    "1113": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6473,
        6496
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1115": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6526,
        6553
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1116": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6526,
        6553
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1117": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6526,
        6553
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1118": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6526,
        6540
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1120": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6526,
        6553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1122": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6526,
        6553
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1123": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6526,
        6553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1125": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6526,
        6553
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1126": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6526,
        6553
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1127": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6526,
        6560
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1128": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6499,
        6570
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1137": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6499,
        6570
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1138": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6499,
        6570
      ],
      "op": "GT",
      "path": "0"
    },
    "1139": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6499,
        6570
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1140": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6499,
        6570
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x47F"
    },
    "1143": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6499,
        6570
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1144": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6499,
        6570
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x47F"
    },
    "1147": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6499,
        6570
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1220"
    },
    "1150": {
      "fn": "SimpleElection.getCandidatesForElection",
      "jump": "i",
      "offset": [
        6499,
        6570
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1151": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6499,
        6570
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1152": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6499,
        6570
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1154": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6499,
        6570
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1155": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6499,
        6570
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1156": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6499,
        6570
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1157": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6499,
        6570
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1158": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6499,
        6570
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1159": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6499,
        6570
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1160": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6499,
        6570
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1162": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6499,
        6570
      ],
      "op": "MUL",
      "path": "0"
    },
    "1163": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6499,
        6570
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1165": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6499,
        6570
      ],
      "op": "ADD",
      "path": "0"
    },
    "1166": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6499,
        6570
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1167": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6499,
        6570
      ],
      "op": "ADD",
      "path": "0"
    },
    "1168": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6499,
        6570
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1170": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6499,
        6570
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1171": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6499,
        6570
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1172": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6499,
        6570
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1173": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6499,
        6570
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4A8"
    },
    "1176": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6499,
        6570
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1177": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6499,
        6570
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1178": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6499,
        6570
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1180": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6499,
        6570
      ],
      "op": "ADD",
      "path": "0"
    },
    "1181": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6499,
        6570
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1183": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6499,
        6570
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1184": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6499,
        6570
      ],
      "op": "MUL",
      "path": "0"
    },
    "1185": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6499,
        6570
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1186": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6499,
        6570
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1187": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6499,
        6570
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1188": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6499,
        6570
      ],
      "op": "CALLDATACOPY",
      "path": "0"
    },
    "1189": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6499,
        6570
      ],
      "op": "ADD",
      "path": "0"
    },
    "1190": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6499,
        6570
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1191": {
      "op": "POP"
    },
    "1192": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6499,
        6570
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1193": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6499,
        6570
      ],
      "op": "POP",
      "path": "0"
    },
    "1194": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6473,
        6570
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1195": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6473,
        6570
      ],
      "op": "POP",
      "path": "0"
    },
    "1196": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6585,
        6592
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1198": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6580,
        6744
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1199": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6602,
        6629
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1204": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6602,
        6629
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1205": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6602,
        6629
      ],
      "op": "AND",
      "path": "0"
    },
    "1206": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6602,
        6629
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1208": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6602,
        6629
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1209": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6602,
        6629
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1210": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6602,
        6629
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1211": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6602,
        6616
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1213": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6602,
        6629
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1215": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6602,
        6629
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1216": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6602,
        6629
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1218": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6602,
        6629
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1219": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6602,
        6629
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1220": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6602,
        6636
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1221": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6598,
        6636
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1223": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6598,
        6636
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1224": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6598,
        6636
      ],
      "op": "AND",
      "path": "0"
    },
    "1225": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6598,
        6636
      ],
      "op": "LT",
      "path": "0"
    },
    "1226": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6580,
        6744
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1227": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6580,
        6744
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x56F"
    },
    "1230": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6580,
        6744
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1231": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6667,
        6690
      ],
      "op": "PUSH4",
      "path": "0",
      "statement": 8,
      "value": "0xFFFFFFFF"
    },
    "1236": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6667,
        6690
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1237": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6667,
        6690
      ],
      "op": "AND",
      "path": "0"
    },
    "1238": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6667,
        6690
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1240": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6667,
        6690
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1241": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6667,
        6690
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1242": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6667,
        6690
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1243": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6667,
        6677
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1245": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6667,
        6690
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1247": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6667,
        6690
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1248": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6667,
        6690
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1249": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6667,
        6690
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1250": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6667,
        6690
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1252": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6667,
        6690
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1253": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6667,
        6690
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1254": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6667,
        6690
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1255": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6691,
        6705
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1257": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6691,
        6718
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1258": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6691,
        6718
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1259": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6691,
        6718
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1260": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6691,
        6718
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1261": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6691,
        6718
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1262": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6691,
        6721
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1263": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6691,
        6721
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1264": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6667,
        6690
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1265": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6667,
        6690
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1266": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6667,
        6690
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1267": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6691,
        6721
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1269": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6691,
        6721
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1270": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6691,
        6721
      ],
      "op": "AND",
      "path": "0"
    },
    "1271": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6691,
        6721
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1272": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6691,
        6721
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1273": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6691,
        6721
      ],
      "op": "LT",
      "path": "0"
    },
    "1274": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6691,
        6721
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x505"
    },
    "1277": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6691,
        6721
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1278": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6691,
        6721
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x505"
    },
    "1281": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6691,
        6721
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1440"
    },
    "1284": {
      "fn": "SimpleElection.getCandidatesForElection",
      "jump": "i",
      "offset": [
        6691,
        6721
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1285": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6691,
        6721
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1286": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6691,
        6721
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1287": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6691,
        6721
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1289": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6691,
        6721
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1290": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6691,
        6721
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1292": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6691,
        6721
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1294": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6691,
        6721
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1295": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6691,
        6721
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1296": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6691,
        6721
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1298": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6691,
        6721
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1299": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6691,
        6721
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1300": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6691,
        6721
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1301": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6691,
        6721
      ],
      "op": "DIV",
      "path": "0"
    },
    "1302": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6691,
        6721
      ],
      "op": "ADD",
      "path": "0"
    },
    "1303": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6691,
        6721
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1304": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6691,
        6721
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1305": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6691,
        6721
      ],
      "op": "MOD",
      "path": "0"
    },
    "1306": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6691,
        6721
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1307": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6691,
        6721
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1308": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6691,
        6721
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1309": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6691,
        6721
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1312": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6691,
        6721
      ],
      "op": "EXP",
      "path": "0"
    },
    "1313": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6691,
        6721
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1314": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6691,
        6721
      ],
      "op": "DIV",
      "path": "0"
    },
    "1315": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6691,
        6721
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1317": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6691,
        6721
      ],
      "op": "AND",
      "path": "0"
    },
    "1318": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6667,
        6722
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1320": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6667,
        6722
      ],
      "op": "AND",
      "path": "0"
    },
    "1321": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6667,
        6722
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1323": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6667,
        6722
      ],
      "op": "AND",
      "path": "0"
    },
    "1324": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6667,
        6722
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1325": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6667,
        6722
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1326": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6667,
        6722
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1328": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6667,
        6722
      ],
      "op": "ADD",
      "path": "0"
    },
    "1329": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6667,
        6722
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1330": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6667,
        6722
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1331": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6667,
        6722
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1332": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6667,
        6722
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1334": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6667,
        6722
      ],
      "op": "ADD",
      "path": "0"
    },
    "1335": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6667,
        6722
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1337": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6667,
        6722
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1338": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6667,
        6744
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1340": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6667,
        6744
      ],
      "op": "ADD",
      "path": "0"
    },
    "1341": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6667,
        6744
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1342": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6655,
        6661
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1343": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6662,
        6663
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1344": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6655,
        6664
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1346": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6655,
        6664
      ],
      "op": "AND",
      "path": "0"
    },
    "1347": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6655,
        6664
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1348": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6655,
        6664
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1349": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6655,
        6664
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1350": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6655,
        6664
      ],
      "op": "LT",
      "path": "0"
    },
    "1351": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6655,
        6664
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x552"
    },
    "1354": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6655,
        6664
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1355": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6655,
        6664
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x552"
    },
    "1358": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6655,
        6664
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1440"
    },
    "1361": {
      "fn": "SimpleElection.getCandidatesForElection",
      "jump": "i",
      "offset": [
        6655,
        6664
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1362": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6655,
        6664
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1363": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6655,
        6664
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1365": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6655,
        6664
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1366": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6655,
        6664
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1367": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6655,
        6664
      ],
      "op": "MUL",
      "path": "0"
    },
    "1368": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6655,
        6664
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1369": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6655,
        6664
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1370": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6655,
        6664
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1371": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6655,
        6664
      ],
      "op": "ADD",
      "path": "0"
    },
    "1372": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6655,
        6664
      ],
      "op": "ADD",
      "path": "0"
    },
    "1373": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6655,
        6744
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1374": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6638,
        6641
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 9
    },
    "1375": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6638,
        6641
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x567"
    },
    "1378": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6638,
        6641
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1379": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6638,
        6641
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x146C"
    },
    "1382": {
      "fn": "SimpleElection.getCandidatesForElection",
      "jump": "i",
      "offset": [
        6638,
        6641
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1383": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6638,
        6641
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1384": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6638,
        6641
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1385": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6638,
        6641
      ],
      "op": "POP",
      "path": "0"
    },
    "1386": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6638,
        6641
      ],
      "op": "POP",
      "path": "0"
    },
    "1387": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6580,
        6744
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4AE"
    },
    "1390": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6580,
        6744
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1391": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6580,
        6744
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1392": {
      "op": "POP"
    },
    "1393": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6761,
        6767
      ],
      "op": "SWAP3",
      "path": "0",
      "statement": 10
    },
    "1394": {
      "fn": "SimpleElection.getCandidatesForElection",
      "offset": [
        6266,
        6774
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1395": {
      "op": "POP"
    },
    "1396": {
      "op": "POP"
    },
    "1397": {
      "fn": "SimpleElection.getCandidatesForElection",
      "jump": "o",
      "offset": [
        6266,
        6774
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1398": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7395,
        7623
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1399": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7488,
        7510
      ],
      "op": "PUSH4",
      "path": "0",
      "statement": 11,
      "value": "0xFFFFFFFF"
    },
    "1404": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7488,
        7510
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1405": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7488,
        7510
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1406": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7488,
        7510
      ],
      "op": "AND",
      "path": "0"
    },
    "1407": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7463,
        7467
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1409": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7488,
        7510
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1410": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7488,
        7510
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1411": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7488,
        7510
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1412": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7488,
        7497
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1414": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7488,
        7510
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1416": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7488,
        7510
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1417": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7488,
        7510
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1418": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7488,
        7510
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1419": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7488,
        7510
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1421": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7488,
        7510
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1422": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7488,
        7510
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1423": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7488,
        7524
      ],
      "op": "ADD",
      "path": "0"
    },
    "1424": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7488,
        7524
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1425": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7463,
        7467
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1426": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7463,
        7467
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1427": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7528,
        7543
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "1428": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7488,
        7524
      ],
      "op": "PUSH6",
      "path": "0",
      "value": "0x10000000000"
    },
    "1435": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7488,
        7524
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1436": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7488,
        7524
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1437": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7488,
        7524
      ],
      "op": "DIV",
      "path": "0"
    },
    "1438": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7488,
        7524
      ],
      "op": "AND",
      "path": "0"
    },
    "1439": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7488,
        7543
      ],
      "op": "GT",
      "path": "0"
    },
    "1440": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7488,
        7543
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1441": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7488,
        7543
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1442": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7488,
        7543
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1443": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7487,
        7615
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5D1"
    },
    "1446": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7487,
        7615
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1447": {
      "op": "POP"
    },
    "1448": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7561,
        7583
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1453": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7561,
        7583
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1454": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7561,
        7583
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1455": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7561,
        7583
      ],
      "op": "AND",
      "path": "0"
    },
    "1456": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7561,
        7583
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1458": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7561,
        7583
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1459": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7561,
        7583
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1460": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7561,
        7583
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1461": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7561,
        7570
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1463": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7561,
        7583
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1465": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7561,
        7583
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1466": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7561,
        7583
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1467": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7561,
        7583
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1468": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7561,
        7583
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1470": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7561,
        7583
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1471": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7561,
        7583
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1472": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7561,
        7583
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1473": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7561,
        7595
      ],
      "op": "ADD",
      "path": "0"
    },
    "1474": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7561,
        7595
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1475": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7599,
        7614
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "1476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1478": {
      "op": "PUSH1",
      "value": "0x48"
    },
    "1480": {
      "op": "SHL"
    },
    "1481": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7561,
        7595
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1482": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7561,
        7595
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1483": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7561,
        7595
      ],
      "op": "DIV",
      "path": "0"
    },
    "1484": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7561,
        7595
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1485": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7561,
        7595
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1486": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7561,
        7595
      ],
      "op": "AND",
      "path": "0"
    },
    "1487": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7561,
        7614
      ],
      "op": "LT",
      "path": "0"
    },
    "1488": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7561,
        7614
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1489": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7487,
        7615
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1490": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7479,
        7616
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1491": {
      "fn": "SimpleElection.checkElectionOpen",
      "offset": [
        7395,
        7623
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1492": {
      "op": "POP"
    },
    "1493": {
      "op": "POP"
    },
    "1494": {
      "fn": "SimpleElection.checkElectionOpen",
      "jump": "o",
      "offset": [
        7395,
        7623
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1495": {
      "fn": "SimpleElection.vote",
      "offset": [
        5618,
        5876
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1496": {
      "fn": "SimpleElection.vote",
      "offset": [
        5812,
        5869
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 12,
      "value": "0x5E3"
    },
    "1499": {
      "fn": "SimpleElection.vote",
      "offset": [
        5822,
        5833
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1500": {
      "fn": "SimpleElection.vote",
      "offset": [
        5835,
        5845
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1501": {
      "fn": "SimpleElection.vote",
      "offset": [
        5847,
        5859
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1502": {
      "fn": "SimpleElection.vote",
      "offset": [
        5861,
        5868
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1503": {
      "fn": "SimpleElection.vote",
      "offset": [
        5812,
        5821
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC24"
    },
    "1506": {
      "fn": "SimpleElection.vote",
      "jump": "i",
      "offset": [
        5812,
        5869
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1507": {
      "fn": "SimpleElection.vote",
      "offset": [
        5812,
        5869
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1508": {
      "fn": "SimpleElection.vote",
      "offset": [
        5618,
        5876
      ],
      "op": "POP",
      "path": "0"
    },
    "1509": {
      "fn": "SimpleElection.vote",
      "offset": [
        5618,
        5876
      ],
      "op": "POP",
      "path": "0"
    },
    "1510": {
      "fn": "SimpleElection.vote",
      "offset": [
        5618,
        5876
      ],
      "op": "POP",
      "path": "0"
    },
    "1511": {
      "fn": "SimpleElection.vote",
      "jump": "o",
      "offset": [
        5618,
        5876
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1512": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        5910,
        6218
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1513": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6030,
        6046
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1515": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6030,
        6053
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1516": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        5962,
        5978
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1518": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        5962,
        5978
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1519": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        5990,
        6013
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1521": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        5990,
        6013
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1522": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6016,
        6054
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1531": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6016,
        6054
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1532": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6016,
        6054
      ],
      "op": "GT",
      "path": "0"
    },
    "1533": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6016,
        6054
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1534": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6016,
        6054
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x609"
    },
    "1537": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6016,
        6054
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1538": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6016,
        6054
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x609"
    },
    "1541": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6016,
        6054
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1220"
    },
    "1544": {
      "fn": "SimpleElection.getCurrentElections",
      "jump": "i",
      "offset": [
        6016,
        6054
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1545": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6016,
        6054
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1546": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6016,
        6054
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1548": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6016,
        6054
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1549": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6016,
        6054
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1550": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6016,
        6054
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1551": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6016,
        6054
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1552": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6016,
        6054
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1553": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6016,
        6054
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1554": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6016,
        6054
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1556": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6016,
        6054
      ],
      "op": "MUL",
      "path": "0"
    },
    "1557": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6016,
        6054
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1559": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6016,
        6054
      ],
      "op": "ADD",
      "path": "0"
    },
    "1560": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6016,
        6054
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1561": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6016,
        6054
      ],
      "op": "ADD",
      "path": "0"
    },
    "1562": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6016,
        6054
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1564": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6016,
        6054
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1565": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6016,
        6054
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1566": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6016,
        6054
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1567": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6016,
        6054
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x632"
    },
    "1570": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6016,
        6054
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1571": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6016,
        6054
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1572": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6016,
        6054
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1574": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6016,
        6054
      ],
      "op": "ADD",
      "path": "0"
    },
    "1575": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6016,
        6054
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1577": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6016,
        6054
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1578": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6016,
        6054
      ],
      "op": "MUL",
      "path": "0"
    },
    "1579": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6016,
        6054
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1580": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6016,
        6054
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1581": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6016,
        6054
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1582": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6016,
        6054
      ],
      "op": "CALLDATACOPY",
      "path": "0"
    },
    "1583": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6016,
        6054
      ],
      "op": "ADD",
      "path": "0"
    },
    "1584": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6016,
        6054
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1585": {
      "op": "POP"
    },
    "1586": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6016,
        6054
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1587": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6016,
        6054
      ],
      "op": "POP",
      "path": "0"
    },
    "1588": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        5990,
        6054
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1589": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        5990,
        6054
      ],
      "op": "POP",
      "path": "0"
    },
    "1590": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6069,
        6077
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1592": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6064,
        6189
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1593": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6087,
        6103
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1595": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6087,
        6110
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1596": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6083,
        6110
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1601": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6083,
        6110
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1602": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6083,
        6110
      ],
      "op": "AND",
      "path": "0"
    },
    "1603": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6083,
        6110
      ],
      "op": "LT",
      "path": "0"
    },
    "1604": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6064,
        6189
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1605": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6064,
        6189
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6DE"
    },
    "1608": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6064,
        6189
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1609": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6143,
        6152
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 13,
      "value": "0x2"
    },
    "1611": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6143,
        6173
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1613": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6153,
        6169
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1615": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6170,
        6171
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1616": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6153,
        6172
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1621": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6153,
        6172
      ],
      "op": "AND",
      "path": "0"
    },
    "1622": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6153,
        6172
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1623": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6153,
        6172
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1624": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6153,
        6172
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1625": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6153,
        6172
      ],
      "op": "LT",
      "path": "0"
    },
    "1626": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6153,
        6172
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x665"
    },
    "1629": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6153,
        6172
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1630": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6153,
        6172
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x665"
    },
    "1633": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6153,
        6172
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1440"
    },
    "1636": {
      "fn": "SimpleElection.getCurrentElections",
      "jump": "i",
      "offset": [
        6153,
        6172
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1637": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6153,
        6172
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1638": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6153,
        6172
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1639": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6153,
        6172
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1641": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6153,
        6172
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1642": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6153,
        6172
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1644": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6153,
        6172
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1646": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6153,
        6172
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1647": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6153,
        6172
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1648": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6153,
        6172
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "1650": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6153,
        6172
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1651": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6153,
        6172
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1652": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6153,
        6172
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1653": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6153,
        6172
      ],
      "op": "DIV",
      "path": "0"
    },
    "1654": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6153,
        6172
      ],
      "op": "ADD",
      "path": "0"
    },
    "1655": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6153,
        6172
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1656": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6153,
        6172
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1657": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6153,
        6172
      ],
      "op": "MOD",
      "path": "0"
    },
    "1658": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6153,
        6172
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1660": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6153,
        6172
      ],
      "op": "MUL",
      "path": "0"
    },
    "1661": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6153,
        6172
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1662": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6153,
        6172
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1663": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6153,
        6172
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1664": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6153,
        6172
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1667": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6153,
        6172
      ],
      "op": "EXP",
      "path": "0"
    },
    "1668": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6153,
        6172
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1669": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6153,
        6172
      ],
      "op": "DIV",
      "path": "0"
    },
    "1670": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6153,
        6172
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1675": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6153,
        6172
      ],
      "op": "AND",
      "path": "0"
    },
    "1676": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6143,
        6173
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1681": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6143,
        6173
      ],
      "op": "AND",
      "path": "0"
    },
    "1682": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6143,
        6173
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1687": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6143,
        6173
      ],
      "op": "AND",
      "path": "0"
    },
    "1688": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6143,
        6173
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1689": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6143,
        6173
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1690": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6143,
        6173
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1692": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6143,
        6173
      ],
      "op": "ADD",
      "path": "0"
    },
    "1693": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6143,
        6173
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1694": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6143,
        6173
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1695": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6143,
        6173
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1696": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6143,
        6173
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1698": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6143,
        6173
      ],
      "op": "ADD",
      "path": "0"
    },
    "1699": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6143,
        6173
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1701": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6143,
        6173
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1702": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6143,
        6178
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1704": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6143,
        6178
      ],
      "op": "ADD",
      "path": "0"
    },
    "1705": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6143,
        6178
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1706": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6131,
        6137
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1707": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6138,
        6139
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1708": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6131,
        6140
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1713": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6131,
        6140
      ],
      "op": "AND",
      "path": "0"
    },
    "1714": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6131,
        6140
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1715": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6131,
        6140
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1716": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6131,
        6140
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1717": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6131,
        6140
      ],
      "op": "LT",
      "path": "0"
    },
    "1718": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6131,
        6140
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6C1"
    },
    "1721": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6131,
        6140
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1722": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6131,
        6140
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6C1"
    },
    "1725": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6131,
        6140
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1440"
    },
    "1728": {
      "fn": "SimpleElection.getCurrentElections",
      "jump": "i",
      "offset": [
        6131,
        6140
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1729": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6131,
        6140
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1730": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6131,
        6140
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1732": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6131,
        6140
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1733": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6131,
        6140
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1734": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6131,
        6140
      ],
      "op": "MUL",
      "path": "0"
    },
    "1735": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6131,
        6140
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1736": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6131,
        6140
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1737": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6131,
        6140
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1738": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6131,
        6140
      ],
      "op": "ADD",
      "path": "0"
    },
    "1739": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6131,
        6140
      ],
      "op": "ADD",
      "path": "0"
    },
    "1740": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6131,
        6178
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1741": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6112,
        6115
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 14
    },
    "1742": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6112,
        6115
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6D6"
    },
    "1745": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6112,
        6115
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1746": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6112,
        6115
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x148C"
    },
    "1749": {
      "fn": "SimpleElection.getCurrentElections",
      "jump": "i",
      "offset": [
        6112,
        6115
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1750": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6112,
        6115
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1751": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6112,
        6115
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1752": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6112,
        6115
      ],
      "op": "POP",
      "path": "0"
    },
    "1753": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6112,
        6115
      ],
      "op": "POP",
      "path": "0"
    },
    "1754": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6064,
        6189
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x638"
    },
    "1757": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6064,
        6189
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1758": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6064,
        6189
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1759": {
      "op": "POP"
    },
    "1760": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        6205,
        6211
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 15
    },
    "1761": {
      "fn": "SimpleElection.getCurrentElections",
      "offset": [
        5910,
        6218
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1762": {
      "op": "POP"
    },
    "1763": {
      "fn": "SimpleElection.getCurrentElections",
      "jump": "o",
      "offset": [
        5910,
        6218
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1764": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7629,
        7870
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1765": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7765,
        7784
      ],
      "op": "PUSH4",
      "path": "0",
      "statement": 16,
      "value": "0xFFFFFFFF"
    },
    "1770": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7765,
        7784
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1771": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7765,
        7784
      ],
      "op": "AND",
      "path": "0"
    },
    "1772": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7736,
        7740
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1774": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7765,
        7784
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1775": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7765,
        7784
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1776": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7765,
        7784
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1777": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7765,
        7771
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "1779": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7765,
        7784
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1781": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7765,
        7784
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1782": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7765,
        7784
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1783": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7765,
        7784
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1784": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7765,
        7784
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1786": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7765,
        7784
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1787": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7765,
        7784
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1788": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7765,
        7784
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1793": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1795": {
      "op": "SHL"
    },
    "1796": {
      "op": "SUB"
    },
    "1797": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7765,
        7791
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1798": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7765,
        7791
      ],
      "op": "AND",
      "path": "0"
    },
    "1799": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7765,
        7791
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1800": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7765,
        7791
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1801": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7765,
        7791
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1802": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7765,
        7791
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1803": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7765,
        7791
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1804": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7765,
        7791
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1805": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7765,
        7791
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1806": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7765,
        7798
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1807": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7765,
        7803
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1808": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7765,
        7803
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1809": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7765,
        7803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1810": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7764,
        7862
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x74C"
    },
    "1813": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7764,
        7862
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1814": {
      "op": "POP"
    },
    "1815": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7821,
        7840
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1820": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7821,
        7840
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1821": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7821,
        7840
      ],
      "op": "AND",
      "path": "0"
    },
    "1822": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7821,
        7840
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1824": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7821,
        7840
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1825": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7821,
        7840
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1826": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7821,
        7840
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1827": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7821,
        7827
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "1829": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7821,
        7840
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1831": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7821,
        7840
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1832": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7821,
        7840
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1833": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7821,
        7840
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1834": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7821,
        7840
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1836": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7821,
        7840
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1837": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7821,
        7840
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1838": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7821,
        7840
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1843": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1845": {
      "op": "SHL"
    },
    "1846": {
      "op": "SUB"
    },
    "1847": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7821,
        7847
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1848": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7821,
        7847
      ],
      "op": "AND",
      "path": "0"
    },
    "1849": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7821,
        7847
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1850": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7821,
        7847
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1851": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7821,
        7847
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1852": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7821,
        7847
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1853": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7821,
        7847
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1854": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7821,
        7847
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1855": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7821,
        7847
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1856": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7821,
        7853
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1858": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7821,
        7853
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1859": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7821,
        7853
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1860": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7821,
        7853
      ],
      "op": "ADD",
      "path": "0"
    },
    "1861": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7821,
        7853
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1862": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7821,
        7853
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1864": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7821,
        7853
      ],
      "op": "AND",
      "path": "0"
    },
    "1865": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7821,
        7861
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1866": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7821,
        7861
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1867": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7821,
        7861
      ],
      "op": "EQ",
      "path": "0"
    },
    "1868": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7764,
        7862
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1869": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7756,
        7863
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1870": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        7629,
        7870
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1871": {
      "op": "POP"
    },
    "1872": {
      "op": "POP"
    },
    "1873": {
      "op": "POP"
    },
    "1874": {
      "fn": "SimpleElection.voterHasRegistred",
      "jump": "o",
      "offset": [
        7629,
        7870
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1875": {
      "offset": [
        1139,
        1187
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1876": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1878": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1880": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1881": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1882": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1884": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1885": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1887": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1889": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1890": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1891": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1892": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1893": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1894": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "LT",
      "path": "0"
    },
    "1895": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x76F"
    },
    "1898": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1899": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1901": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1902": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1903": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1904": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1905": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1907": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1908": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1910": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1912": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1913": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1914": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1916": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1917": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1918": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1919": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "DIV",
      "path": "0"
    },
    "1920": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "ADD",
      "path": "0"
    },
    "1921": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1922": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1923": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "MOD",
      "path": "0"
    },
    "1924": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1925": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "POP",
      "path": "0"
    },
    "1926": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1927": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "POP",
      "path": "0"
    },
    "1928": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1929": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1930": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1931": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1934": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "EXP",
      "path": "0"
    },
    "1935": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1936": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "DIV",
      "path": "0"
    },
    "1937": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1939": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "AND",
      "path": "0"
    },
    "1940": {
      "fn": "SimpleElection.voterHasRegistred",
      "offset": [
        1139,
        1187
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1941": {
      "fn": "SimpleElection.voterHasRegistred",
      "jump": "o",
      "offset": [
        1139,
        1187
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1942": {
      "fn": "SimpleElection.createElection",
      "offset": [
        1863,
        3492
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1943": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2474,
        2475
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 17,
      "value": "0x0"
    },
    "1945": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2453,
        2464
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1946": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2453,
        2471
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1947": {
      "branch": 43,
      "fn": "SimpleElection.createElection",
      "offset": [
        2453,
        2475
      ],
      "op": "GT",
      "path": "0"
    },
    "1948": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2445,
        2516
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7F3"
    },
    "1951": {
      "branch": 43,
      "fn": "SimpleElection.createElection",
      "offset": [
        2445,
        2516
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1952": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2445,
        2516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1954": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2445,
        2516
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1955": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1959": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1961": {
      "op": "SHL"
    },
    "1962": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2445,
        2516
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1963": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2445,
        2516
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1964": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1966": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2445,
        2516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1968": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2445,
        2516
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1969": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2445,
        2516
      ],
      "op": "ADD",
      "path": "0"
    },
    "1970": {
      "op": "MSTORE"
    },
    "1971": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1973": {
      "op": "DUP1"
    },
    "1974": {
      "op": "DUP3"
    },
    "1975": {
      "op": "ADD"
    },
    "1976": {
      "op": "MSTORE"
    },
    "1977": {
      "op": "PUSH32",
      "value": "0x54686572652073686F756C642062652061746C6561737420312063616E646964"
    },
    "2010": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2012": {
      "op": "DUP3"
    },
    "2013": {
      "op": "ADD"
    },
    "2014": {
      "op": "MSTORE"
    },
    "2015": {
      "op": "PUSH4",
      "value": "0x30BA3297"
    },
    "2020": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2022": {
      "op": "SHL"
    },
    "2023": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2025": {
      "op": "DUP3"
    },
    "2026": {
      "op": "ADD"
    },
    "2027": {
      "op": "MSTORE"
    },
    "2028": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2030": {
      "op": "ADD"
    },
    "2031": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2445,
        2516
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B8"
    },
    "2034": {
      "op": "JUMP"
    },
    "2035": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2445,
        2516
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2036": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8119,
        8123
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2038": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8142,
        8169
      ],
      "op": "DUP9",
      "path": "0"
    },
    "2039": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8142,
        8169
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2040": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8142,
        8169
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2041": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8142,
        8169
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2043": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8142,
        8169
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2044": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8142,
        8169
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2045": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8142,
        8169
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2046": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8142,
        8169
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2048": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8142,
        8169
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2049": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8142,
        8169
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2050": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8142,
        8169
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2051": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8142,
        8169
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "2056": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8142,
        8169
      ],
      "op": "AND",
      "path": "0"
    },
    "2057": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8142,
        8174
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2058": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2527,
        2650
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 18,
      "value": "0x874"
    },
    "2061": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2527,
        2650
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2062": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2527,
        2650
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2064": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2527,
        2650
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2065": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2069": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2071": {
      "op": "SHL"
    },
    "2072": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2527,
        2650
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2073": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2527,
        2650
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2074": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2076": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2527,
        2650
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2078": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2527,
        2650
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2079": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2527,
        2650
      ],
      "op": "ADD",
      "path": "0"
    },
    "2080": {
      "op": "MSTORE"
    },
    "2081": {
      "op": "PUSH1",
      "value": "0x36"
    },
    "2083": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2085": {
      "op": "DUP3"
    },
    "2086": {
      "op": "ADD"
    },
    "2087": {
      "op": "MSTORE"
    },
    "2088": {
      "op": "PUSH32",
      "value": "0x5468697320656C656374696F6E20616C7265616479206578697374732C20706C"
    },
    "2121": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2123": {
      "op": "DUP3"
    },
    "2124": {
      "op": "ADD"
    },
    "2125": {
      "op": "MSTORE"
    },
    "2126": {
      "op": "PUSH22",
      "value": "0x656173652073656C656374206F74686572206E616D65"
    },
    "2149": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "2151": {
      "op": "SHL"
    },
    "2152": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2154": {
      "op": "DUP3"
    },
    "2155": {
      "op": "ADD"
    },
    "2156": {
      "op": "MSTORE"
    },
    "2157": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2159": {
      "op": "ADD"
    },
    "2160": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2527,
        2650
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B8"
    },
    "2163": {
      "op": "JUMP"
    },
    "2164": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2527,
        2650
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2165": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2680,
        2693
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "2167": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2680,
        2693
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2168": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 19,
      "value": "0x40"
    },
    "2170": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2171": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2172": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2680,
        2693
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2175": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2176": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "ADD",
      "path": "0"
    },
    "2177": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2178": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2179": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "DUP11",
      "path": "0"
    },
    "2180": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2181": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2182": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2184": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2185": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2186": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "ADD",
      "path": "0"
    },
    "2187": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "DUP12",
      "path": "0"
    },
    "2188": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2189": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2190": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2680,
        2693
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "2195": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2680,
        2693
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2196": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2680,
        2693
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2197": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2680,
        2693
      ],
      "op": "AND",
      "path": "0"
    },
    "2198": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2199": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2200": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "ADD",
      "path": "0"
    },
    "2201": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2202": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2203": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2204": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "DUP12",
      "path": "0"
    },
    "2205": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2206": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2207": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "2209": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2210": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "ADD",
      "path": "0"
    },
    "2211": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2212": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "DUP10",
      "path": "0"
    },
    "2213": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2214": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "AND",
      "path": "0"
    },
    "2215": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2217": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2218": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "ADD",
      "path": "0"
    },
    "2219": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2220": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "DUP9",
      "path": "0"
    },
    "2221": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2222": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "AND",
      "path": "0"
    },
    "2223": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "2225": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2226": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "ADD",
      "path": "0"
    },
    "2227": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2228": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2229": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2230": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "AND",
      "path": "0"
    },
    "2231": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "2233": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2234": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "ADD",
      "path": "0"
    },
    "2235": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2236": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2237": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2238": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "AND",
      "path": "0"
    },
    "2239": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "2241": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2242": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "ADD",
      "path": "0"
    },
    "2243": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2244": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2660,
        2677
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2246": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2724
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2247": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2724
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2248": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2724
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2249": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2712
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2251": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2724
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2252": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2724
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2253": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2724
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2254": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2724
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2255": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2724
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2256": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2724
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2257": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2258": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2259": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2260": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2261": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2262": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2263": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2264": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2265": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2266": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2727,
        2963
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2267": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2724
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2268": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8EB"
    },
    "2271": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2272": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2680,
        2693
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2274": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2275": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "ADD",
      "path": "0"
    },
    "2276": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2277": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "ADD",
      "path": "0"
    },
    "2278": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2279": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x103C"
    },
    "2282": {
      "fn": "SimpleElection.createElection",
      "jump": "i",
      "offset": [
        2703,
        2963
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2283": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2284": {
      "op": "POP"
    },
    "2285": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2287": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2288": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2289": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "ADD",
      "path": "0"
    },
    "2290": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2291": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2293": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2294": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2295": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "ADD",
      "path": "0"
    },
    "2296": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2297": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2298": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "2300": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2301": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "ADD",
      "path": "0"
    },
    "2302": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2303": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2305": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2306": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "ADD",
      "path": "0"
    },
    "2307": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2308": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "2310": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2311": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "ADD",
      "path": "0"
    },
    "2312": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2313": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "2315": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "DUP9",
      "path": "0"
    },
    "2316": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "ADD",
      "path": "0"
    },
    "2317": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2318": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "2320": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2321": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "SWAP9",
      "path": "0"
    },
    "2322": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "ADD",
      "path": "0"
    },
    "2323": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2324": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "2329": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2330": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2331": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "AND",
      "path": "0"
    },
    "2332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2334": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "2336": {
      "op": "SHL"
    },
    "2337": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "MUL",
      "path": "0"
    },
    "2338": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "2343": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "2345": {
      "op": "SHL"
    },
    "2346": {
      "op": "NOT"
    },
    "2347": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "SWAP10",
      "path": "0"
    },
    "2348": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2349": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "AND",
      "path": "0"
    },
    "2350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2352": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "2354": {
      "op": "SHL"
    },
    "2355": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "MUL",
      "path": "0"
    },
    "2356": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "SWAP10",
      "path": "0"
    },
    "2357": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2358": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "SWAP10",
      "path": "0"
    },
    "2359": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "AND",
      "path": "0"
    },
    "2360": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2369": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "2371": {
      "op": "SHL"
    },
    "2372": {
      "op": "NOT"
    },
    "2373": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2374": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2375": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "AND",
      "path": "0"
    },
    "2376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2378": {
      "op": "PUSH1",
      "value": "0x48"
    },
    "2380": {
      "op": "SHL"
    },
    "2381": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "MUL",
      "path": "0"
    },
    "2382": {
      "op": "PUSH13",
      "value": "0xFFFFFFFF000000000000000000"
    },
    "2396": {
      "op": "NOT"
    },
    "2397": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2398": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2399": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "AND",
      "path": "0"
    },
    "2400": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "PUSH6",
      "path": "0",
      "value": "0x10000000000"
    },
    "2407": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "MUL",
      "path": "0"
    },
    "2408": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2409": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2410": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2411": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "AND",
      "path": "0"
    },
    "2412": {
      "op": "PUSH13",
      "value": "0xFFFFFFFFFFFFFFFF0000000000"
    },
    "2426": {
      "op": "NOT"
    },
    "2427": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "2428": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2429": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2430": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "PUSH5",
      "path": "0",
      "value": "0x100000000"
    },
    "2436": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "MUL",
      "path": "0"
    },
    "2437": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "2443": {
      "op": "NOT"
    },
    "2444": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2445": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "SWAP8",
      "path": "0"
    },
    "2446": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "AND",
      "path": "0"
    },
    "2447": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "SWAP10",
      "path": "0"
    },
    "2448": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2449": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "AND",
      "path": "0"
    },
    "2450": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "SWAP10",
      "path": "0"
    },
    "2451": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2452": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "SWAP10",
      "path": "0"
    },
    "2453": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "OR",
      "path": "0"
    },
    "2454": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "2455": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2456": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "2457": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "OR",
      "path": "0"
    },
    "2458": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2459": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2460": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2461": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "AND",
      "path": "0"
    },
    "2462": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "2463": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2464": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "2465": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "OR",
      "path": "0"
    },
    "2466": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "OR",
      "path": "0"
    },
    "2467": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2468": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2469": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2470": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "AND",
      "path": "0"
    },
    "2471": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "OR",
      "path": "0"
    },
    "2472": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2473": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2474": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2475": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "OR",
      "path": "0"
    },
    "2476": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2477": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2478": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2479": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2481": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2973,
        2992
      ],
      "op": "DUP12",
      "path": "0",
      "statement": 20
    },
    "2482": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2973,
        2992
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2483": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2973,
        2992
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2484": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2973,
        2992
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2486": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2973,
        2992
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2487": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2973,
        2992
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2488": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2973,
        2992
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2489": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2973,
        2992
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2490": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2973,
        2992
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2491": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2973,
        2992
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2492": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2973,
        3005
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2493": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2973,
        3005
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2494": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2973,
        3005
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2495": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2973,
        3005
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2496": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2973,
        3005
      ],
      "op": "AND",
      "path": "0"
    },
    "2497": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "2502": {
      "op": "NOT"
    },
    "2503": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2973,
        3005
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2504": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2973,
        3005
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2505": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2973,
        3005
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2506": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2973,
        3005
      ],
      "op": "AND",
      "path": "0"
    },
    "2507": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2973,
        3005
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2508": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2973,
        3005
      ],
      "op": "OR",
      "path": "0"
    },
    "2509": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2973,
        3005
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2510": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2973,
        3005
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2511": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2973,
        3005
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2512": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2514": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3015,
        3048
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 21
    },
    "2515": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3015,
        3048
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2516": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3015,
        3048
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2517": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3015,
        3048
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2518": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3015,
        3048
      ],
      "op": "ADD",
      "path": "0"
    },
    "2519": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3015,
        3048
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2520": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3015,
        3048
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2521": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3015,
        3048
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2522": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3015,
        3048
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2523": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3015,
        3048
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2524": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3015,
        3048
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "2526": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3015,
        3048
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2527": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3015,
        3048
      ],
      "op": "DIV",
      "path": "0"
    },
    "2528": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3015,
        3048
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6"
    },
    "2561": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3015,
        3048
      ],
      "op": "ADD",
      "path": "0"
    },
    "2562": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3015,
        3048
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2563": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3015,
        3048
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2564": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3015,
        3048
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "2566": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3015,
        3048
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2567": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3015,
        3048
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2568": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3015,
        3048
      ],
      "op": "AND",
      "path": "0"
    },
    "2569": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2571": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3015,
        3048
      ],
      "op": "MUL",
      "path": "0"
    },
    "2572": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2703,
        2963
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2575": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3015,
        3048
      ],
      "op": "EXP",
      "path": "0"
    },
    "2576": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3015,
        3048
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2577": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3015,
        3048
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2578": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3015,
        3048
      ],
      "op": "MUL",
      "path": "0"
    },
    "2579": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3015,
        3048
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2580": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3015,
        3048
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2581": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3015,
        3048
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2582": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3015,
        3048
      ],
      "op": "MUL",
      "path": "0"
    },
    "2583": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3015,
        3048
      ],
      "op": "NOT",
      "path": "0"
    },
    "2584": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3015,
        3048
      ],
      "op": "AND",
      "path": "0"
    },
    "2585": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3015,
        3048
      ],
      "op": "OR",
      "path": "0"
    },
    "2586": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3015,
        3048
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2587": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3015,
        3048
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2588": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3059,
        3178
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2589": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3081,
        3092
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2590": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3081,
        3099
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2591": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3077,
        3078
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2592": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3077,
        3099
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2594": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3077,
        3099
      ],
      "op": "AND",
      "path": "0"
    },
    "2595": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3077,
        3099
      ],
      "op": "LT",
      "path": "0"
    },
    "2596": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3059,
        3178
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2597": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3059,
        3178
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB01"
    },
    "2600": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3059,
        3178
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2601": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3120,
        3167
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 22,
      "value": "0xAEF"
    },
    "2604": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3133,
        3143
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2605": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3145,
        3156
      ],
      "op": "DUP9",
      "path": "0"
    },
    "2606": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3157,
        3158
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2607": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3145,
        3159
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2609": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3145,
        3159
      ],
      "op": "AND",
      "path": "0"
    },
    "2610": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3145,
        3159
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2611": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3145,
        3159
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2612": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3145,
        3159
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2613": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3145,
        3159
      ],
      "op": "LT",
      "path": "0"
    },
    "2614": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3145,
        3159
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA41"
    },
    "2617": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3145,
        3159
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2618": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3145,
        3159
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA41"
    },
    "2621": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3145,
        3159
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1440"
    },
    "2624": {
      "fn": "SimpleElection.createElection",
      "jump": "i",
      "offset": [
        3145,
        3159
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2625": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3145,
        3159
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2626": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3145,
        3159
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2628": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3145,
        3159
      ],
      "op": "MUL",
      "path": "0"
    },
    "2629": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3145,
        3159
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2631": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3145,
        3159
      ],
      "op": "ADD",
      "path": "0"
    },
    "2632": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3145,
        3159
      ],
      "op": "ADD",
      "path": "0"
    },
    "2633": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3145,
        3159
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2634": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3161,
        3162
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2635": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3165,
        3166
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2637": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3161,
        3166
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA56"
    },
    "2640": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3161,
        3166
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2641": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3161,
        3166
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2642": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3161,
        3166
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14B0"
    },
    "2645": {
      "fn": "SimpleElection.createElection",
      "jump": "i",
      "offset": [
        3161,
        3166
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2646": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3161,
        3166
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2647": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3714,
        3742
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 23,
      "value": "0x40"
    },
    "2649": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3714,
        3742
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2650": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3714,
        3742
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2651": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3714,
        3742
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2652": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3714,
        3742
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2653": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3714,
        3742
      ],
      "op": "ADD",
      "path": "0"
    },
    "2654": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3714,
        3742
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2655": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3714,
        3742
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2656": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3714,
        3742
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2657": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3714,
        3742
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2658": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3714,
        3742
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2659": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2661": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3714,
        3742
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2663": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3714,
        3742
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2664": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3714,
        3742
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2665": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3714,
        3742
      ],
      "op": "ADD",
      "path": "0"
    },
    "2666": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3714,
        3742
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2667": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3714,
        3742
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2668": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3714,
        3742
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2669": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3674,
        3697
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "2674": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3674,
        3697
      ],
      "op": "SWAP8",
      "path": "0"
    },
    "2675": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3674,
        3697
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2676": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3674,
        3697
      ],
      "op": "SWAP8",
      "path": "0"
    },
    "2677": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3674,
        3697
      ],
      "op": "AND",
      "path": "0"
    },
    "2678": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3674,
        3697
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2679": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3674,
        3697
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2680": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3674,
        3697
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2681": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3674,
        3684
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2683": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3674,
        3697
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2684": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3674,
        3697
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2685": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3674,
        3697
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2686": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3674,
        3697
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2687": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3674,
        3697
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2688": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3674,
        3711
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2690": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3674,
        3711
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "2691": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3674,
        3711
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2692": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3674,
        3711
      ],
      "op": "AND",
      "path": "0"
    },
    "2693": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3674,
        3711
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2694": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3674,
        3711
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2695": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3674,
        3711
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2696": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3674,
        3711
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2697": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3674,
        3711
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2698": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3674,
        3711
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2699": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3674,
        3711
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2700": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3674,
        3711
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2701": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3674,
        3711
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2702": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3674,
        3742
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2703": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3674,
        3742
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2704": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3674,
        3742
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2705": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3674,
        3742
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2706": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3674,
        3742
      ],
      "op": "SWAP8",
      "path": "0"
    },
    "2707": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3674,
        3742
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2708": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3674,
        3742
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2710": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3674,
        3742
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2711": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3674,
        3742
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2712": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3674,
        3742
      ],
      "op": "ADD",
      "path": "0"
    },
    "2713": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3674,
        3742
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2714": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3752,
        3778
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 24
    },
    "2715": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3752,
        3778
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2716": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3752,
        3778
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2717": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3752,
        3765
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2719": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3752,
        3778
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2720": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3752,
        3778
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2721": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3752,
        3778
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2722": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3752,
        3778
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2723": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3752,
        3778
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2724": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3752,
        3794
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "2725": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3752,
        3794
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2726": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3752,
        3794
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2727": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3752,
        3794
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "2728": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3752,
        3794
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2729": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3752,
        3794
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2730": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3752,
        3794
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2731": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3752,
        3794
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2732": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3752,
        3794
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2733": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3752,
        3809
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2734": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3752,
        3809
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2735": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2737": {
      "op": "NOT"
    },
    "2738": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3752,
        3809
      ],
      "op": "AND",
      "path": "0"
    },
    "2739": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3752,
        3809
      ],
      "op": "DUP9",
      "path": "0"
    },
    "2740": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3752,
        3809
      ],
      "op": "OR",
      "path": "0"
    },
    "2741": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3752,
        3809
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2742": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3752,
        3809
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2743": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3819,
        3846
      ],
      "op": "SWAP5",
      "path": "0",
      "statement": 25
    },
    "2744": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3819,
        3846
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2745": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3819,
        3846
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2746": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3819,
        3833
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2748": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3819,
        3846
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2749": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3819,
        3846
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2750": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3819,
        3846
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2751": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3819,
        3846
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2752": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3819,
        3846
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2753": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3819,
        3865
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2754": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3819,
        3865
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2755": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3819,
        3865
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2756": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3819,
        3865
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2757": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3819,
        3865
      ],
      "op": "ADD",
      "path": "0"
    },
    "2758": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3819,
        3865
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2759": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3819,
        3865
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2760": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3819,
        3865
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2761": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3819,
        3865
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2762": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3819,
        3865
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2763": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3819,
        3865
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2764": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3819,
        3865
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2765": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3819,
        3865
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2766": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3819,
        3865
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2767": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3819,
        3865
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2768": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3819,
        3865
      ],
      "op": "DIV",
      "path": "0"
    },
    "2769": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3819,
        3865
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2770": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3819,
        3865
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2771": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3819,
        3865
      ],
      "op": "ADD",
      "path": "0"
    },
    "2772": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3819,
        3865
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2773": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3819,
        3865
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2774": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3819,
        3865
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2776": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3819,
        3865
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2777": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3819,
        3865
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2778": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3819,
        3865
      ],
      "op": "AND",
      "path": "0"
    },
    "2779": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3752,
        3809
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2782": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3819,
        3865
      ],
      "op": "EXP",
      "path": "0"
    },
    "2783": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3819,
        3865
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2784": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3819,
        3865
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2785": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3819,
        3865
      ],
      "op": "MUL",
      "path": "0"
    },
    "2786": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3819,
        3865
      ],
      "op": "NOT",
      "path": "0"
    },
    "2787": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3819,
        3865
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2788": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3819,
        3865
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2789": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3819,
        3865
      ],
      "op": "AND",
      "path": "0"
    },
    "2790": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3819,
        3865
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2791": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3819,
        3865
      ],
      "op": "MUL",
      "path": "0"
    },
    "2792": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3819,
        3865
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2793": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3819,
        3865
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2794": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3819,
        3865
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2795": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3819,
        3865
      ],
      "op": "OR",
      "path": "0"
    },
    "2796": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3819,
        3865
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2797": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3819,
        3865
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2798": {
      "fn": "SimpleElection.addCandidate",
      "offset": [
        3540,
        3872
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2799": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3120,
        3167
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2800": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3101,
        3104
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 26
    },
    "2801": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3101,
        3104
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAF9"
    },
    "2804": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3101,
        3104
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2805": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3101,
        3104
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x146C"
    },
    "2808": {
      "fn": "SimpleElection.createElection",
      "jump": "i",
      "offset": [
        3101,
        3104
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2809": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3101,
        3104
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2810": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3101,
        3104
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2811": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3101,
        3104
      ],
      "op": "POP",
      "path": "0"
    },
    "2812": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3101,
        3104
      ],
      "op": "POP",
      "path": "0"
    },
    "2813": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3059,
        3178
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA1C"
    },
    "2816": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3059,
        3178
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2817": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3059,
        3178
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2818": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3059,
        3178
      ],
      "op": "POP",
      "path": "0"
    },
    "2819": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3192,
        3435
      ],
      "op": "PUSH32",
      "path": "0",
      "statement": 27,
      "value": "0x8C22F42E1642C0F410BC4E3DEBF771A1355EC556BDAF3CE7428E555196569C96"
    },
    "2852": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3221,
        3226
      ],
      "op": "DUP10",
      "path": "0"
    },
    "2853": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3240,
        3252
      ],
      "op": "DUP10",
      "path": "0"
    },
    "2854": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3266,
        3276
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2855": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3290,
        3309
      ],
      "op": "DUP11",
      "path": "0"
    },
    "2856": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3323,
        3337
      ],
      "op": "DUP10",
      "path": "0"
    },
    "2857": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3351,
        3363
      ],
      "op": "DUP10",
      "path": "0"
    },
    "2858": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3377,
        3395
      ],
      "op": "DUP10",
      "path": "0"
    },
    "2859": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3409,
        3425
      ],
      "op": "DUP10",
      "path": "0"
    },
    "2860": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3192,
        3435
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2862": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3192,
        3435
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2863": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3192,
        3435
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB3F"
    },
    "2866": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3192,
        3435
      ],
      "op": "SWAP9",
      "path": "0"
    },
    "2867": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3192,
        3435
      ],
      "op": "SWAP8",
      "path": "0"
    },
    "2868": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3192,
        3435
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "2869": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3192,
        3435
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "2870": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3192,
        3435
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2871": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3192,
        3435
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2872": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3192,
        3435
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2873": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3192,
        3435
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2874": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3192,
        3435
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2875": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3192,
        3435
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14D5"
    },
    "2878": {
      "fn": "SimpleElection.createElection",
      "jump": "i",
      "offset": [
        3192,
        3435
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2879": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3192,
        3435
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2880": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3192,
        3435
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2882": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3192,
        3435
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2883": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3192,
        3435
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2884": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3192,
        3435
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2885": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3192,
        3435
      ],
      "op": "SUB",
      "path": "0"
    },
    "2886": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3192,
        3435
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2887": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3192,
        3435
      ],
      "op": "LOG1",
      "path": "0"
    },
    "2888": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3445,
        3458
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 28,
      "value": "0x7"
    },
    "2890": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3445,
        3460
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2891": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3445,
        3460
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2892": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3445,
        3460
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "2897": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3445,
        3460
      ],
      "op": "AND",
      "path": "0"
    },
    "2898": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3445,
        3460
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2899": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3445,
        3458
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2901": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3445,
        3460
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB5D"
    },
    "2904": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3445,
        3460
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2905": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3445,
        3460
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x148C"
    },
    "2908": {
      "fn": "SimpleElection.createElection",
      "jump": "i",
      "offset": [
        3445,
        3460
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2909": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3445,
        3460
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2910": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3445,
        3460
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2911": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3445,
        3460
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2912": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3445,
        3460
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2915": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3445,
        3460
      ],
      "op": "EXP",
      "path": "0"
    },
    "2916": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3445,
        3460
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2917": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3445,
        3460
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2918": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3445,
        3460
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2919": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3445,
        3460
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "2924": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3445,
        3460
      ],
      "op": "MUL",
      "path": "0"
    },
    "2925": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3445,
        3460
      ],
      "op": "NOT",
      "path": "0"
    },
    "2926": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3445,
        3460
      ],
      "op": "AND",
      "path": "0"
    },
    "2927": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3445,
        3460
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2928": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3445,
        3460
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2929": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3445,
        3460
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "2934": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3445,
        3460
      ],
      "op": "AND",
      "path": "0"
    },
    "2935": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3445,
        3460
      ],
      "op": "MUL",
      "path": "0"
    },
    "2936": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3445,
        3460
      ],
      "op": "OR",
      "path": "0"
    },
    "2937": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3445,
        3460
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2938": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3445,
        3460
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2939": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3445,
        3460
      ],
      "op": "POP",
      "path": "0"
    },
    "2940": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3445,
        3460
      ],
      "op": "POP",
      "path": "0"
    },
    "2941": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3483
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 29,
      "value": "0x7"
    },
    "2943": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3483
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2945": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2946": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2947": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2948": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2949": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2950": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2953": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "EXP",
      "path": "0"
    },
    "2954": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2955": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "DIV",
      "path": "0"
    },
    "2956": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "2961": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "AND",
      "path": "0"
    },
    "2962": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2963": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2964": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2965": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2966": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB9E"
    },
    "2969": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2970": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x148C"
    },
    "2973": {
      "fn": "SimpleElection.createElection",
      "jump": "i",
      "offset": [
        3470,
        3485
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2974": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2975": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2976": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2977": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2980": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "EXP",
      "path": "0"
    },
    "2981": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2982": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2983": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2984": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "2989": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "MUL",
      "path": "0"
    },
    "2990": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "NOT",
      "path": "0"
    },
    "2991": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "AND",
      "path": "0"
    },
    "2992": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2993": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2994": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "2999": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "AND",
      "path": "0"
    },
    "3000": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "MUL",
      "path": "0"
    },
    "3001": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "OR",
      "path": "0"
    },
    "3002": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3003": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3004": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "POP",
      "path": "0"
    },
    "3005": {
      "fn": "SimpleElection.createElection",
      "offset": [
        3470,
        3485
      ],
      "op": "POP",
      "path": "0"
    },
    "3006": {
      "fn": "SimpleElection.createElection",
      "offset": [
        2435,
        3492
      ],
      "op": "POP",
      "path": "0"
    },
    "3007": {
      "fn": "SimpleElection.createElection",
      "offset": [
        1863,
        3492
      ],
      "op": "POP",
      "path": "0"
    },
    "3008": {
      "fn": "SimpleElection.createElection",
      "offset": [
        1863,
        3492
      ],
      "op": "POP",
      "path": "0"
    },
    "3009": {
      "fn": "SimpleElection.createElection",
      "offset": [
        1863,
        3492
      ],
      "op": "POP",
      "path": "0"
    },
    "3010": {
      "fn": "SimpleElection.createElection",
      "offset": [
        1863,
        3492
      ],
      "op": "POP",
      "path": "0"
    },
    "3011": {
      "fn": "SimpleElection.createElection",
      "offset": [
        1863,
        3492
      ],
      "op": "POP",
      "path": "0"
    },
    "3012": {
      "fn": "SimpleElection.createElection",
      "offset": [
        1863,
        3492
      ],
      "op": "POP",
      "path": "0"
    },
    "3013": {
      "fn": "SimpleElection.createElection",
      "offset": [
        1863,
        3492
      ],
      "op": "POP",
      "path": "0"
    },
    "3014": {
      "fn": "SimpleElection.createElection",
      "offset": [
        1863,
        3492
      ],
      "op": "POP",
      "path": "0"
    },
    "3015": {
      "fn": "SimpleElection.createElection",
      "jump": "o",
      "offset": [
        1863,
        3492
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3016": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7121,
        7389
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3017": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7246,
        7268
      ],
      "op": "PUSH4",
      "path": "0",
      "statement": 30,
      "value": "0xFFFFFFFF"
    },
    "3022": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7246,
        7268
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3023": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7246,
        7268
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3024": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7246,
        7268
      ],
      "op": "AND",
      "path": "0"
    },
    "3025": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7217,
        7221
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3027": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7246,
        7268
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3028": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7246,
        7268
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3029": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7246,
        7268
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3030": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7246,
        7255
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3032": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7246,
        7268
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3034": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7246,
        7268
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3035": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7246,
        7268
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3036": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7246,
        7268
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3037": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7246,
        7268
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3039": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7246,
        7268
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3040": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7246,
        7268
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3041": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7246,
        7286
      ],
      "op": "ADD",
      "path": "0"
    },
    "3042": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7246,
        7286
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3043": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7217,
        7221
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3044": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7217,
        7221
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3045": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7290,
        7305
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "3046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3048": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "3050": {
      "op": "SHL"
    },
    "3051": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7246,
        7286
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3052": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7246,
        7286
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3053": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7246,
        7286
      ],
      "op": "DIV",
      "path": "0"
    },
    "3054": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7246,
        7286
      ],
      "op": "AND",
      "path": "0"
    },
    "3055": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7246,
        7305
      ],
      "op": "GT",
      "path": "0"
    },
    "3056": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7246,
        7305
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3057": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7246,
        7305
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3058": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7246,
        7305
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3059": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7245,
        7381
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5D1"
    },
    "3062": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7245,
        7381
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3063": {
      "op": "POP"
    },
    "3064": {
      "op": "POP"
    },
    "3065": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7323,
        7345
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "3070": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7323,
        7345
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3071": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7323,
        7345
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3072": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7323,
        7345
      ],
      "op": "AND",
      "path": "0"
    },
    "3073": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7323,
        7345
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3075": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7323,
        7345
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3076": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7323,
        7345
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3077": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7323,
        7345
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3078": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7323,
        7332
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3080": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7323,
        7345
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3082": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7323,
        7345
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3083": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7323,
        7345
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3084": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7323,
        7345
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3085": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7323,
        7345
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3087": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7323,
        7345
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3088": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7323,
        7345
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3089": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7323,
        7345
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3090": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7323,
        7361
      ],
      "op": "ADD",
      "path": "0"
    },
    "3091": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7323,
        7361
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3092": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7365,
        7380
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "3093": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3095": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "3097": {
      "op": "SHL"
    },
    "3098": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7323,
        7361
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3099": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7323,
        7361
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3100": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7323,
        7361
      ],
      "op": "DIV",
      "path": "0"
    },
    "3101": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7323,
        7361
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3102": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7323,
        7361
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3103": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7323,
        7361
      ],
      "op": "AND",
      "path": "0"
    },
    "3104": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7323,
        7380
      ],
      "op": "LT",
      "path": "0"
    },
    "3105": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7323,
        7380
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3106": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "offset": [
        7323,
        7380
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3107": {
      "fn": "SimpleElection.checkRegistrationOpen",
      "jump": "o",
      "offset": [
        7121,
        7389
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3108": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        3929,
        5582
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3109": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8297
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "3114": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8297
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3115": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8297
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3116": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8297
      ],
      "op": "AND",
      "path": "0"
    },
    "3117": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8252,
        8256
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3119": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8297
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3120": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8297
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3121": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8297
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3122": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8284
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3124": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8297
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3126": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8297
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3127": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8297
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3128": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8297
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3129": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8297
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3131": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8297
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3132": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8297
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3133": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8297
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3134": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8300
      ],
      "op": "ADD",
      "path": "0"
    },
    "3135": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8300
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3136": {
      "fn": "SimpleElection.electionExists",
      "offset": [
        8275,
        8300
      ],
      "op": "AND",
      "path": "0"
    },
    "3137": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4165,
        4231
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 31,
      "value": "0xC8C"
    },
    "3140": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4165,
        4231
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3141": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4165,
        4231
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3143": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4165,
        4231
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3144": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3148": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3150": {
      "op": "SHL"
    },
    "3151": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4165,
        4231
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3152": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4165,
        4231
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3153": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3155": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4165,
        4231
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3157": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4165,
        4231
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3158": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4165,
        4231
      ],
      "op": "ADD",
      "path": "0"
    },
    "3159": {
      "op": "MSTORE"
    },
    "3160": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "3162": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3164": {
      "op": "DUP3"
    },
    "3165": {
      "op": "ADD"
    },
    "3166": {
      "op": "MSTORE"
    },
    "3167": {
      "op": "PUSH32",
      "value": "0x54686520656C656374696F6E20646F65736E2774206578697374000000000000"
    },
    "3200": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3202": {
      "op": "DUP3"
    },
    "3203": {
      "op": "ADD"
    },
    "3204": {
      "op": "MSTORE"
    },
    "3205": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3207": {
      "op": "ADD"
    },
    "3208": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4165,
        4231
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B8"
    },
    "3211": {
      "op": "JUMP"
    },
    "3212": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4165,
        4231
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3213": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4249,
        4279
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 32,
      "value": "0xC95"
    },
    "3216": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4267,
        4278
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3217": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4249,
        4266
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x576"
    },
    "3220": {
      "fn": "SimpleElection.voterVote",
      "jump": "i",
      "offset": [
        4249,
        4279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3221": {
      "branch": 44,
      "fn": "SimpleElection.voterVote",
      "offset": [
        4249,
        4279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3222": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4241,
        4306
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCDA"
    },
    "3225": {
      "branch": 44,
      "fn": "SimpleElection.voterVote",
      "offset": [
        4241,
        4306
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3226": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4241,
        4306
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3228": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4241,
        4306
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3229": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3233": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3235": {
      "op": "SHL"
    },
    "3236": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4241,
        4306
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3237": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4241,
        4306
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3238": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3240": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4241,
        4306
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3242": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4241,
        4306
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3243": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4241,
        4306
      ],
      "op": "ADD",
      "path": "0"
    },
    "3244": {
      "op": "MSTORE"
    },
    "3245": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "3247": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3249": {
      "op": "DUP3"
    },
    "3250": {
      "op": "ADD"
    },
    "3251": {
      "op": "MSTORE"
    },
    "3252": {
      "op": "PUSH22",
      "value": "0x151A1948195B1958DD1A5BDB881A5CC818DB1BDCD959"
    },
    "3275": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "3277": {
      "op": "SHL"
    },
    "3278": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3280": {
      "op": "DUP3"
    },
    "3281": {
      "op": "ADD"
    },
    "3282": {
      "op": "MSTORE"
    },
    "3283": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3285": {
      "op": "ADD"
    },
    "3286": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4241,
        4306
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B8"
    },
    "3289": {
      "op": "JUMP"
    },
    "3290": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4241,
        4306
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3291": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4320,
        4342
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "3296": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4320,
        4342
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3297": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4320,
        4342
      ],
      "op": "AND",
      "path": "0"
    },
    "3298": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4320,
        4342
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3300": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4320,
        4342
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3301": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4320,
        4342
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3302": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4320,
        4342
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3303": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4320,
        4329
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3305": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4320,
        4342
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3307": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4320,
        4342
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3308": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4320,
        4342
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3309": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4320,
        4342
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3310": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4320,
        4342
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3312": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4320,
        4342
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3313": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4320,
        4342
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3314": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4320,
        4342
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3315": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4320,
        4361
      ],
      "op": "ADD",
      "path": "0"
    },
    "3316": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4320,
        4361
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3317": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4320,
        4361
      ],
      "op": "PUSH5",
      "path": "0",
      "value": "0x100000000"
    },
    "3323": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4320,
        4361
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3324": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4320,
        4361
      ],
      "op": "DIV",
      "path": "0"
    },
    "3325": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4320,
        4361
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3327": {
      "branch": 45,
      "fn": "SimpleElection.voterVote",
      "offset": [
        4320,
        4361
      ],
      "op": "AND",
      "path": "0"
    },
    "3328": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4316,
        4573
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3329": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4316,
        4573
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD5F"
    },
    "3332": {
      "branch": 45,
      "fn": "SimpleElection.voterVote",
      "offset": [
        4316,
        4573
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3333": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4402,
        4440
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 33,
      "value": "0xD0E"
    },
    "3336": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4420,
        4431
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3337": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4433,
        4439
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3338": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4402,
        4419
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6E4"
    },
    "3341": {
      "fn": "SimpleElection.voterVote",
      "jump": "i",
      "offset": [
        4402,
        4440
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3342": {
      "branch": 46,
      "fn": "SimpleElection.voterVote",
      "offset": [
        4402,
        4440
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3343": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4377,
        4497
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD5A"
    },
    "3346": {
      "branch": 46,
      "fn": "SimpleElection.voterVote",
      "offset": [
        4377,
        4497
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3347": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4377,
        4497
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3349": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4377,
        4497
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3350": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3354": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3356": {
      "op": "SHL"
    },
    "3357": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4377,
        4497
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3358": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4377,
        4497
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3359": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3361": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4377,
        4497
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3363": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4377,
        4497
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3364": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4377,
        4497
      ],
      "op": "ADD",
      "path": "0"
    },
    "3365": {
      "op": "MSTORE"
    },
    "3366": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "3368": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3370": {
      "op": "DUP3"
    },
    "3371": {
      "op": "ADD"
    },
    "3372": {
      "op": "MSTORE"
    },
    "3373": {
      "op": "PUSH32",
      "value": "0x566F746572206861736E27742072656769737465726564000000000000000000"
    },
    "3406": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3408": {
      "op": "DUP3"
    },
    "3409": {
      "op": "ADD"
    },
    "3410": {
      "op": "MSTORE"
    },
    "3411": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3413": {
      "op": "ADD"
    },
    "3414": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4377,
        4497
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B8"
    },
    "3417": {
      "op": "JUMP"
    },
    "3418": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4377,
        4497
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3419": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4316,
        4573
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD8D"
    },
    "3422": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4316,
        4573
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3423": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4316,
        4573
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3424": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6887,
        6906
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "3429": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6887,
        6906
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3430": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6887,
        6906
      ],
      "op": "AND",
      "path": "0"
    },
    "3431": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6887,
        6906
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3433": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6887,
        6906
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3434": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6887,
        6906
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3435": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6887,
        6906
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3436": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6887,
        6893
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "3438": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6887,
        6906
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3440": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6887,
        6906
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3441": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6887,
        6906
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3442": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6887,
        6906
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3443": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6887,
        6906
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3445": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6887,
        6906
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3446": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6887,
        6906
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3447": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6887,
        6906
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3452": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3454": {
      "op": "SHL"
    },
    "3455": {
      "op": "SUB"
    },
    "3456": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6887,
        6913
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3457": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6887,
        6913
      ],
      "op": "AND",
      "path": "0"
    },
    "3458": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6887,
        6913
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3459": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6887,
        6913
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3460": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6887,
        6913
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3461": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6887,
        6913
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3462": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6887,
        6913
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3463": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6887,
        6913
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3464": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6887,
        6913
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3465": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6923,
        6924
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3467": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6887,
        6924
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3468": {
      "fn": "SimpleElection.registerVoter",
      "offset": [
        6887,
        6924
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3469": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4528,
        4562
      ],
      "op": "JUMPDEST",
      "path": "0",
      "statement": 34
    },
    "3470": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8025
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "3475": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8025
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3476": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8025
      ],
      "op": "AND",
      "path": "0"
    },
    "3477": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        7979,
        7983
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3479": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8025
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3480": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8025
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3481": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8025
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3482": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8012
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "3484": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8025
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3486": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8025
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3487": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8025
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3488": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8025
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3489": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8025
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3491": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8025
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3492": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8025
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3493": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8025
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3498": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3500": {
      "op": "SHL"
    },
    "3501": {
      "op": "SUB"
    },
    "3502": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8032
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3503": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8032
      ],
      "op": "AND",
      "path": "0"
    },
    "3504": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8032
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3505": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8032
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3506": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8032
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3507": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8032
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3508": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8032
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3509": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8032
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3510": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8032
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3511": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8038
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3513": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8038
      ],
      "op": "ADD",
      "path": "0"
    },
    "3514": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8038
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3515": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8038
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3517": {
      "fn": "SimpleElection.voterHasVoted",
      "offset": [
        8006,
        8038
      ],
      "op": "AND",
      "path": "0"
    },
    "3518": {
      "branch": 47,
      "fn": "SimpleElection.voterVote",
      "offset": [
        4603,
        4638
      ],
      "op": "ISZERO",
      "path": "0",
      "statement": 35
    },
    "3519": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4582,
        4688
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE0A"
    },
    "3522": {
      "branch": 47,
      "fn": "SimpleElection.voterVote",
      "offset": [
        4582,
        4688
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3523": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4582,
        4688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3525": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4582,
        4688
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3526": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3530": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3532": {
      "op": "SHL"
    },
    "3533": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4582,
        4688
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3534": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4582,
        4688
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3535": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3537": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4582,
        4688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3539": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4582,
        4688
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3540": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4582,
        4688
      ],
      "op": "ADD",
      "path": "0"
    },
    "3541": {
      "op": "MSTORE"
    },
    "3542": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "3544": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3546": {
      "op": "DUP3"
    },
    "3547": {
      "op": "ADD"
    },
    "3548": {
      "op": "MSTORE"
    },
    "3549": {
      "op": "PUSH32",
      "value": "0x566F7465722068617320616C726561647920566F746564210000000000000000"
    },
    "3582": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3584": {
      "op": "DUP3"
    },
    "3585": {
      "op": "ADD"
    },
    "3586": {
      "op": "MSTORE"
    },
    "3587": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3589": {
      "op": "ADD"
    },
    "3590": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4582,
        4688
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B8"
    },
    "3593": {
      "op": "JUMP"
    },
    "3594": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4582,
        4688
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3595": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4730,
        4749
      ],
      "op": "PUSH4",
      "path": "0",
      "statement": 36,
      "value": "0xFFFFFFFF"
    },
    "3600": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4730,
        4749
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3601": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4730,
        4749
      ],
      "op": "AND",
      "path": "0"
    },
    "3602": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4730,
        4749
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3604": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4730,
        4749
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3605": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4730,
        4749
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3606": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4730,
        4749
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3607": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4730,
        4736
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "3609": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4730,
        4749
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3611": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4730,
        4749
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3612": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4730,
        4749
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3613": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4730,
        4749
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3614": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4730,
        4749
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3616": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4730,
        4749
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3617": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4730,
        4749
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3618": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4730,
        4749
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3623": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3625": {
      "op": "SHL"
    },
    "3626": {
      "op": "SUB"
    },
    "3627": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4730,
        4757
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3628": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4730,
        4757
      ],
      "op": "AND",
      "path": "0"
    },
    "3629": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4730,
        4757
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3630": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4730,
        4757
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3631": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4730,
        4757
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3632": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4730,
        4757
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3633": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4730,
        4757
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3634": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4730,
        4757
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3635": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4730,
        4757
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3636": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4730,
        4764
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3637": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4719,
        4764
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3638": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4719,
        4764
      ],
      "op": "GT",
      "path": "0"
    },
    "3639": {
      "branch": 48,
      "fn": "SimpleElection.voterVote",
      "offset": [
        4719,
        4764
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3640": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4698,
        4821
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE83"
    },
    "3643": {
      "branch": 48,
      "fn": "SimpleElection.voterVote",
      "offset": [
        4698,
        4821
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3644": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4698,
        4821
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3646": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4698,
        4821
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3647": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3651": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3653": {
      "op": "SHL"
    },
    "3654": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4698,
        4821
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3655": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4698,
        4821
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3656": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3658": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4698,
        4821
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3660": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4698,
        4821
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3661": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4698,
        4821
      ],
      "op": "ADD",
      "path": "0"
    },
    "3662": {
      "op": "MSTORE"
    },
    "3663": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3665": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3667": {
      "op": "DUP3"
    },
    "3668": {
      "op": "ADD"
    },
    "3669": {
      "op": "MSTORE"
    },
    "3670": {
      "op": "PUSH32",
      "value": "0x566F74657220646F206E6F74206861766520736F206D616E7920766F74657300"
    },
    "3703": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3705": {
      "op": "DUP3"
    },
    "3706": {
      "op": "ADD"
    },
    "3707": {
      "op": "MSTORE"
    },
    "3708": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3710": {
      "op": "ADD"
    },
    "3711": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4698,
        4821
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B8"
    },
    "3714": {
      "op": "JUMP"
    },
    "3715": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4698,
        4821
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3716": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8479
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "3721": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8479
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3722": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8479
      ],
      "op": "AND",
      "path": "0"
    },
    "3723": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8428,
        8432
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3725": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8479
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3726": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8479
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3727": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8479
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3728": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8466
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3730": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8479
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3732": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8479
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3733": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8479
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3734": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8479
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3735": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8479
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3737": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8479
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3738": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8479
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3739": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8479
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3740": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8493
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3742": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8493
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3743": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8493
      ],
      "op": "AND",
      "path": "0"
    },
    "3744": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8493
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3745": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8493
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3746": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8493
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3747": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8493
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3748": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8493
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3749": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8493
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3750": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8493
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3751": {
      "fn": "SimpleElection.candidateExists",
      "offset": [
        8456,
        8498
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3752": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4831,
        4946
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 37,
      "value": "0xEF3"
    },
    "3755": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4831,
        4946
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3756": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4831,
        4946
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3758": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4831,
        4946
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3759": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3763": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3765": {
      "op": "SHL"
    },
    "3766": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4831,
        4946
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3767": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4831,
        4946
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3768": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3770": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4831,
        4946
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3772": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4831,
        4946
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3773": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4831,
        4946
      ],
      "op": "ADD",
      "path": "0"
    },
    "3774": {
      "op": "MSTORE"
    },
    "3775": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "3777": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3779": {
      "op": "DUP3"
    },
    "3780": {
      "op": "ADD"
    },
    "3781": {
      "op": "MSTORE"
    },
    "3782": {
      "op": "PUSH32",
      "value": "0x496E76616C69642063616E64696461746520746F20566F746521000000000000"
    },
    "3815": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3817": {
      "op": "DUP3"
    },
    "3818": {
      "op": "ADD"
    },
    "3819": {
      "op": "MSTORE"
    },
    "3820": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3822": {
      "op": "ADD"
    },
    "3823": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4831,
        4946
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B8"
    },
    "3826": {
      "op": "JUMP"
    },
    "3827": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        4831,
        4946
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3828": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5073,
        5096
      ],
      "op": "PUSH4",
      "path": "0",
      "statement": 38,
      "value": "0xFFFFFFFF"
    },
    "3833": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5073,
        5096
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3834": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5073,
        5096
      ],
      "op": "AND",
      "path": "0"
    },
    "3835": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5073,
        5096
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3837": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5073,
        5096
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3838": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5073,
        5096
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3839": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5073,
        5096
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3840": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5073,
        5083
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3842": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5073,
        5096
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3844": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5073,
        5096
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3845": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5073,
        5096
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3846": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5073,
        5096
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3847": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5073,
        5096
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3849": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5073,
        5096
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3850": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5073,
        5096
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3851": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5073,
        5096
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3852": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5073,
        5110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3854": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5073,
        5110
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3855": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5073,
        5110
      ],
      "op": "AND",
      "path": "0"
    },
    "3856": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5073,
        5110
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3857": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5073,
        5110
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3858": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5073,
        5110
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3859": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5073,
        5110
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3860": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5073,
        5110
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3861": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5073,
        5110
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3862": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5073,
        5110
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3863": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5073,
        5120
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3865": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5073,
        5120
      ],
      "op": "ADD",
      "path": "0"
    },
    "3866": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5073,
        5120
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3867": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5073,
        5142
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF25"
    },
    "3870": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5073,
        5142
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3871": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5135,
        5142
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3872": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5135,
        5142
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3873": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5073,
        5142
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x157B"
    },
    "3876": {
      "fn": "SimpleElection.voterVote",
      "jump": "i",
      "offset": [
        5073,
        5142
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3877": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5073,
        5142
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3878": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5011,
        5034
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "3883": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5011,
        5034
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3884": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5011,
        5034
      ],
      "op": "AND",
      "path": "0"
    },
    "3885": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5011,
        5034
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3887": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5011,
        5034
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3888": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5011,
        5034
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3889": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5011,
        5034
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3890": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5011,
        5021
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3892": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5011,
        5034
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3894": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5011,
        5034
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3895": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5011,
        5034
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3896": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5011,
        5034
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3897": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5011,
        5034
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3899": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5011,
        5034
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3900": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5011,
        5034
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3901": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5011,
        5034
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3902": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5011,
        5048
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3904": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5011,
        5048
      ],
      "op": "DUP9",
      "path": "0"
    },
    "3905": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5011,
        5048
      ],
      "op": "AND",
      "path": "0"
    },
    "3906": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5011,
        5048
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3907": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5011,
        5048
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3908": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5011,
        5048
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3909": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5011,
        5048
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3910": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5011,
        5048
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3911": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5011,
        5048
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3912": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5011,
        5048
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3913": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5011,
        5058
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3915": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5011,
        5058
      ],
      "op": "ADD",
      "path": "0"
    },
    "3916": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5011,
        5142
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "3917": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5011,
        5142
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3918": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5011,
        5142
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "3919": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5011,
        5142
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3920": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5254,
        5273
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 39
    },
    "3921": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5254,
        5273
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3922": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5254,
        5273
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3923": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5254,
        5260
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "3925": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5254,
        5273
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3926": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5254,
        5273
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3927": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5254,
        5273
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3928": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5254,
        5273
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3929": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5254,
        5273
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3934": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3936": {
      "op": "SHL"
    },
    "3937": {
      "op": "SUB"
    },
    "3938": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5254,
        5281
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3939": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5254,
        5281
      ],
      "op": "AND",
      "path": "0"
    },
    "3940": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5254,
        5281
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3941": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5254,
        5281
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3942": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5254,
        5281
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3943": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5254,
        5281
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3944": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5254,
        5281
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3945": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5254,
        5281
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3946": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5254,
        5288
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3947": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5254,
        5310
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF75"
    },
    "3950": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5254,
        5310
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3951": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5303,
        5310
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3952": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5303,
        5310
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3953": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5254,
        5310
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1593"
    },
    "3956": {
      "fn": "SimpleElection.voterVote",
      "jump": "i",
      "offset": [
        5254,
        5310
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3957": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5254,
        5310
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3958": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5205,
        5224
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "3963": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5205,
        5224
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3964": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5205,
        5224
      ],
      "op": "AND",
      "path": "0"
    },
    "3965": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5205,
        5224
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3967": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5205,
        5224
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3968": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5205,
        5224
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3969": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5205,
        5224
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3970": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5205,
        5211
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "3972": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5205,
        5224
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3974": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5205,
        5224
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3975": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5205,
        5224
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3976": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5205,
        5224
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3977": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5205,
        5224
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3979": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5205,
        5224
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3980": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5205,
        5224
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3981": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5205,
        5224
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3986": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3988": {
      "op": "SHL"
    },
    "3989": {
      "op": "SUB"
    },
    "3990": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5205,
        5232
      ],
      "op": "DUP9",
      "path": "0"
    },
    "3991": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5205,
        5232
      ],
      "op": "AND",
      "path": "0"
    },
    "3992": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5205,
        5232
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3993": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5205,
        5232
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3994": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5205,
        5232
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3995": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5205,
        5232
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3996": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5205,
        5232
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3997": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5205,
        5232
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3998": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5205,
        5232
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3999": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5205,
        5310
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4000": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5205,
        5310
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4001": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5205,
        5310
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4002": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5401,
        5511
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFDF"
    },
    "4005": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5401,
        5511
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4006": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5460,
        5479
      ],
      "op": "PUSH4",
      "path": "0",
      "statement": 40,
      "value": "0xFFFFFFFF"
    },
    "4011": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5460,
        5479
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4012": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5460,
        5479
      ],
      "op": "AND",
      "path": "0"
    },
    "4013": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5460,
        5479
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4015": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5460,
        5479
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4016": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5460,
        5479
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4017": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5460,
        5479
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4018": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5460,
        5466
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "4020": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5460,
        5479
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4022": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5460,
        5479
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4023": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5460,
        5479
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4024": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5460,
        5479
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4025": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5460,
        5479
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4027": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5460,
        5479
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4028": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5460,
        5479
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4029": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5460,
        5479
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4032": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4034": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4036": {
      "op": "SHL"
    },
    "4037": {
      "op": "SUB"
    },
    "4038": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5460,
        5487
      ],
      "op": "DUP8",
      "path": "0"
    },
    "4039": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5460,
        5487
      ],
      "op": "AND",
      "path": "0"
    },
    "4040": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5460,
        5487
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4041": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5460,
        5487
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4042": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5460,
        5487
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4043": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5460,
        5487
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4044": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5460,
        5487
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4045": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5460,
        5487
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4046": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5460,
        5487
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4047": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5496,
        5500
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4049": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5460,
        5493
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4050": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5460,
        5493
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4051": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5460,
        5493
      ],
      "op": "ADD",
      "path": "0"
    },
    "4052": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5460,
        5500
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4053": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5460,
        5500
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4054": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4056": {
      "op": "NOT"
    },
    "4057": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5460,
        5500
      ],
      "op": "AND",
      "path": "0"
    },
    "4058": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5460,
        5500
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4059": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5460,
        5500
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4060": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5460,
        5500
      ],
      "op": "OR",
      "path": "0"
    },
    "4061": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5460,
        5500
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4062": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5460,
        5500
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4063": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5401,
        5511
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4064": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5526,
        5575
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 41,
      "value": "0x40"
    },
    "4066": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5526,
        5575
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4067": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5526,
        5575
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4068": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "4073": {
      "op": "DUP7"
    },
    "4074": {
      "op": "AND"
    },
    "4075": {
      "op": "DUP2"
    },
    "4076": {
      "op": "MSTORE"
    },
    "4077": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4079": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4081": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4083": {
      "op": "SHL"
    },
    "4084": {
      "op": "SUB"
    },
    "4085": {
      "op": "DUP6"
    },
    "4086": {
      "op": "AND"
    },
    "4087": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4089": {
      "op": "DUP3"
    },
    "4090": {
      "op": "ADD"
    },
    "4091": {
      "op": "MSTORE"
    },
    "4092": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4094": {
      "op": "DUP5"
    },
    "4095": {
      "op": "AND"
    },
    "4096": {
      "op": "DUP2"
    },
    "4097": {
      "op": "DUP4"
    },
    "4098": {
      "op": "ADD"
    },
    "4099": {
      "op": "MSTORE"
    },
    "4100": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4102": {
      "op": "DUP2"
    },
    "4103": {
      "op": "ADD"
    },
    "4104": {
      "op": "DUP4"
    },
    "4105": {
      "op": "SWAP1"
    },
    "4106": {
      "op": "MSTORE"
    },
    "4107": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5526,
        5575
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4108": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5526,
        5575
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4109": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5526,
        5575
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x66EB9354084DA3C9417BFAEB0F63DE26C8976282F67E1687AF5B90E8D3FBD387"
    },
    "4142": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5526,
        5575
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4143": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5526,
        5575
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4144": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5526,
        5575
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4145": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5526,
        5575
      ],
      "op": "SUB",
      "path": "0"
    },
    "4146": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4148": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5526,
        5575
      ],
      "op": "ADD",
      "path": "0"
    },
    "4149": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5526,
        5575
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4150": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        5526,
        5575
      ],
      "op": "LOG1",
      "path": "0"
    },
    "4151": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        3929,
        5582
      ],
      "op": "POP",
      "path": "0"
    },
    "4152": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        3929,
        5582
      ],
      "op": "POP",
      "path": "0"
    },
    "4153": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        3929,
        5582
      ],
      "op": "POP",
      "path": "0"
    },
    "4154": {
      "fn": "SimpleElection.voterVote",
      "offset": [
        3929,
        5582
      ],
      "op": "POP",
      "path": "0"
    },
    "4155": {
      "fn": "SimpleElection.voterVote",
      "jump": "o",
      "offset": [
        3929,
        5582
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4156": {
      "op": "JUMPDEST"
    },
    "4157": {
      "op": "DUP3"
    },
    "4158": {
      "op": "DUP1"
    },
    "4159": {
      "op": "SLOAD"
    },
    "4160": {
      "op": "PUSH2",
      "value": "0x1048"
    },
    "4163": {
      "op": "SWAP1"
    },
    "4164": {
      "op": "PUSH2",
      "value": "0x15AA"
    },
    "4167": {
      "jump": "i",
      "op": "JUMP"
    },
    "4168": {
      "op": "JUMPDEST"
    },
    "4169": {
      "op": "SWAP1"
    },
    "4170": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4172": {
      "op": "MSTORE"
    },
    "4173": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4175": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4177": {
      "op": "KECCAK256"
    },
    "4178": {
      "op": "SWAP1"
    },
    "4179": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4181": {
      "op": "ADD"
    },
    "4182": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4184": {
      "op": "SWAP1"
    },
    "4185": {
      "op": "DIV"
    },
    "4186": {
      "op": "DUP2"
    },
    "4187": {
      "op": "ADD"
    },
    "4188": {
      "op": "SWAP3"
    },
    "4189": {
      "op": "DUP3"
    },
    "4190": {
      "op": "PUSH2",
      "value": "0x106A"
    },
    "4193": {
      "op": "JUMPI"
    },
    "4194": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4196": {
      "op": "DUP6"
    },
    "4197": {
      "op": "SSTORE"
    },
    "4198": {
      "op": "PUSH2",
      "value": "0x10B0"
    },
    "4201": {
      "op": "JUMP"
    },
    "4202": {
      "op": "JUMPDEST"
    },
    "4203": {
      "op": "DUP3"
    },
    "4204": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4206": {
      "op": "LT"
    },
    "4207": {
      "op": "PUSH2",
      "value": "0x1083"
    },
    "4210": {
      "op": "JUMPI"
    },
    "4211": {
      "op": "DUP1"
    },
    "4212": {
      "op": "MLOAD"
    },
    "4213": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4215": {
      "op": "NOT"
    },
    "4216": {
      "op": "AND"
    },
    "4217": {
      "op": "DUP4"
    },
    "4218": {
      "op": "DUP1"
    },
    "4219": {
      "op": "ADD"
    },
    "4220": {
      "op": "OR"
    },
    "4221": {
      "op": "DUP6"
    },
    "4222": {
      "op": "SSTORE"
    },
    "4223": {
      "op": "PUSH2",
      "value": "0x10B0"
    },
    "4226": {
      "op": "JUMP"
    },
    "4227": {
      "op": "JUMPDEST"
    },
    "4228": {
      "op": "DUP3"
    },
    "4229": {
      "op": "DUP1"
    },
    "4230": {
      "op": "ADD"
    },
    "4231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4233": {
      "op": "ADD"
    },
    "4234": {
      "op": "DUP6"
    },
    "4235": {
      "op": "SSTORE"
    },
    "4236": {
      "op": "DUP3"
    },
    "4237": {
      "op": "ISZERO"
    },
    "4238": {
      "op": "PUSH2",
      "value": "0x10B0"
    },
    "4241": {
      "op": "JUMPI"
    },
    "4242": {
      "op": "SWAP2"
    },
    "4243": {
      "op": "DUP3"
    },
    "4244": {
      "op": "ADD"
    },
    "4245": {
      "op": "JUMPDEST"
    },
    "4246": {
      "op": "DUP3"
    },
    "4247": {
      "op": "DUP2"
    },
    "4248": {
      "op": "GT"
    },
    "4249": {
      "op": "ISZERO"
    },
    "4250": {
      "op": "PUSH2",
      "value": "0x10B0"
    },
    "4253": {
      "op": "JUMPI"
    },
    "4254": {
      "op": "DUP3"
    },
    "4255": {
      "op": "MLOAD"
    },
    "4256": {
      "op": "DUP3"
    },
    "4257": {
      "op": "SSTORE"
    },
    "4258": {
      "op": "SWAP2"
    },
    "4259": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4261": {
      "op": "ADD"
    },
    "4262": {
      "op": "SWAP2"
    },
    "4263": {
      "op": "SWAP1"
    },
    "4264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4266": {
      "op": "ADD"
    },
    "4267": {
      "op": "SWAP1"
    },
    "4268": {
      "op": "PUSH2",
      "value": "0x1095"
    },
    "4271": {
      "op": "JUMP"
    },
    "4272": {
      "op": "JUMPDEST"
    },
    "4273": {
      "op": "POP"
    },
    "4274": {
      "op": "PUSH2",
      "value": "0x10BC"
    },
    "4277": {
      "op": "SWAP3"
    },
    "4278": {
      "op": "SWAP2"
    },
    "4279": {
      "op": "POP"
    },
    "4280": {
      "op": "PUSH2",
      "value": "0x10C0"
    },
    "4283": {
      "jump": "i",
      "op": "JUMP"
    },
    "4284": {
      "op": "JUMPDEST"
    },
    "4285": {
      "op": "POP"
    },
    "4286": {
      "op": "SWAP1"
    },
    "4287": {
      "jump": "o",
      "op": "JUMP"
    },
    "4288": {
      "op": "JUMPDEST"
    },
    "4289": {
      "op": "JUMPDEST"
    },
    "4290": {
      "op": "DUP1"
    },
    "4291": {
      "op": "DUP3"
    },
    "4292": {
      "op": "GT"
    },
    "4293": {
      "op": "ISZERO"
    },
    "4294": {
      "op": "PUSH2",
      "value": "0x10BC"
    },
    "4297": {
      "op": "JUMPI"
    },
    "4298": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4300": {
      "op": "DUP2"
    },
    "4301": {
      "op": "SSTORE"
    },
    "4302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4304": {
      "op": "ADD"
    },
    "4305": {
      "op": "PUSH2",
      "value": "0x10C1"
    },
    "4308": {
      "op": "JUMP"
    },
    "4309": {
      "op": "JUMPDEST"
    },
    "4310": {
      "op": "DUP1"
    },
    "4311": {
      "op": "CALLDATALOAD"
    },
    "4312": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "4317": {
      "op": "DUP2"
    },
    "4318": {
      "op": "AND"
    },
    "4319": {
      "op": "DUP2"
    },
    "4320": {
      "op": "EQ"
    },
    "4321": {
      "op": "PUSH2",
      "value": "0x10E9"
    },
    "4324": {
      "op": "JUMPI"
    },
    "4325": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4327": {
      "op": "DUP1"
    },
    "4328": {
      "op": "REVERT"
    },
    "4329": {
      "op": "JUMPDEST"
    },
    "4330": {
      "op": "SWAP2"
    },
    "4331": {
      "op": "SWAP1"
    },
    "4332": {
      "op": "POP"
    },
    "4333": {
      "jump": "o",
      "op": "JUMP"
    },
    "4334": {
      "op": "JUMPDEST"
    },
    "4335": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4337": {
      "op": "DUP1"
    },
    "4338": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4340": {
      "op": "DUP4"
    },
    "4341": {
      "op": "DUP6"
    },
    "4342": {
      "op": "SUB"
    },
    "4343": {
      "op": "SLT"
    },
    "4344": {
      "op": "ISZERO"
    },
    "4345": {
      "op": "PUSH2",
      "value": "0x1101"
    },
    "4348": {
      "op": "JUMPI"
    },
    "4349": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4351": {
      "op": "DUP1"
    },
    "4352": {
      "op": "REVERT"
    },
    "4353": {
      "op": "JUMPDEST"
    },
    "4354": {
      "op": "PUSH2",
      "value": "0x110A"
    },
    "4357": {
      "op": "DUP4"
    },
    "4358": {
      "op": "PUSH2",
      "value": "0x10D5"
    },
    "4361": {
      "jump": "i",
      "op": "JUMP"
    },
    "4362": {
      "op": "JUMPDEST"
    },
    "4363": {
      "op": "SWAP5"
    },
    "4364": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4366": {
      "op": "SWAP4"
    },
    "4367": {
      "op": "SWAP1"
    },
    "4368": {
      "op": "SWAP4"
    },
    "4369": {
      "op": "ADD"
    },
    "4370": {
      "op": "CALLDATALOAD"
    },
    "4371": {
      "op": "SWAP4"
    },
    "4372": {
      "op": "POP"
    },
    "4373": {
      "op": "POP"
    },
    "4374": {
      "op": "POP"
    },
    "4375": {
      "jump": "o",
      "op": "JUMP"
    },
    "4376": {
      "op": "JUMPDEST"
    },
    "4377": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4379": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4381": {
      "op": "DUP3"
    },
    "4382": {
      "op": "DUP5"
    },
    "4383": {
      "op": "SUB"
    },
    "4384": {
      "op": "SLT"
    },
    "4385": {
      "op": "ISZERO"
    },
    "4386": {
      "op": "PUSH2",
      "value": "0x112A"
    },
    "4389": {
      "op": "JUMPI"
    },
    "4390": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4392": {
      "op": "DUP1"
    },
    "4393": {
      "op": "REVERT"
    },
    "4394": {
      "op": "JUMPDEST"
    },
    "4395": {
      "op": "PUSH2",
      "value": "0x74C"
    },
    "4398": {
      "op": "DUP3"
    },
    "4399": {
      "op": "PUSH2",
      "value": "0x10D5"
    },
    "4402": {
      "jump": "i",
      "op": "JUMP"
    },
    "4403": {
      "op": "JUMPDEST"
    },
    "4404": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4406": {
      "op": "DUP1"
    },
    "4407": {
      "op": "DUP3"
    },
    "4408": {
      "op": "MSTORE"
    },
    "4409": {
      "op": "DUP3"
    },
    "4410": {
      "op": "MLOAD"
    },
    "4411": {
      "op": "DUP3"
    },
    "4412": {
      "op": "DUP3"
    },
    "4413": {
      "op": "ADD"
    },
    "4414": {
      "op": "DUP2"
    },
    "4415": {
      "op": "SWAP1"
    },
    "4416": {
      "op": "MSTORE"
    },
    "4417": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4419": {
      "op": "SWAP2"
    },
    "4420": {
      "op": "SWAP1"
    },
    "4421": {
      "op": "DUP5"
    },
    "4422": {
      "op": "DUP3"
    },
    "4423": {
      "op": "ADD"
    },
    "4424": {
      "op": "SWAP1"
    },
    "4425": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4427": {
      "op": "DUP6"
    },
    "4428": {
      "op": "ADD"
    },
    "4429": {
      "op": "SWAP1"
    },
    "4430": {
      "op": "DUP5"
    },
    "4431": {
      "op": "JUMPDEST"
    },
    "4432": {
      "op": "DUP2"
    },
    "4433": {
      "op": "DUP2"
    },
    "4434": {
      "op": "LT"
    },
    "4435": {
      "op": "ISZERO"
    },
    "4436": {
      "op": "PUSH2",
      "value": "0x116B"
    },
    "4439": {
      "op": "JUMPI"
    },
    "4440": {
      "op": "DUP4"
    },
    "4441": {
      "op": "MLOAD"
    },
    "4442": {
      "op": "DUP4"
    },
    "4443": {
      "op": "MSTORE"
    },
    "4444": {
      "op": "SWAP3"
    },
    "4445": {
      "op": "DUP5"
    },
    "4446": {
      "op": "ADD"
    },
    "4447": {
      "op": "SWAP3"
    },
    "4448": {
      "op": "SWAP2"
    },
    "4449": {
      "op": "DUP5"
    },
    "4450": {
      "op": "ADD"
    },
    "4451": {
      "op": "SWAP2"
    },
    "4452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4454": {
      "op": "ADD"
    },
    "4455": {
      "op": "PUSH2",
      "value": "0x114F"
    },
    "4458": {
      "op": "JUMP"
    },
    "4459": {
      "op": "JUMPDEST"
    },
    "4460": {
      "op": "POP"
    },
    "4461": {
      "op": "SWAP1"
    },
    "4462": {
      "op": "SWAP7"
    },
    "4463": {
      "op": "SWAP6"
    },
    "4464": {
      "op": "POP"
    },
    "4465": {
      "op": "POP"
    },
    "4466": {
      "op": "POP"
    },
    "4467": {
      "op": "POP"
    },
    "4468": {
      "op": "POP"
    },
    "4469": {
      "op": "POP"
    },
    "4470": {
      "jump": "o",
      "op": "JUMP"
    },
    "4471": {
      "op": "JUMPDEST"
    },
    "4472": {
      "op": "DUP1"
    },
    "4473": {
      "op": "CALLDATALOAD"
    },
    "4474": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4476": {
      "op": "DUP2"
    },
    "4477": {
      "op": "AND"
    },
    "4478": {
      "op": "DUP2"
    },
    "4479": {
      "op": "EQ"
    },
    "4480": {
      "op": "PUSH2",
      "value": "0x10E9"
    },
    "4483": {
      "op": "JUMPI"
    },
    "4484": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4486": {
      "op": "DUP1"
    },
    "4487": {
      "op": "REVERT"
    },
    "4488": {
      "op": "JUMPDEST"
    },
    "4489": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4491": {
      "op": "DUP1"
    },
    "4492": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4494": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4496": {
      "op": "DUP5"
    },
    "4497": {
      "op": "DUP7"
    },
    "4498": {
      "op": "SUB"
    },
    "4499": {
      "op": "SLT"
    },
    "4500": {
      "op": "ISZERO"
    },
    "4501": {
      "op": "PUSH2",
      "value": "0x119D"
    },
    "4504": {
      "op": "JUMPI"
    },
    "4505": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4507": {
      "op": "DUP1"
    },
    "4508": {
      "op": "REVERT"
    },
    "4509": {
      "op": "JUMPDEST"
    },
    "4510": {
      "op": "PUSH2",
      "value": "0x11A6"
    },
    "4513": {
      "op": "DUP5"
    },
    "4514": {
      "op": "PUSH2",
      "value": "0x10D5"
    },
    "4517": {
      "jump": "i",
      "op": "JUMP"
    },
    "4518": {
      "op": "JUMPDEST"
    },
    "4519": {
      "op": "SWAP3"
    },
    "4520": {
      "op": "POP"
    },
    "4521": {
      "op": "PUSH2",
      "value": "0x11B4"
    },
    "4524": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4526": {
      "op": "DUP6"
    },
    "4527": {
      "op": "ADD"
    },
    "4528": {
      "op": "PUSH2",
      "value": "0x1177"
    },
    "4531": {
      "jump": "i",
      "op": "JUMP"
    },
    "4532": {
      "op": "JUMPDEST"
    },
    "4533": {
      "op": "SWAP2"
    },
    "4534": {
      "op": "POP"
    },
    "4535": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4537": {
      "op": "DUP5"
    },
    "4538": {
      "op": "ADD"
    },
    "4539": {
      "op": "CALLDATALOAD"
    },
    "4540": {
      "op": "SWAP1"
    },
    "4541": {
      "op": "POP"
    },
    "4542": {
      "op": "SWAP3"
    },
    "4543": {
      "op": "POP"
    },
    "4544": {
      "op": "SWAP3"
    },
    "4545": {
      "op": "POP"
    },
    "4546": {
      "op": "SWAP3"
    },
    "4547": {
      "jump": "o",
      "op": "JUMP"
    },
    "4548": {
      "op": "JUMPDEST"
    },
    "4549": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4551": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4553": {
      "op": "DUP3"
    },
    "4554": {
      "op": "DUP5"
    },
    "4555": {
      "op": "SUB"
    },
    "4556": {
      "op": "SLT"
    },
    "4557": {
      "op": "ISZERO"
    },
    "4558": {
      "op": "PUSH2",
      "value": "0x11D6"
    },
    "4561": {
      "op": "JUMPI"
    },
    "4562": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4564": {
      "op": "DUP1"
    },
    "4565": {
      "op": "REVERT"
    },
    "4566": {
      "op": "JUMPDEST"
    },
    "4567": {
      "op": "POP"
    },
    "4568": {
      "op": "CALLDATALOAD"
    },
    "4569": {
      "op": "SWAP2"
    },
    "4570": {
      "op": "SWAP1"
    },
    "4571": {
      "op": "POP"
    },
    "4572": {
      "jump": "o",
      "op": "JUMP"
    },
    "4573": {
      "op": "JUMPDEST"
    },
    "4574": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4576": {
      "op": "DUP1"
    },
    "4577": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4579": {
      "op": "DUP4"
    },
    "4580": {
      "op": "DUP6"
    },
    "4581": {
      "op": "SUB"
    },
    "4582": {
      "op": "SLT"
    },
    "4583": {
      "op": "ISZERO"
    },
    "4584": {
      "op": "PUSH2",
      "value": "0x11F0"
    },
    "4587": {
      "op": "JUMPI"
    },
    "4588": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4590": {
      "op": "DUP1"
    },
    "4591": {
      "op": "REVERT"
    },
    "4592": {
      "op": "JUMPDEST"
    },
    "4593": {
      "op": "PUSH2",
      "value": "0x11F9"
    },
    "4596": {
      "op": "DUP4"
    },
    "4597": {
      "op": "PUSH2",
      "value": "0x10D5"
    },
    "4600": {
      "jump": "i",
      "op": "JUMP"
    },
    "4601": {
      "op": "JUMPDEST"
    },
    "4602": {
      "op": "SWAP2"
    },
    "4603": {
      "op": "POP"
    },
    "4604": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4606": {
      "op": "DUP4"
    },
    "4607": {
      "op": "ADD"
    },
    "4608": {
      "op": "CALLDATALOAD"
    },
    "4609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4613": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4615": {
      "op": "SHL"
    },
    "4616": {
      "op": "SUB"
    },
    "4617": {
      "op": "DUP2"
    },
    "4618": {
      "op": "AND"
    },
    "4619": {
      "op": "DUP2"
    },
    "4620": {
      "op": "EQ"
    },
    "4621": {
      "op": "PUSH2",
      "value": "0x1215"
    },
    "4624": {
      "op": "JUMPI"
    },
    "4625": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4627": {
      "op": "DUP1"
    },
    "4628": {
      "op": "REVERT"
    },
    "4629": {
      "op": "JUMPDEST"
    },
    "4630": {
      "op": "DUP1"
    },
    "4631": {
      "op": "SWAP2"
    },
    "4632": {
      "op": "POP"
    },
    "4633": {
      "op": "POP"
    },
    "4634": {
      "op": "SWAP3"
    },
    "4635": {
      "op": "POP"
    },
    "4636": {
      "op": "SWAP3"
    },
    "4637": {
      "op": "SWAP1"
    },
    "4638": {
      "op": "POP"
    },
    "4639": {
      "jump": "o",
      "op": "JUMP"
    },
    "4640": {
      "op": "JUMPDEST"
    },
    "4641": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4646": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4648": {
      "op": "SHL"
    },
    "4649": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4651": {
      "op": "MSTORE"
    },
    "4652": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "4654": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4656": {
      "op": "MSTORE"
    },
    "4657": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4659": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4661": {
      "op": "REVERT"
    },
    "4662": {
      "op": "JUMPDEST"
    },
    "4663": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4665": {
      "op": "MLOAD"
    },
    "4666": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4668": {
      "op": "DUP3"
    },
    "4669": {
      "op": "ADD"
    },
    "4670": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4672": {
      "op": "NOT"
    },
    "4673": {
      "op": "AND"
    },
    "4674": {
      "op": "DUP2"
    },
    "4675": {
      "op": "ADD"
    },
    "4676": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4685": {
      "op": "DUP2"
    },
    "4686": {
      "op": "GT"
    },
    "4687": {
      "op": "DUP3"
    },
    "4688": {
      "op": "DUP3"
    },
    "4689": {
      "op": "LT"
    },
    "4690": {
      "op": "OR"
    },
    "4691": {
      "op": "ISZERO"
    },
    "4692": {
      "op": "PUSH2",
      "value": "0x125F"
    },
    "4695": {
      "op": "JUMPI"
    },
    "4696": {
      "op": "PUSH2",
      "value": "0x125F"
    },
    "4699": {
      "op": "PUSH2",
      "value": "0x1220"
    },
    "4702": {
      "jump": "i",
      "op": "JUMP"
    },
    "4703": {
      "op": "JUMPDEST"
    },
    "4704": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4706": {
      "op": "MSTORE"
    },
    "4707": {
      "op": "SWAP2"
    },
    "4708": {
      "op": "SWAP1"
    },
    "4709": {
      "op": "POP"
    },
    "4710": {
      "jump": "o",
      "op": "JUMP"
    },
    "4711": {
      "op": "JUMPDEST"
    },
    "4712": {
      "op": "DUP1"
    },
    "4713": {
      "op": "CALLDATALOAD"
    },
    "4714": {
      "op": "DUP1"
    },
    "4715": {
      "op": "ISZERO"
    },
    "4716": {
      "op": "ISZERO"
    },
    "4717": {
      "op": "DUP2"
    },
    "4718": {
      "op": "EQ"
    },
    "4719": {
      "op": "PUSH2",
      "value": "0x10E9"
    },
    "4722": {
      "op": "JUMPI"
    },
    "4723": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4725": {
      "op": "DUP1"
    },
    "4726": {
      "op": "REVERT"
    },
    "4727": {
      "op": "JUMPDEST"
    },
    "4728": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4730": {
      "op": "DUP3"
    },
    "4731": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4733": {
      "op": "DUP4"
    },
    "4734": {
      "op": "ADD"
    },
    "4735": {
      "op": "SLT"
    },
    "4736": {
      "op": "PUSH2",
      "value": "0x1288"
    },
    "4739": {
      "op": "JUMPI"
    },
    "4740": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4742": {
      "op": "DUP1"
    },
    "4743": {
      "op": "REVERT"
    },
    "4744": {
      "op": "JUMPDEST"
    },
    "4745": {
      "op": "DUP2"
    },
    "4746": {
      "op": "CALLDATALOAD"
    },
    "4747": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4749": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4758": {
      "op": "DUP3"
    },
    "4759": {
      "op": "GT"
    },
    "4760": {
      "op": "ISZERO"
    },
    "4761": {
      "op": "PUSH2",
      "value": "0x12A4"
    },
    "4764": {
      "op": "JUMPI"
    },
    "4765": {
      "op": "PUSH2",
      "value": "0x12A4"
    },
    "4768": {
      "op": "PUSH2",
      "value": "0x1220"
    },
    "4771": {
      "jump": "i",
      "op": "JUMP"
    },
    "4772": {
      "op": "JUMPDEST"
    },
    "4773": {
      "op": "DUP2"
    },
    "4774": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "4776": {
      "op": "SHL"
    },
    "4777": {
      "op": "PUSH2",
      "value": "0x12B3"
    },
    "4780": {
      "op": "DUP3"
    },
    "4781": {
      "op": "DUP3"
    },
    "4782": {
      "op": "ADD"
    },
    "4783": {
      "op": "PUSH2",
      "value": "0x1236"
    },
    "4786": {
      "jump": "i",
      "op": "JUMP"
    },
    "4787": {
      "op": "JUMPDEST"
    },
    "4788": {
      "op": "SWAP3"
    },
    "4789": {
      "op": "DUP4"
    },
    "4790": {
      "op": "MSTORE"
    },
    "4791": {
      "op": "DUP5"
    },
    "4792": {
      "op": "DUP2"
    },
    "4793": {
      "op": "ADD"
    },
    "4794": {
      "op": "DUP3"
    },
    "4795": {
      "op": "ADD"
    },
    "4796": {
      "op": "SWAP3"
    },
    "4797": {
      "op": "DUP3"
    },
    "4798": {
      "op": "DUP2"
    },
    "4799": {
      "op": "ADD"
    },
    "4800": {
      "op": "SWAP1"
    },
    "4801": {
      "op": "DUP8"
    },
    "4802": {
      "op": "DUP6"
    },
    "4803": {
      "op": "GT"
    },
    "4804": {
      "op": "ISZERO"
    },
    "4805": {
      "op": "PUSH2",
      "value": "0x12CD"
    },
    "4808": {
      "op": "JUMPI"
    },
    "4809": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4811": {
      "op": "DUP1"
    },
    "4812": {
      "op": "REVERT"
    },
    "4813": {
      "op": "JUMPDEST"
    },
    "4814": {
      "op": "DUP4"
    },
    "4815": {
      "op": "DUP8"
    },
    "4816": {
      "op": "ADD"
    },
    "4817": {
      "op": "SWAP3"
    },
    "4818": {
      "op": "POP"
    },
    "4819": {
      "op": "JUMPDEST"
    },
    "4820": {
      "op": "DUP5"
    },
    "4821": {
      "op": "DUP4"
    },
    "4822": {
      "op": "LT"
    },
    "4823": {
      "op": "ISZERO"
    },
    "4824": {
      "op": "PUSH2",
      "value": "0x12EC"
    },
    "4827": {
      "op": "JUMPI"
    },
    "4828": {
      "op": "DUP3"
    },
    "4829": {
      "op": "CALLDATALOAD"
    },
    "4830": {
      "op": "DUP3"
    },
    "4831": {
      "op": "MSTORE"
    },
    "4832": {
      "op": "SWAP2"
    },
    "4833": {
      "op": "DUP4"
    },
    "4834": {
      "op": "ADD"
    },
    "4835": {
      "op": "SWAP2"
    },
    "4836": {
      "op": "SWAP1"
    },
    "4837": {
      "op": "DUP4"
    },
    "4838": {
      "op": "ADD"
    },
    "4839": {
      "op": "SWAP1"
    },
    "4840": {
      "op": "PUSH2",
      "value": "0x12D3"
    },
    "4843": {
      "op": "JUMP"
    },
    "4844": {
      "op": "JUMPDEST"
    },
    "4845": {
      "op": "SWAP8"
    },
    "4846": {
      "op": "SWAP7"
    },
    "4847": {
      "op": "POP"
    },
    "4848": {
      "op": "POP"
    },
    "4849": {
      "op": "POP"
    },
    "4850": {
      "op": "POP"
    },
    "4851": {
      "op": "POP"
    },
    "4852": {
      "op": "POP"
    },
    "4853": {
      "op": "POP"
    },
    "4854": {
      "jump": "o",
      "op": "JUMP"
    },
    "4855": {
      "op": "JUMPDEST"
    },
    "4856": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4858": {
      "op": "DUP1"
    },
    "4859": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4861": {
      "op": "DUP1"
    },
    "4862": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4864": {
      "op": "DUP1"
    },
    "4865": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4867": {
      "op": "DUP1"
    },
    "4868": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "4871": {
      "op": "DUP10"
    },
    "4872": {
      "op": "DUP12"
    },
    "4873": {
      "op": "SUB"
    },
    "4874": {
      "op": "SLT"
    },
    "4875": {
      "op": "ISZERO"
    },
    "4876": {
      "op": "PUSH2",
      "value": "0x1314"
    },
    "4879": {
      "op": "JUMPI"
    },
    "4880": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4882": {
      "op": "DUP1"
    },
    "4883": {
      "op": "REVERT"
    },
    "4884": {
      "op": "JUMPDEST"
    },
    "4885": {
      "op": "DUP9"
    },
    "4886": {
      "op": "CALLDATALOAD"
    },
    "4887": {
      "op": "SWAP8"
    },
    "4888": {
      "op": "POP"
    },
    "4889": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4891": {
      "op": "DUP1"
    },
    "4892": {
      "op": "DUP11"
    },
    "4893": {
      "op": "ADD"
    },
    "4894": {
      "op": "CALLDATALOAD"
    },
    "4895": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4904": {
      "op": "DUP1"
    },
    "4905": {
      "op": "DUP3"
    },
    "4906": {
      "op": "GT"
    },
    "4907": {
      "op": "ISZERO"
    },
    "4908": {
      "op": "PUSH2",
      "value": "0x1334"
    },
    "4911": {
      "op": "JUMPI"
    },
    "4912": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4914": {
      "op": "DUP1"
    },
    "4915": {
      "op": "REVERT"
    },
    "4916": {
      "op": "JUMPDEST"
    },
    "4917": {
      "op": "DUP2"
    },
    "4918": {
      "op": "DUP13"
    },
    "4919": {
      "op": "ADD"
    },
    "4920": {
      "op": "SWAP2"
    },
    "4921": {
      "op": "POP"
    },
    "4922": {
      "op": "DUP13"
    },
    "4923": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4925": {
      "op": "DUP4"
    },
    "4926": {
      "op": "ADD"
    },
    "4927": {
      "op": "SLT"
    },
    "4928": {
      "op": "PUSH2",
      "value": "0x1348"
    },
    "4931": {
      "op": "JUMPI"
    },
    "4932": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4934": {
      "op": "DUP1"
    },
    "4935": {
      "op": "REVERT"
    },
    "4936": {
      "op": "JUMPDEST"
    },
    "4937": {
      "op": "DUP2"
    },
    "4938": {
      "op": "CALLDATALOAD"
    },
    "4939": {
      "op": "DUP2"
    },
    "4940": {
      "op": "DUP2"
    },
    "4941": {
      "op": "GT"
    },
    "4942": {
      "op": "ISZERO"
    },
    "4943": {
      "op": "PUSH2",
      "value": "0x135A"
    },
    "4946": {
      "op": "JUMPI"
    },
    "4947": {
      "op": "PUSH2",
      "value": "0x135A"
    },
    "4950": {
      "op": "PUSH2",
      "value": "0x1220"
    },
    "4953": {
      "jump": "i",
      "op": "JUMP"
    },
    "4954": {
      "op": "JUMPDEST"
    },
    "4955": {
      "op": "PUSH2",
      "value": "0x136C"
    },
    "4958": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4960": {
      "op": "DUP3"
    },
    "4961": {
      "op": "ADD"
    },
    "4962": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4964": {
      "op": "NOT"
    },
    "4965": {
      "op": "AND"
    },
    "4966": {
      "op": "DUP6"
    },
    "4967": {
      "op": "ADD"
    },
    "4968": {
      "op": "PUSH2",
      "value": "0x1236"
    },
    "4971": {
      "jump": "i",
      "op": "JUMP"
    },
    "4972": {
      "op": "JUMPDEST"
    },
    "4973": {
      "op": "DUP2"
    },
    "4974": {
      "op": "DUP2"
    },
    "4975": {
      "op": "MSTORE"
    },
    "4976": {
      "op": "DUP15"
    },
    "4977": {
      "op": "DUP6"
    },
    "4978": {
      "op": "DUP4"
    },
    "4979": {
      "op": "DUP7"
    },
    "4980": {
      "op": "ADD"
    },
    "4981": {
      "op": "ADD"
    },
    "4982": {
      "op": "GT"
    },
    "4983": {
      "op": "ISZERO"
    },
    "4984": {
      "op": "PUSH2",
      "value": "0x1380"
    },
    "4987": {
      "op": "JUMPI"
    },
    "4988": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4990": {
      "op": "DUP1"
    },
    "4991": {
      "op": "REVERT"
    },
    "4992": {
      "op": "JUMPDEST"
    },
    "4993": {
      "op": "DUP2"
    },
    "4994": {
      "op": "DUP6"
    },
    "4995": {
      "op": "DUP6"
    },
    "4996": {
      "op": "ADD"
    },
    "4997": {
      "op": "DUP7"
    },
    "4998": {
      "op": "DUP4"
    },
    "4999": {
      "op": "ADD"
    },
    "5000": {
      "op": "CALLDATACOPY"
    },
    "5001": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5003": {
      "op": "DUP6"
    },
    "5004": {
      "op": "DUP4"
    },
    "5005": {
      "op": "DUP4"
    },
    "5006": {
      "op": "ADD"
    },
    "5007": {
      "op": "ADD"
    },
    "5008": {
      "op": "MSTORE"
    },
    "5009": {
      "op": "DUP1"
    },
    "5010": {
      "op": "SWAP12"
    },
    "5011": {
      "op": "POP"
    },
    "5012": {
      "op": "POP"
    },
    "5013": {
      "op": "POP"
    },
    "5014": {
      "op": "PUSH2",
      "value": "0x13A1"
    },
    "5017": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5019": {
      "op": "DUP14"
    },
    "5020": {
      "op": "ADD"
    },
    "5021": {
      "op": "PUSH2",
      "value": "0x1267"
    },
    "5024": {
      "jump": "i",
      "op": "JUMP"
    },
    "5025": {
      "op": "JUMPDEST"
    },
    "5026": {
      "op": "SWAP9"
    },
    "5027": {
      "op": "POP"
    },
    "5028": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5030": {
      "op": "DUP13"
    },
    "5031": {
      "op": "ADD"
    },
    "5032": {
      "op": "CALLDATALOAD"
    },
    "5033": {
      "op": "SWAP3"
    },
    "5034": {
      "op": "POP"
    },
    "5035": {
      "op": "DUP1"
    },
    "5036": {
      "op": "DUP4"
    },
    "5037": {
      "op": "GT"
    },
    "5038": {
      "op": "ISZERO"
    },
    "5039": {
      "op": "PUSH2",
      "value": "0x13B7"
    },
    "5042": {
      "op": "JUMPI"
    },
    "5043": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5045": {
      "op": "DUP1"
    },
    "5046": {
      "op": "REVERT"
    },
    "5047": {
      "op": "JUMPDEST"
    },
    "5048": {
      "op": "POP"
    },
    "5049": {
      "op": "POP"
    },
    "5050": {
      "op": "PUSH2",
      "value": "0x13C5"
    },
    "5053": {
      "op": "DUP12"
    },
    "5054": {
      "op": "DUP3"
    },
    "5055": {
      "op": "DUP13"
    },
    "5056": {
      "op": "ADD"
    },
    "5057": {
      "op": "PUSH2",
      "value": "0x1277"
    },
    "5060": {
      "jump": "i",
      "op": "JUMP"
    },
    "5061": {
      "op": "JUMPDEST"
    },
    "5062": {
      "op": "SWAP6"
    },
    "5063": {
      "op": "POP"
    },
    "5064": {
      "op": "POP"
    },
    "5065": {
      "op": "PUSH2",
      "value": "0x13D4"
    },
    "5068": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5070": {
      "op": "DUP11"
    },
    "5071": {
      "op": "ADD"
    },
    "5072": {
      "op": "PUSH2",
      "value": "0x10D5"
    },
    "5075": {
      "jump": "i",
      "op": "JUMP"
    },
    "5076": {
      "op": "JUMPDEST"
    },
    "5077": {
      "op": "SWAP4"
    },
    "5078": {
      "op": "POP"
    },
    "5079": {
      "op": "PUSH2",
      "value": "0x13E2"
    },
    "5082": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5084": {
      "op": "DUP11"
    },
    "5085": {
      "op": "ADD"
    },
    "5086": {
      "op": "PUSH2",
      "value": "0x10D5"
    },
    "5089": {
      "jump": "i",
      "op": "JUMP"
    },
    "5090": {
      "op": "JUMPDEST"
    },
    "5091": {
      "op": "SWAP3"
    },
    "5092": {
      "op": "POP"
    },
    "5093": {
      "op": "PUSH2",
      "value": "0x13F0"
    },
    "5096": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5098": {
      "op": "DUP11"
    },
    "5099": {
      "op": "ADD"
    },
    "5100": {
      "op": "PUSH2",
      "value": "0x10D5"
    },
    "5103": {
      "jump": "i",
      "op": "JUMP"
    },
    "5104": {
      "op": "JUMPDEST"
    },
    "5105": {
      "op": "SWAP2"
    },
    "5106": {
      "op": "POP"
    },
    "5107": {
      "op": "PUSH2",
      "value": "0x13FE"
    },
    "5110": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5112": {
      "op": "DUP11"
    },
    "5113": {
      "op": "ADD"
    },
    "5114": {
      "op": "PUSH2",
      "value": "0x10D5"
    },
    "5117": {
      "jump": "i",
      "op": "JUMP"
    },
    "5118": {
      "op": "JUMPDEST"
    },
    "5119": {
      "op": "SWAP1"
    },
    "5120": {
      "op": "POP"
    },
    "5121": {
      "op": "SWAP3"
    },
    "5122": {
      "op": "SWAP6"
    },
    "5123": {
      "op": "SWAP9"
    },
    "5124": {
      "op": "POP"
    },
    "5125": {
      "op": "SWAP3"
    },
    "5126": {
      "op": "SWAP6"
    },
    "5127": {
      "op": "SWAP9"
    },
    "5128": {
      "op": "SWAP1"
    },
    "5129": {
      "op": "SWAP4"
    },
    "5130": {
      "op": "SWAP7"
    },
    "5131": {
      "op": "POP"
    },
    "5132": {
      "jump": "o",
      "op": "JUMP"
    },
    "5133": {
      "op": "JUMPDEST"
    },
    "5134": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5136": {
      "op": "DUP1"
    },
    "5137": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5139": {
      "op": "DUP4"
    },
    "5140": {
      "op": "DUP6"
    },
    "5141": {
      "op": "SUB"
    },
    "5142": {
      "op": "SLT"
    },
    "5143": {
      "op": "ISZERO"
    },
    "5144": {
      "op": "PUSH2",
      "value": "0x1420"
    },
    "5147": {
      "op": "JUMPI"
    },
    "5148": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5150": {
      "op": "DUP1"
    },
    "5151": {
      "op": "REVERT"
    },
    "5152": {
      "op": "JUMPDEST"
    },
    "5153": {
      "op": "PUSH2",
      "value": "0x1429"
    },
    "5156": {
      "op": "DUP4"
    },
    "5157": {
      "op": "PUSH2",
      "value": "0x10D5"
    },
    "5160": {
      "jump": "i",
      "op": "JUMP"
    },
    "5161": {
      "op": "JUMPDEST"
    },
    "5162": {
      "op": "SWAP2"
    },
    "5163": {
      "op": "POP"
    },
    "5164": {
      "op": "PUSH2",
      "value": "0x1437"
    },
    "5167": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5169": {
      "op": "DUP5"
    },
    "5170": {
      "op": "ADD"
    },
    "5171": {
      "op": "PUSH2",
      "value": "0x1177"
    },
    "5174": {
      "jump": "i",
      "op": "JUMP"
    },
    "5175": {
      "op": "JUMPDEST"
    },
    "5176": {
      "op": "SWAP1"
    },
    "5177": {
      "op": "POP"
    },
    "5178": {
      "op": "SWAP3"
    },
    "5179": {
      "op": "POP"
    },
    "5180": {
      "op": "SWAP3"
    },
    "5181": {
      "op": "SWAP1"
    },
    "5182": {
      "op": "POP"
    },
    "5183": {
      "jump": "o",
      "op": "JUMP"
    },
    "5184": {
      "op": "JUMPDEST"
    },
    "5185": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5190": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5192": {
      "op": "SHL"
    },
    "5193": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5195": {
      "op": "MSTORE"
    },
    "5196": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "5198": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5200": {
      "op": "MSTORE"
    },
    "5201": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5203": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5205": {
      "op": "REVERT"
    },
    "5206": {
      "op": "JUMPDEST"
    },
    "5207": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5212": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5214": {
      "op": "SHL"
    },
    "5215": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5217": {
      "op": "MSTORE"
    },
    "5218": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "5220": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5222": {
      "op": "MSTORE"
    },
    "5223": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5225": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5227": {
      "op": "REVERT"
    },
    "5228": {
      "op": "JUMPDEST"
    },
    "5229": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5231": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5233": {
      "op": "DUP3"
    },
    "5234": {
      "op": "AND"
    },
    "5235": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5237": {
      "op": "DUP2"
    },
    "5238": {
      "op": "EQ"
    },
    "5239": {
      "op": "ISZERO"
    },
    "5240": {
      "op": "PUSH2",
      "value": "0x1483"
    },
    "5243": {
      "op": "JUMPI"
    },
    "5244": {
      "op": "PUSH2",
      "value": "0x1483"
    },
    "5247": {
      "op": "PUSH2",
      "value": "0x1456"
    },
    "5250": {
      "jump": "i",
      "op": "JUMP"
    },
    "5251": {
      "op": "JUMPDEST"
    },
    "5252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5254": {
      "op": "ADD"
    },
    "5255": {
      "op": "SWAP3"
    },
    "5256": {
      "op": "SWAP2"
    },
    "5257": {
      "op": "POP"
    },
    "5258": {
      "op": "POP"
    },
    "5259": {
      "jump": "o",
      "op": "JUMP"
    },
    "5260": {
      "op": "JUMPDEST"
    },
    "5261": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5263": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "5268": {
      "op": "DUP1"
    },
    "5269": {
      "op": "DUP4"
    },
    "5270": {
      "op": "AND"
    },
    "5271": {
      "op": "DUP2"
    },
    "5272": {
      "op": "DUP2"
    },
    "5273": {
      "op": "EQ"
    },
    "5274": {
      "op": "ISZERO"
    },
    "5275": {
      "op": "PUSH2",
      "value": "0x14A6"
    },
    "5278": {
      "op": "JUMPI"
    },
    "5279": {
      "op": "PUSH2",
      "value": "0x14A6"
    },
    "5282": {
      "op": "PUSH2",
      "value": "0x1456"
    },
    "5285": {
      "jump": "i",
      "op": "JUMP"
    },
    "5286": {
      "op": "JUMPDEST"
    },
    "5287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5289": {
      "op": "ADD"
    },
    "5290": {
      "op": "SWAP4"
    },
    "5291": {
      "op": "SWAP3"
    },
    "5292": {
      "op": "POP"
    },
    "5293": {
      "op": "POP"
    },
    "5294": {
      "op": "POP"
    },
    "5295": {
      "jump": "o",
      "op": "JUMP"
    },
    "5296": {
      "op": "JUMPDEST"
    },
    "5297": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5299": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5301": {
      "op": "DUP3"
    },
    "5302": {
      "op": "AND"
    },
    "5303": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5305": {
      "op": "DUP5"
    },
    "5306": {
      "op": "AND"
    },
    "5307": {
      "op": "DUP1"
    },
    "5308": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5310": {
      "op": "SUB"
    },
    "5311": {
      "op": "DUP3"
    },
    "5312": {
      "op": "GT"
    },
    "5313": {
      "op": "ISZERO"
    },
    "5314": {
      "op": "PUSH2",
      "value": "0x14CD"
    },
    "5317": {
      "op": "JUMPI"
    },
    "5318": {
      "op": "PUSH2",
      "value": "0x14CD"
    },
    "5321": {
      "op": "PUSH2",
      "value": "0x1456"
    },
    "5324": {
      "jump": "i",
      "op": "JUMP"
    },
    "5325": {
      "op": "JUMPDEST"
    },
    "5326": {
      "op": "ADD"
    },
    "5327": {
      "op": "SWAP4"
    },
    "5328": {
      "op": "SWAP3"
    },
    "5329": {
      "op": "POP"
    },
    "5330": {
      "op": "POP"
    },
    "5331": {
      "op": "POP"
    },
    "5332": {
      "jump": "o",
      "op": "JUMP"
    },
    "5333": {
      "op": "JUMPDEST"
    },
    "5334": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5336": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "5339": {
      "op": "DUP11"
    },
    "5340": {
      "op": "DUP4"
    },
    "5341": {
      "op": "MSTORE"
    },
    "5342": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5344": {
      "op": "DUP2"
    },
    "5345": {
      "op": "DUP2"
    },
    "5346": {
      "op": "DUP6"
    },
    "5347": {
      "op": "ADD"
    },
    "5348": {
      "op": "MSTORE"
    },
    "5349": {
      "op": "DUP11"
    },
    "5350": {
      "op": "MLOAD"
    },
    "5351": {
      "op": "DUP1"
    },
    "5352": {
      "op": "DUP4"
    },
    "5353": {
      "op": "DUP7"
    },
    "5354": {
      "op": "ADD"
    },
    "5355": {
      "op": "MSTORE"
    },
    "5356": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5358": {
      "op": "SWAP3"
    },
    "5359": {
      "op": "POP"
    },
    "5360": {
      "op": "JUMPDEST"
    },
    "5361": {
      "op": "DUP1"
    },
    "5362": {
      "op": "DUP4"
    },
    "5363": {
      "op": "LT"
    },
    "5364": {
      "op": "ISZERO"
    },
    "5365": {
      "op": "PUSH2",
      "value": "0x150F"
    },
    "5368": {
      "op": "JUMPI"
    },
    "5369": {
      "op": "DUP12"
    },
    "5370": {
      "op": "DUP4"
    },
    "5371": {
      "op": "ADD"
    },
    "5372": {
      "op": "DUP3"
    },
    "5373": {
      "op": "ADD"
    },
    "5374": {
      "op": "MLOAD"
    },
    "5375": {
      "op": "DUP6"
    },
    "5376": {
      "op": "DUP5"
    },
    "5377": {
      "op": "ADD"
    },
    "5378": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "5381": {
      "op": "ADD"
    },
    "5382": {
      "op": "MSTORE"
    },
    "5383": {
      "op": "SWAP2"
    },
    "5384": {
      "op": "DUP2"
    },
    "5385": {
      "op": "ADD"
    },
    "5386": {
      "op": "SWAP2"
    },
    "5387": {
      "op": "PUSH2",
      "value": "0x14F0"
    },
    "5390": {
      "op": "JUMP"
    },
    "5391": {
      "op": "JUMPDEST"
    },
    "5392": {
      "op": "DUP1"
    },
    "5393": {
      "op": "DUP4"
    },
    "5394": {
      "op": "GT"
    },
    "5395": {
      "op": "ISZERO"
    },
    "5396": {
      "op": "PUSH2",
      "value": "0x1522"
    },
    "5399": {
      "op": "JUMPI"
    },
    "5400": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5402": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "5405": {
      "op": "DUP3"
    },
    "5406": {
      "op": "DUP8"
    },
    "5407": {
      "op": "ADD"
    },
    "5408": {
      "op": "ADD"
    },
    "5409": {
      "op": "MSTORE"
    },
    "5410": {
      "op": "JUMPDEST"
    },
    "5411": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5413": {
      "op": "ADD"
    },
    "5414": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5416": {
      "op": "NOT"
    },
    "5417": {
      "op": "AND"
    },
    "5418": {
      "op": "DUP5"
    },
    "5419": {
      "op": "ADD"
    },
    "5420": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "5423": {
      "op": "ADD"
    },
    "5424": {
      "op": "SWAP3"
    },
    "5425": {
      "op": "POP"
    },
    "5426": {
      "op": "PUSH2",
      "value": "0x1546"
    },
    "5429": {
      "op": "SWAP2"
    },
    "5430": {
      "op": "POP"
    },
    "5431": {
      "op": "POP"
    },
    "5432": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5434": {
      "op": "DUP4"
    },
    "5435": {
      "op": "ADD"
    },
    "5436": {
      "op": "DUP10"
    },
    "5437": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "5442": {
      "op": "AND"
    },
    "5443": {
      "op": "SWAP1"
    },
    "5444": {
      "op": "MSTORE"
    },
    "5445": {
      "op": "JUMP"
    },
    "5446": {
      "op": "JUMPDEST"
    },
    "5447": {
      "op": "SWAP6"
    },
    "5448": {
      "op": "ISZERO"
    },
    "5449": {
      "op": "ISZERO"
    },
    "5450": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5452": {
      "op": "DUP3"
    },
    "5453": {
      "op": "ADD"
    },
    "5454": {
      "op": "MSTORE"
    },
    "5455": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "5460": {
      "op": "SWAP5"
    },
    "5461": {
      "op": "DUP6"
    },
    "5462": {
      "op": "AND"
    },
    "5463": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5465": {
      "op": "DUP3"
    },
    "5466": {
      "op": "ADD"
    },
    "5467": {
      "op": "MSTORE"
    },
    "5468": {
      "op": "SWAP3"
    },
    "5469": {
      "op": "DUP5"
    },
    "5470": {
      "op": "AND"
    },
    "5471": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5473": {
      "op": "DUP5"
    },
    "5474": {
      "op": "ADD"
    },
    "5475": {
      "op": "MSTORE"
    },
    "5476": {
      "op": "SWAP1"
    },
    "5477": {
      "op": "DUP4"
    },
    "5478": {
      "op": "AND"
    },
    "5479": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5481": {
      "op": "DUP4"
    },
    "5482": {
      "op": "ADD"
    },
    "5483": {
      "op": "MSTORE"
    },
    "5484": {
      "op": "SWAP1"
    },
    "5485": {
      "op": "SWAP2"
    },
    "5486": {
      "op": "AND"
    },
    "5487": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5489": {
      "op": "SWAP1"
    },
    "5490": {
      "op": "SWAP2"
    },
    "5491": {
      "op": "ADD"
    },
    "5492": {
      "op": "MSTORE"
    },
    "5493": {
      "op": "SWAP4"
    },
    "5494": {
      "op": "SWAP3"
    },
    "5495": {
      "op": "POP"
    },
    "5496": {
      "op": "POP"
    },
    "5497": {
      "op": "POP"
    },
    "5498": {
      "jump": "o",
      "op": "JUMP"
    },
    "5499": {
      "op": "JUMPDEST"
    },
    "5500": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5502": {
      "op": "DUP3"
    },
    "5503": {
      "op": "NOT"
    },
    "5504": {
      "op": "DUP3"
    },
    "5505": {
      "op": "GT"
    },
    "5506": {
      "op": "ISZERO"
    },
    "5507": {
      "op": "PUSH2",
      "value": "0x158E"
    },
    "5510": {
      "op": "JUMPI"
    },
    "5511": {
      "op": "PUSH2",
      "value": "0x158E"
    },
    "5514": {
      "op": "PUSH2",
      "value": "0x1456"
    },
    "5517": {
      "jump": "i",
      "op": "JUMP"
    },
    "5518": {
      "op": "JUMPDEST"
    },
    "5519": {
      "op": "POP"
    },
    "5520": {
      "op": "ADD"
    },
    "5521": {
      "op": "SWAP1"
    },
    "5522": {
      "jump": "o",
      "op": "JUMP"
    },
    "5523": {
      "op": "JUMPDEST"
    },
    "5524": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5526": {
      "op": "DUP3"
    },
    "5527": {
      "op": "DUP3"
    },
    "5528": {
      "op": "LT"
    },
    "5529": {
      "op": "ISZERO"
    },
    "5530": {
      "op": "PUSH2",
      "value": "0x15A5"
    },
    "5533": {
      "op": "JUMPI"
    },
    "5534": {
      "op": "PUSH2",
      "value": "0x15A5"
    },
    "5537": {
      "op": "PUSH2",
      "value": "0x1456"
    },
    "5540": {
      "jump": "i",
      "op": "JUMP"
    },
    "5541": {
      "op": "JUMPDEST"
    },
    "5542": {
      "op": "POP"
    },
    "5543": {
      "op": "SUB"
    },
    "5544": {
      "op": "SWAP1"
    },
    "5545": {
      "jump": "o",
      "op": "JUMP"
    },
    "5546": {
      "op": "JUMPDEST"
    },
    "5547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5549": {
      "op": "DUP2"
    },
    "5550": {
      "op": "DUP2"
    },
    "5551": {
      "op": "SHR"
    },
    "5552": {
      "op": "SWAP1"
    },
    "5553": {
      "op": "DUP3"
    },
    "5554": {
      "op": "AND"
    },
    "5555": {
      "op": "DUP1"
    },
    "5556": {
      "op": "PUSH2",
      "value": "0x15BE"
    },
    "5559": {
      "op": "JUMPI"
    },
    "5560": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "5562": {
      "op": "DUP3"
    },
    "5563": {
      "op": "AND"
    },
    "5564": {
      "op": "SWAP2"
    },
    "5565": {
      "op": "POP"
    },
    "5566": {
      "op": "JUMPDEST"
    },
    "5567": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5569": {
      "op": "DUP3"
    },
    "5570": {
      "op": "LT"
    },
    "5571": {
      "op": "DUP2"
    },
    "5572": {
      "op": "EQ"
    },
    "5573": {
      "op": "ISZERO"
    },
    "5574": {
      "op": "PUSH2",
      "value": "0x6DE"
    },
    "5577": {
      "op": "JUMPI"
    },
    "5578": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5583": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5585": {
      "op": "SHL"
    },
    "5586": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5588": {
      "op": "MSTORE"
    },
    "5589": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "5591": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5593": {
      "op": "MSTORE"
    },
    "5594": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5596": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5598": {
      "op": "REVERT"
    }
  },
  "sha1": "4958e0bcb884f09879e00ac304af8ac721f9bbee",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract SimpleElection {\n    //Structure of an election\n    struct Election {\n        bytes32 name;\n        string description;\n        uint32 id;\n        bool requireRegitration;\n        uint32 startElection;\n        uint32 endElection;\n        uint32 startRegistration;\n        uint32 endRegistration;\n    }\n\n    mapping(bytes32 => uint32) electionsIds; //list of current elections\n    uint32[] currentElections;\n\n    //Structure of candidate standing in an election\n    struct Candidate {\n        bytes32 name; //name of the proposal\n        uint256 voteCount; //votes received\n    }\n\n    //Structure of a voter\n    struct Voter {\n        uint256 weight; // weight is accumulated by delegation\n        bool voted; // if true, that person already voted\n    }\n\n    //Mapping of the elections\n    mapping(uint32 => Election) elections;\n\n    //Mappings of the proposals for every election\n    mapping(uint32 => mapping(uint8 => Candidate)) public candidates;\n\n    mapping(uint32 => mapping(bytes32 => uint8)) public candidatesIds;\n\n    //List of the proposal for every election\n    mapping(uint32 => uint8[]) public candidatesList;\n\n    //Mapping of the voters for every election\n    mapping(uint32 => mapping(address => Voter)) public voters;\n\n    //A nonce to assign the id to the elections\n    uint32 electionNonce = 1;\n    uint32 electionCount = 1;\n\n    event ElectionCreated(\n        bytes32 name,\n        string description,\n        uint256 electionId,\n        bool requireRegitration,\n        uint32 startElection,\n        uint32 endElection,\n        uint32 startRegistration,\n        uint32 endRegistration\n    );\n    event Voted(\n        uint32 electionId,\n        address voter,\n        uint8 _candidateId,\n        uint256 _weight\n    );\n\n    //A function that creates an election structure.\n    function createElection(\n        bytes32 _name, //name of the election\n        string memory _description, //a description\n        bool _requireRegitration, //true if is required a registration\n        bytes32[] memory _candidates, //the list of proposals\n        uint32 _startElection, //date of the begin of the election period\n        uint32 _endElection, //date of the end of the election period\n        uint32 _startRegistration, //date of the begin of the registration period\n        uint32 _endRegistration //date of the end of the registration period\n    ) public {\n        require(_candidates.length > 0, \"There should be atleast 1 candidate.\");\n\n        require(\n            !electionExists(_name),\n            \"This election already exists, please select other name\"\n        );\n        uint32 electionId = electionNonce;\n        elections[electionId] = Election(\n            _name,\n            _description,\n            electionId,\n            _requireRegitration,\n            _startElection,\n            _endElection,\n            _startRegistration,\n            _endRegistration\n        );\n        electionsIds[_name] = electionId;\n        currentElections.push(electionId);\n\n        for (uint8 i = 0; i < _candidates.length; i++) {\n            addCandidate(electionId, _candidates[i], i + 1);\n        }\n        emit ElectionCreated(\n            _name,\n            _description,\n            electionId,\n            _requireRegitration,\n            _startElection,\n            _endElection,\n            _startRegistration,\n            _endRegistration\n        );\n        electionNonce++;\n        electionCount++;\n    }\n\n    //Private function to add a candidate\n    function addCandidate(\n        uint32 _electionId,\n        bytes32 _candidateName,\n        uint8 _candidateId\n    ) private {\n        candidates[_electionId][_candidateId] = Candidate(_candidateName, 0);\n        candidatesIds[_electionId][_candidateName] = _candidateId;\n        candidatesList[_electionId].push(_candidateId);\n    }\n\n    //Private vote function for voting a candidate\n    function voterVote(\n        uint32 _electionId, //the election in which vote\n        address _voter, //the voter\n        uint8 _candidateId, //the proposal to vote\n        uint256 _weight //\"how many times\" vote\n    ) private {\n        require(electionExists(_electionId), \"The election doesn't exist\");\n        require(checkElectionOpen(_electionId), \"The election is closed\");\n        if (elections[_electionId].requireRegitration) {\n            require(\n                voterHasRegistred(_electionId, _voter),\n                \"Voter hasn't registered\"\n            );\n        } else {\n            registerVoter(_electionId, _voter);\n        }\n        require(\n            !voterHasVoted(_electionId, _voter),\n            \"Voter has already Voted!\"\n        );\n        require(\n            _weight <= voters[_electionId][_voter].weight,\n            \"Voter do not have so many votes\"\n        );\n        require(\n            candidateExists(_electionId, _candidateId),\n            \"Invalid candidate to Vote!\"\n        );\n\n        //update the vote count of the voted proposal\n        candidates[_electionId][_candidateId].voteCount =\n            candidates[_electionId][_candidateId].voteCount +\n            _weight;\n\n        //subtract the votes to the voter Structure\n        voters[_electionId][_voter].weight =\n            voters[_electionId][_voter].weight -\n            _weight;\n\n        //set the variable voted to true if the voter does not have other votes\n        if (voters[_electionId][_voter].weight == 0) {\n            voters[_electionId][_voter].voted = true;\n        }\n\n        emit Voted(_electionId, _voter, _candidateId, _weight);\n    }\n\n    //Public function to vote\n    function vote(\n        uint32 _electionId, //the election in which vote\n        uint8 _candidateId, //the proposal to vote\n        uint256 _weight //\"how many times\" vote\n    ) public {\n        voterVote(_electionId, msg.sender, _candidateId, _weight);\n    }\n\n    //get list of elections\n    function getCurrentElections() public view returns (bytes32[] memory) {\n        bytes32[] memory result = new bytes32[](currentElections.length);\n        for (uint32 i = 0; i < currentElections.length; i++) {\n            result[i] = elections[currentElections[i]].name;\n        }\n        return result;\n    }\n\n    //get list of proposal of an election\n    function getCandidatesForElection(uint32 _electionId)\n        public\n        view\n        returns (bytes32[] memory)\n    {\n        require(electionExists(_electionId), \"The election doesn't exist\");\n        bytes32[] memory result = new bytes32[](\n            candidatesList[_electionId].length\n        );\n        for (uint8 i = 0; i < candidatesList[_electionId].length; i++)\n            result[i] = candidates[_electionId][candidatesList[_electionId][i]]\n                .name;\n        return result;\n    }\n\n    //register for an election\n    function registerVoter(uint32 _electionId, address voter) private {\n        voters[_electionId][voter].weight = 1;\n    }\n\n    function register(uint32 _electionId) public {\n        require(checkRegistrationOpen(_electionId), \"Registration not open\");\n        registerVoter(_electionId, msg.sender);\n    }\n\n    function checkRegistrationOpen(uint32 _electionId)\n        public\n        view\n        returns (bool)\n    {\n        return ((elections[_electionId].startRegistration <= block.timestamp) &&\n            (elections[_electionId].endRegistration >= block.timestamp));\n    }\n\n    function checkElectionOpen(uint32 _electionId) public view returns (bool) {\n        return ((elections[_electionId].startElection <= block.timestamp) &&\n            (elections[_electionId].endElection >= block.timestamp));\n    }\n\n    function voterHasRegistred(uint32 _electionId, address voter)\n        public\n        view\n        returns (bool)\n    {\n        return ((voters[_electionId][voter].weight != 0) ||\n            (voters[_electionId][voter].voted == true));\n    }\n\n    function voterHasVoted(uint32 _electionId, address voter)\n        public\n        view\n        returns (bool)\n    {\n        return voters[_electionId][voter].voted;\n    }\n\n    function electionExists(bytes32 _electionName) public view returns (bool) {\n        return electionsIds[_electionName] != 0;\n    }\n\n    function electionExists(uint32 _electionId) public view returns (bool) {\n        return elections[_electionId].id != 0;\n    }\n\n    function candidateExists(uint32 _electionId, uint8 _candidateId)\n        public\n        view\n        returns (bool)\n    {\n        return (candidates[_electionId][_candidateId].name != 0);\n    }\n}\n",
  "sourceMap": "57:8456:0:-:0;;;1354:24;;;-1:-1:-1;;;;;;1384:24:0;;;;;57:8456;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/SimpleElection.sol",
  "type": "contract"
}